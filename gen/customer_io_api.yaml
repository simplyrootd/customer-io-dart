openapi: 3.0.0
info:
  version: 1.0.0
  title: Customer.io API Reference
  description: |
    Customer.io provides REST APIs to send real-time customer data, retrieve data from your account, and trigger messages.

    # Overview

    undefined<div class="fly-panel fly-light regionUS">
    undefined<div class="fly-panel-body us-server">
    undefined<p class="text--bold">These APIs are for the United States (US) region</p>
    undefined<p>If your account is based in the European Union (EU) data center, you should undefined<a id='eu-anchor' onClick="anchorToRegion(this.id)">switch to the EU region's API documentation</a>. While we redirect traffic from US track API endpoints to EU-based accounts, this traffic still passes through US servers and data may be logged in the US. Our other APIs are not redirected this way, and will fail (401) if you send your request to the wrong regional endpoint.undefined</p>
    undefined<p>If you don't know your region, you can undefined<b>find your account region</b> on undefined<a href="https://fly.customer.io/settings/privacy">your account's privacy page</a>, or undefined<a href="#operation/getRegion">get your region using the API</a>.undefined</p>
    undefined</div>
    undefined<div class="fly-panel-body eu-server">
    undefined<p class="text--bold">These APIs are for the European Union (EU) region</p>
    undefined<p>If your account is based in the United States (US) data center, requests to EU endpoints will fail. undefined<a id='us-anchor' onClick="anchorToRegion(this.id)">Switch to the US region's API documentation.</a>undefined</p>
    undefined<p>If you don't know your region, you can undefined<b>find your account region</b> on undefined<a href="https://fly.customer.io/settings/privacy">your account's privacy page</a>, or undefined<a href="#operation/getRegion">get your region using the API</a>.undefined</p>
    undefined</div>undefined</div>


    Customer.io hosts services in the United States (US) and European Union (EU, host subdomains are suffixed with `-eu`). Select the appropriate region for server addresses that apply to your region.

    undefined<table id="hosts">
      undefined<tr>undefined<th>Host/Server</th>undefined<th>Purpose</th>undefined</tr>
      undefined<tr>undefined<td class='server-url'>undefined<a href='#tag/trackOverview'>undefined<code>https://track.customer.io/api/v1/</code>undefined</a>undefined</td>undefined<td>Use the undefined<b>Track API</b> to report customer attributes and track customer events/activity. You cannot retrieve data using this API. Track endpoints support minimal validation to ensure as close to real-time processing as possible.undefined</td>undefined</tr>
      undefined<tr>undefined<td class='server-url'>undefined<a href='#tag/appOverview'>undefined<code>https://api.customer.io/v1/</code>undefined</a>undefined</td>undefined<td>Use the undefined<b>App API</b> to send Transactional messages and API triggered broadcasts. This API uses bearer token authorization, helping you control who uses it. Most requests to this API are limited to 10 pers second. The exceptions are undefined<a href="#triggerBroadcast">API-triggered broadcasts</a>, which are limited to 1 request every 10 seconds, and undefined<a href="#sendEmail">Transactional messages</a> which are limited to 100 per second.undefined</td>undefined</tr> 
    undefined</table>

    # Client libraries

    Check out our [Track API section](#trackJsOrBackend) if you're looking for information about the Javascript snippet.

    We provide client libraries to support integrations with our Track and App APIs in whatever language you prefer. Take advantage of our client libraries to simplify your integration and take advantage of operations tailored to your language of choice. 

    NOTE: Where possible, code samples on this page for our Track and App APIs reflect an integration with a relevant library. Otherwise, our code samples show HTTP client operations. 

    * [Node.js](https://github.com/customerio/customerio-node)
    * [Python](https://github.com/customerio/customerio-python)
    * [Go](https://github.com/customerio/go-customerio)
    * [Ruby](https://github.com/customerio/customerio-ruby)

    # Authentication 

    You can find all of your API authentication information in your [Account Settings](https://fly.customer.io/settings/api_credentials). Our Tracking API uses HTTP basic authorization. The App API uses bearer authorization, and you can generate tokens supporting different scopes. Each operation in this document references the authorization header it requires.

    undefined<SecurityDefinitions />
tags:
  - name: trackOverview
    x-displayName: Track API Overview
    x-traitTag: true
    description: |
      The behavioral tracking API lets you send us data about customers and events representing their activity, so you can identify and track customers with Customer.io. Use this API to add people, set their attributes, and attribute events to them.      
  - name: trackJsOrBackend
    x-displayName: Javascript Snippet vs Backend Integrations
    x-traitTag: true
    description: |
      ```
      undefined<script type="text/javascript">
          var _cio = _cio || [];
          (function() {
              var a,b,c;a=function(f){return function(){_cio.push([f].
              concat(Array.prototype.slice.call(arguments,0)))}};b=["load","identify",
              "sidentify","track","page"];for(c=0;cundefined<b.length;c++){_cio[b[c]]=a(b[c])};
              var t = document.createElement('script'),
                  s = document.getElementsByTagName('script')[0];
              t.async = true;
              t.id    = 'cio-tracker';
              t.setAttribute('data-site-id', 'YOUR_SITE_ID');
              t.setAttribute('data-use-array-params', 'true');
              t.src = 'https://assets.customer.io/assets/track.js';
              s.parentNode.insertBefore(t, s);
          })();
      </script>
      ```
      You can integrate with this API using a javascript snippet, by consuming the API directly, or both.

      You can simply copy/paste the Javascript snippet to your site to track basic customer behaviors directly from your website. In many cases, using the Javascript snippet is easier to integrate with your app, but there are several reasons why you may want to send events from your backend systems:

      * Ad blockers are becoming more prevalent as people and browsers increasingly try to avoid 3rd-party JS trackers.
      * You don't plan to trigger emails based on how customers interact with your website (e.g. users who haven’t visited the site in X days).
      * You use the Javascript snippet, but have a few events you’d like to send from your backend system. They will work well together!
      * You would rather not have another Javascript snippet slowing down your frontend. Our snippet is asynchronous (doesn’t affect initial page load) and very small, but we understand.

      You should base your decision to send events from your backend or a Javascript snippet on what works best for you. You can fully integrate with Customer.io using either approach.
  - name: trackLimit
    x-displayName: Track API Limits
    x-traitTag: true
    description: |
      The Behavioral Tracking API (`track.customer.io`) has a fair-use rate limit of 100/requests per second for both active data integrations and historical backfill scripts. If you need to exceed 100 requests per second, contact support. Also note, there is no strictly enforced rate limit at which point Customer.io will drop your data.

      If track.customer.io calls unexpectedly exceed 100 requests per second, we will reach out to help you correct your integration. However we reserve the right to block your API calls if your integration exceeds this limit in a way that degrades performance for our other customers. 

      Below are the payload size limits for the Track API. If any of these limits are too restrictive for your needs, contact support to let us know your situation as we may be able to accommodate special circumstances. 

      ## Track API Customer limits

      | Data Type | Limit | Description |
      | -- | -- | -- |
      | Customer ID | 150 bytes | Max length of each customer ID value for Identify call |
      | Customer Attribute Name | 150 bytes | Max length of each attribute name for Identify call |
      | Customer Attribute Value | 1000 bytes | Max length of each attribute values for Identify call |
      | Unique Identify attributes | 300 | Max number of attributes that can be included per Identify call |

      ## Track API Event limits

      | Data Type | Limit | Description |
      | -- | -- | -- |
      | Event Name | 100 bytes | Max length of each event name for Track call |
      | Event Data | 100000 bytes | Max length of each event data for Track call |
  - name: trackRegion
    x-displayName: Account Region
    description: |
      Determine whether your account and data are hosted in the US or EU data center using your [Track API Key](https://fly.customer.io/settings/api_credentials).
  - name: Track Customers
    x-displayName: Customers
    description: Add, modify, suppress, or unsuppress people (referred to as "customers" in our APIs). You can also use these endpoints to set attributes on people.
  - name: Track Events
    x-displayName: Events
    description: Use customer events to trigger campaigns or add users to segments. You can attribute events directly to customers, or incorporate anonymous events to send invitation emails.
  - name: Track Segments
    x-displayName: Segments
    description: |
      Manual segments are lists of people that you incorporate using the API or by uploading CSVs. You can add people to, or remove people from, manual segments with these endpoints. These endpoints do _not_ let you modify data-driven segments.

      **NOTE**: These endpoints do not yet support workspaces that use both `email` and `id` as identifiers.

      A segment must exist before you can add people to it. You can create manual segments using the [App API `/segments` endpoints](/docs/api/#operation/createManSegment).
  - name: Forms
    description: Connect forms to your workspace to identify people, apply form responses to people, and trigger campaigns for people who fill out forms on your website or in your app.
  - name: appOverview
    x-displayName: App API Overview
    x-traitTag: true
    description: |
      The App API provides methods to send transactional messages and trigger broadcasts. In both cases, your payload acts as a message "trigger" and can contain `data` that you reference in your messages using liquid—`{{trigger.undefined<data>}}`.

      The other endpoints help you retrieve information about people, segments, campaigns, broadcasts, etc; it also lets you update campaign actions, messages, newsletter variants, etc. Aside from the [API-triggered broadcast](#triggerBroadcast) (1 per 10 seconds) and [Transactional](#sendEmail) (100 per second) endpoints, requests are limited to 10 per second.

      undefined<div class="fly-panel bg-info">
          undefined<div class="fly-panel-body">
              undefined<p class="callout-head text--bold text-info mrg-t-none">undefined<svg viewBox="0 0 24 24" class="api-icon" style="fill: #055666;width: 1.5rem;height: 1.5rem;">undefined<use viewBox="0 0 24 24" href="#info" />undefined</svg>&nbsp;The Beta API has been released!undefined</p>
              undefined<div class='text-info'>Beta API endpoints were officially released February 28, 2022 and their paths added to the App API. If you previously integrated with beta API endpoints, you can continue to use those paths, but all endpoints formerly available under undefined<code>https://beta-api.customer.io/v1/api/</code> are now also available at undefined<code>https://api.customer.io/v1/</code> and are considered stable/released.undefined</div>
          undefined</div>
      undefined</div>
  - name: appLimit
    x-displayName: App API Limits
    x-traitTag: true
    description: |
      Aside from Transactional and Broadcast trigger endpoints, this API is limited to 10 requests per second. The [transactional email](#operation/sendEmail) endpoint is limited to 100 requests per second. The [API-triggered broadcast endpoint](#operation/triggerBroadcast) is limited to 1 request every 10 seconds. 

      ## API triggered broadcast limits

      While [API triggered broadcasts](#operation/triggerBroadcast) are limited to 1 request every 10 seconds, they're also limited by the number of triggers you can have queued at a time, as shown in the table below.

      | Data Type | Limit | Description |
      | -- | -- | -- |
      | Trigger Payload | 1MB | Max length of the entire Trigger call |
      | Trigger Data | 50000 bytes | Max length of the data section in the Trigger call |
      | Recipient Listundefined<sup>1</sup> | 10000 recipients | Max number of ids or emails included in the Trigger call |
      | Custom Per User Dataundefined<sup>1</sup> | 10000 entries | Max number of entries in `per_user_data` |
      | Custom Per User Dataundefined<sup>1</sup> | 2MB | Max length per user in the `per_user_data` or file referenced by `data_file_url`. |
      | Custom Per User Dataundefined<sup>1</sup> | 10GB | Max length of the entire `per_user_data` or the size of the file referenced by `data_file_url` |
      | Trigger Queue | 5 triggers | Max number of triggers waiting to be processed consecutively |

      undefined<sup>1</sup>For larger data sets, use `data_file_url` to supply a link to a file that contains your merge data. Attempting to send too much data in a single API call will fail.

      ## Transactional Message Limits

      The [`/send-email` (transactional email)](#operation/sendEmail) endpoint is limited to 100 requests per second.

      | Data Type | Limit | Description |
      | -- | -- | -- |
      | Payload | 1MB | Max length of the payload, excepting attachments |
      | Attachments | 2MB | Maximum size of attachments |
      | Recipients | 15 | Total number of recipients across the `to` and `bcc` fields. |

      ## All other requests

      All App API endpoints other than [API-Triggered Broadcasts](#operation/triggerBroadcast) and [Transactional Messages](#operation/sendEmail) are limited to 10 requests per second. Requests over the limit are rejected with a 429 status code.
  - name: appAuth
    x-displayName: App API Authentication
    x-traitTag: true
    description: |
      All requests to the Customer.io App API use an [App API Key](#App-API-Key).

      To authenticate, provide your key as a Bearer token in a HTTP Authorization header. You can create and manage your API keys in [your account settings page](https://fly.customer.io/settings/api_credentials?keyType=app).
  - name: Broadcasts
    x-displayName: Broadcasts
    description: |
      In the UI, we frequently refer to broadcasts that you trigger through these endpoints as "API triggered" broadcasts. Use these endpoints to trigger a broadcast and retrieve information about broadcast triggers. When you trigger a broadcast, you can include `data` that you reference in your message (using a liquid `{{trigger.undefined<property>}}` filter).

      While you can trigger and look up information about broadcasts using the API, you must perform all other create, update, and/or delete operations through the UI.
  - name: Transactional
    x-displayName: Transactional Messages
    description: |
      Send, and return information about, transactional messages. Transactional messages are messages that your audience explicitly requests or expects, like purchase receipts or password reset requests.

      The `transactional_id` in requests represents the transactional message template. Each individual send—the instance of a message sent to an individual person—is called a "delivery".
  - name: Customers
    x-displayName: Customers
    description: |
      Find people (referred to as "customers" in our APIs), their attributes, the segments they belong to, etc. Use the [track API](#tag/Track-Customers) to add people to your workspace and assign their attributes. 
  - name: Campaigns
    x-displayName: Campaigns
    description: |
      A campaign is a workflow that people in your audience trigger and traverse. The items that happen within the workflow—messages, attribute changes, webhooks, etc that your audience triggers—are called actions. 

      These endpoints return information about campaigns including metrics and the actions included in campaigns. You can update individual campaign actions from these endpoints, but you must perform all other create, update, and/or delete operations through the UI.
  - name: Newsletters
    description: |
      A newsletter is a type of broadcast in Customer.io—a one-time, single message that you send to a group of people. You can also set your newsletter up with A/B test variants.

      These endpoints return information about newsletters including metrics and A/B test variants. You can update variants in newsletters from these endpoints, but you must perform all other create, update, and/or delete operations through the UI.
  - name: Segments
    description: |
      Segments are groups of people, subsets of your audience. You get get information about segments and the customers contained by a segment. You can also create or delete manual segments through the API. Use the UI to create, update, or delete data-driven segments.
  - name: Messages
    description: |
      Return information about message and webhook "deliveries"—the instance of a message or webhook intended for an individual recipient.
  - name: Exports
    description: |
      Export information about people, deliveries, etc. You can also download existing exports from these endpoints.
  - name: Activities
    description: |
      Return information about activities. Activities are cards in campaigns, broadcasts, etc. They might be messages, webhooks, attribute changes, etc.
  - name: Sender Identities
    description: |
      Return information about your senders—the addresses that you send messages from—including usage information for your different senders.
  - name: Reporting Webhooks
    description: |
      Set up webhooks to inform an external service about Customer.io events. Webhooks can notify you immediately when immediately when customer attributes change or when people open your messages.
  - name: Snippets
    description: |
      Snippets are reusable pieces of messages, like a common email footer or link that you use in your messages. Use these endpoints to create, get, or delete snippets.
  - name: Info
    description: |
      Returns the list of addresses used by Customer.io. You must add add these addresses to your allowlist when using a custom SMTP provider and blocking unknown IP addresses.
  - name: Collections
    description: |
      Collections are arbitrary sets of data that you want to use in campaign messages or workflows independent of attributes or events. They might represent things like upcoming events, coupons/promotions, etc.
  - name: ESP Suppression
    description: |
      If you use Customer.io as your email service provider (ESP), these endpoints help you retrieve information about email addresses suppressed directly by the ESP. ESP-based suppressions are different from suppression in Customer.io: these are addresses that the ESP suppressed automatically because a message bounced, a customer requested they not be contacted again, etc. These are _not_ addresses that you deleted and suppressed either in our UI or through [the API](#operation/suppress).
servers:
  - url: https://track.customer.io
    description: The base URL for the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
  - url: https://api.customer.io
    description: The base URL for broadcasts, transactional messages, and data-retrieval APIs. These endpoints use bearer authorization, and require a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
x-tagGroups:
  - name: Track API
    tags:
      - trackOverview
      - trackJsOrBackend
      - trackLimit
      - trackRegion
      - Track Customers
      - Track Events
      - Forms
      - Track Segments
  - name: App API
    tags:
      - appOverview
      - appLimit
      - appAuth
      - Activities
      - Broadcasts
      - Campaigns
      - Collections
      - Customers
      - ESP Suppression
      - Exports
      - Info
      - Messages
      - Newsletters
      - Reporting Webhooks
      - Segments
      - Sender Identities
      - Snippets
      - Transactional
components:
  securitySchemes:
    Basic-Auth-(Tracking-API-Key):
      type: http
      scheme: basic
      description: |
        The Track API uses a basic authentication scheme. Your credentials are your **Site ID** and your **API key**, **Base-64 encoded** in the format `site_id:api_key`.

        You can find your Site ID and API key on the [Track API Keys page](https://fly.customer.io/settings/api_credentials).
    Bearer-Auth-(App-API-Key):
      type: http
      scheme: bearer
      description: |
        The App API uses a bearer authentication scheme.

        You can generate a bearer token, known as an **App API Key**, with a defined scope in [your account settings](https://fly.customer.io/settings/api_credentials?keyType=app). [Learn more about bearer authorization in Customer.io](https://customer.io/docs/managing-credentials).
  parameters:
    suppression_type:
      name: suppression_type
      description: The reason a person's email address was suppressed by the email service provider (ESP).
      in: path
      required: true
      schema:
        type: string
        enum:
          - bounces
          - blocks
          - spam_reports
          - invalid_emails
    transactional_id:
      name: transactional_id
      description: The identifier for a transactional message template.
      in: path
      required: true
      schema:
        type: integer
    collection_id:
      name: collection_id
      description: The identifier for a collection.
      in: path
      required: true
      schema:
        type: integer
    delivery_id:
      name: delivery_id
      description: The delivery resulting in a request to unsubscribe.
      in: path
      required: true
      schema:
        type: string
    activityTypes:
      name: type
      description: The type of activity you want to search for.
      in: query
      required: false
      schema:
        description: The activity type.
        type: string
        enum:
          - page
          - event
          - attribute_change
          - failed_attribute_change
          - stripe_event
          - drafted_email
          - failed_email
          - dropped_email
          - sent_email
          - spammed_email
          - bounced_email
          - delivered_email
          - triggered_email
          - opened_email
          - clicked_email
          - converted_email
          - unsubscribed_email
          - attempted_email
          - undeliverable_email
          - device_change
          - attempted_action
          - drafted_action
          - sent_action
          - delivered_action
          - bounced_action
          - failed_action
          - converted_action
          - undeliverable_action
          - opened_action
          - secondary:dropped_email
          - secondary:spammed_email
          - secondary:bounced_email
          - secondary:delivered_email
          - secondary:opened_email
          - secondary:clicked_email
          - secondary:failed_email
        example: sent_email
    sender_id:
      name: sender_id
      in: path
      required: true
      description: The identifier of a sender.
      schema:
        type: integer
    sort:
      name: sort
      in: query
      description: Determine how you want to sort results, `asc` for chronological order and `desc` for reverse chronological order.
      required: false
      schema:
        type: string
        enum:
          - asc
          - desc
    activityName:
      name: name
      in: query
      description: The name of the event or attribute you want to return.
      required: false
      schema:
        type: string
        example: something_happened
    deleted:
      name: deleted
      in: query
      description: If true, return results for deleted people.
      required: false
      schema:
        type: boolean
        default: false
    customer_id_query:
      name: customer_id
      required: false
      in: query
      description: |
        The `identifier` of the person you want to look up. By default, this is a person's `id`. You can use the `id_type` parameter to look up a person by `email` or `cio_id`.

        If you use a person's `cio_id`, you must prefix the value value with `cio_` when using it to find or reference a person (i.e. `cio_03000010` for a `cio_id` value of 03000010).
      schema:
        type: string
    id_type:
      name: id_type
      required: false
      in: query
      description: The type of `customer_id` you want to use to reference a person. If you don't provide this parameter, we assume that the `customer_id` in your request is a person's `id`.
      schema:
        type: string
        enum:
          - id
          - email
          - cio_id
    export_id:
      name: export_id
      in: path
      required: true
      description: The export_id you want to access.
      schema:
        type: integer
    newsletter_id:
      name: newsletter_id
      in: path
      required: true
      description: The identifier of a newsletter.
      schema:
        type: integer
    content_id:
      name: content_id
      in: path
      required: true
      description: The identifier of a newsletter variant—a language in a multi-language message or an individual test in an A/B test. You can [list your newsletter's variants](#operation/listNewsletterVariants) to find your newsletter's variants.
      schema:
        type: integer
    webhook_id:
      name: id
      in: path
      required: true
      description: The identifier of a webhook.
      schema:
        type: integer
    message_id:
      name: message_id
      in: path
      required: true
      description: The identifier of a message.
      schema:
        type: string
    campaign_id_query:
      name: campaign_id
      in: query
      required: false
      description: The campaign you want to filter for.
      schema:
        type: integer
    newsletter_id_query:
      name: newsletter_id
      in: query
      required: false
      description: The newsletter you want to filter for.
      schema:
        type: integer
    action_id_query:
      name: action_id
      in: query
      required: false
      description: The action you want to filter for.
      schema:
        type: integer
    campaign_id:
      name: campaign_id
      in: path
      required: true
      description: The ID of the campaign that you want to trigger or return information about.
      schema:
        type: integer
        example: 2
    trigger_id:
      name: trigger_id
      in: path
      required: true
      description: The ID of the campaign trigger that you want to return information for.
      schema:
        type: integer
        example: 3
    track_customer_id:
      name: identifier
      required: true
      in: path
      description: |
        The unique value representing a person. The values you use to identify a person may be an `id`, `email` address, or the `cio_id` (when updating people), depending on your workspace settings. When you reference people by `cio_id`, you must preference the value with `cio_`.
      schema:
        oneOf:
          - title: id
            type: string
            example: 12345
            description: The unique identifier for a person that you want to create or modify.
          - title: email
            type: string
            example: person@example.com
            description: A person's email address. If adding a new person in an email-based workspace, you must use this value.
          - title: cio_id
            type: string
            format: cio_[a-zA-Z0-9]*
            description: |
              A canonical identifier assigned by Customer.io when you add a person. When referencing a person by this value, you must prefix the value with `cio_`. You can [look up a person using the App API](#tag/Customers) to find their `cio_id`. 

              You must use this value to update a person's other identifiers—their `id` or `email`, unless you enable your workspace's [Allow updates to email using ID](/docs/workspaces/#update-email-with-id) setting.
            example: cio_03000001
    trackEvent_customer_id:
      name: identifier
      required: true
      in: path
      description: |
        The unique value representing a person. You may identify a person by `id`, `email` address, or the `cio_id` (when updating people), depending on your workspace settings.
      schema:
        oneOf:
          - title: id
            type: string
            example: 12345
            description: The unique identifier you assigned to a person.
          - title: email
            type: string
            example: person@example.com
            description: A person's email address.
          - title: cio_id
            type: string
            format: cio_[a-zA-Z0-9]*
            description: |
              A canonical identifier assigned by Customer.io when you add a person. When referencing a person by this value, you must prefix the value with `cio_`. You can [look up a person using the App API](#tag/Customers) to find their `cio_id`, but you must prefix this value with `cio_` when using it to reference a person.

              You can use this value to update a person's other identifiers—their `id` or `email`.
            example: cio_03000001
    customer_id:
      name: customer_id
      required: true
      in: path
      description: The ID of the customer you want to perform an operation against.
      schema:
        type: string
        example: 12345
    device_id:
      name: device_id
      in: path
      required: true
      description: The ID of the device you want to perform an operation against.
      schema:
        type: string
    segment_id:
      name: segment_id
      in: path
      required: true
      description: The identifier for a segment. You can find your segment's ID on its page in the dashboard—go to *Segments*, select your segment, and find the ID under *Usage*. Or you can find your segment using the [App API](#tag/Segments).
      schema:
        type: integer
        format: int32
    start:
      name: start
      in: query
      required: false
      description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
      schema:
        type: string
    limit:
      name: limit
      in: query
      required: false
      description: The maximum number of results you want to retrieve per page.
      schema:
        type: integer
    limit-10-100:
      name: limit
      in: query
      required: false
      description: The maximum number of results you want to retrieve per page.
      schema:
        type: integer
        default: 10
        maximum: 100
    limit-50-1000:
      name: limit
      in: query
      required: false
      description: The maximum number of results you want to retrieve per page.
      schema:
        type: integer
        default: 50
        maximum: 1000
    action_id:
      name: action_id
      in: path
      required: true
      description: The action you want to lookup or act on.
      schema:
        type: integer
    period:
      name: period
      in: query
      required: false
      description: The unit of time for your report.
      schema:
        type: string
        default: days
        enum:
          - hours
          - days
          - weeks
          - months
    steps:
      name: steps
      in: query
      required: false
      description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
      schema:
        type: integer
    metricType:
      name: type
      in: query
      required: false
      description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
      schema:
        type: string
        enum:
          - email
          - webhook
          - twilio
          - urban_airship
          - slack
          - push
    metric:
      name: metric
      in: query
      required: false
      description: Determines the metric(s) you want to return.
      schema:
        type: string
        enum:
          - created
          - attempted
          - sent
          - delivered
          - opened
          - clicked
          - converted
          - bounced
          - spammed
          - unsubscribed
          - dropped
          - failed
          - undeliverable
    unique:
      name: unique
      in: query
      required: false
      description: If true, the response contains only unique customer results, i.e. a customer who clicks a link twice is only counted once. If false, the response contains the total number of results without regard to uniqueness.
      schema:
        type: boolean
        default: false
    drafts:
      name: drafts
      in: query
      required: false
      description: If true, your request returns both drafts and active/sent messages.
      schema:
        type: boolean
    get_apitb_broadcast_id:
      name: broadcast_id
      in: path
      required: true
      description: The ID of the broadcast that you want to return information about.
      schema:
        type: integer
    broadcast_id:
      name: broadcast_id
      in: path
      required: true
      description: The identifier of a broadcast.
      schema:
        type: integer
    state:
      name: state
      in: query
      required: false
      description: The state of a broadcast.
      schema:
        type: string
        enum:
          - failed
          - sent
          - drafted
          - attempted
    id_type_segment:
      name: id_type
      required: false
      in: query
      description: The type of `ids` you want to use. All of the values in the `ids` array must be of this type. If you don't provide this parameter, we assume that the `ids` array contains `id` values.
      schema:
        type: string
        enum:
          - id
          - email
          - cio_id
        default: id
  responses:
    '200':
      description: A successful request returns an empty object response.
    '400':
      description: Invalid or malformed request.
      content:
        application/json:
          schema:
            type: object
            properties:
              meta:
                type: object
                properties:
                  errors:
                    type: array
                    description: An array of errors.
                    items:
                      type: string
                      description: Error descriptions.
    '401':
      description: Unauthorized request. Make sure that you provided the right credentials.
    '429':
      description: Your request is over the 10-per-second limit.
    segment_404:
      description: The segment does not exist. Check the segment ID and try again.
      content:
        application/json:
          schema:
            type: string
            example: Segment not found
  schemas:
    anyType:
      description: Can be any type of value.
    anonymous_id:
      type: string
      description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
    cio_id:
      type: string
      description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
      example: 786433
    collectionResponse:
      type: object
      properties:
        bytes:
          type: integer
          description: The size of the collection in bytes.
          example: 296
        created_at:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was created.
          example: 1552341937
        updated_at:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was last updated.
          example: 1552341937
        id:
          type: integer
          description: The identifier for the collection. This is how you'll reference the collection from the API.
          example: 1
        name:
          type: string
          description: The name of the collection. This is how you'll reference the collection in liquid, e.g. `{{collection_name.data_property}}`.
          example: upcoming events
        rows:
          type: integer
          description: Represents the number of objects in the `data` array or CSV rows in your collection schema.
          example: 2
        schema:
          type: array
          description: Lists the top-level keys that you can reference within this collection. Customer.io does not enforce any of these keys as required from your `data`.
          items:
            type: string
          example:
            - eventDate
            - eventName
            - presents
    exportSharedProps:
      description: Contains properties shared by export filters.
      type: object
      properties:
        start:
          description: The unix timestamp representing the beginning of the export.
          type: integer
          format: unix timestamp
          example: 1517529600
        end:
          description: The unix timestamp representing the end of the export.
          type: integer
          format: unix timestamp
          example: 1517702400
        attributes:
          description: The names of attributes you want to include in your export; each attribute name is an additional column in the export. If your message included liquid, you may add the attribute names used in your message so you can see the values populated for each delivery.
          type: array
          items:
            type: string
        metric:
          description: Determines the metric(s) you want to return.
          type: string
          enum:
            - created
            - attempted
            - sent
            - delivered
            - opened
            - clicked
            - converted
            - bounced
            - spammed
            - unsubscribed
            - dropped
            - failed
            - undeliverable
        drafts:
          description: If true, your request returns both drafts and active/sent messages.
          type: boolean
    next:
      type: integer
      description: Indicates the next page of results. Add `?start=undefined<next_value>` to the request to get the next page of results.
    anonymousEventsRequest:
      description: An event attributed to an unknown person. If you provide an `anonymous_id` with the event, you can associate the event with a person later (using the anonymous ID).
      oneOf:
        - title: Standard anonymous event
          type: object
          required:
            - name
          properties:
            anonymous_id:
              type: string
              description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
            name:
              type: string
              description: The name of the event. This is how you'll reference the event in campaigns or segments.
            id:
              type: string
              format: ulid
              description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
            type:
              type: string
              description: Sets the event type. If your event isn't a `page` or `screen` type event, we automatically set this property to `event`.
              enum:
                - event
            timestamp:
              type: integer
              format: unix timestamp
              description: |
                The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
            data:
              type: object
              description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`). You can include `from_address` and `reply_to`, but the event can only trigger a campaign if it is associated with a person within 72 hours of its timestamp.
              additionalProperties:
                x-additionalPropertiesName: liquid merge data
                description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
              properties:
                from_address:
                  type: string
                  format: email
                  description: The address you want to trigger messages from, overriding any campaign settings associated with this event.
                reply_to:
                  type: string
                  format: email
                  description: The address you want to receive replies to, overriding campaign settings associated with this event.
          example:
            name: watched_video
            anonymous_id: abc123
            data:
              video: intro-to-platform
        - title: Page view
          type: object
          required:
            - name
            - type
          properties:
            anonymous_id:
              type: string
              description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
            name:
              type: string
              description: The name of the event. In general, this should be the URL of the page a person visited, making it easy to segment your audience or trigger campaigns using this event. Make sure you trim leading and trailing spaces from this field.
            id:
              type: string
              format: ulid
              description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
            type:
              type: string
              description: Indicates that the event represents a page view. See ["page view" events](../pageviews), for more information.
              enum:
                - page
            timestamp:
              type: integer
              format: unix timestamp
              description: |
                The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
            data:
              type: object
              description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
              additionalProperties:
                x-additionalPropertiesName: liquid merge data
                description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
          example:
            name: https://mysite.com/page
            type: page
            anonymous_id: abc123
            data:
              first_name: Person
        - title: Mobile screen view
          type: object
          required:
            - name
            - type
          properties:
            anonymous_id:
              type: string
              description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
            name:
              type: string
              description: The name of the event. In general, this should be the name of the screen or deep link path that a person viewed, making it easy to segment your audience or trigger campaigns using this event. Make sure you trim leading and trailing spaces from this field.
            id:
              type: string
              format: ulid
              description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
            type:
              type: string
              description: Indicates that the event represents a mobile screen view. You can also capture screen events directly with [our iOS SDK](/docs/sdk/ios/track-events/#screen-view-events).
              enum:
                - screen
            timestamp:
              type: integer
              format: unix timestamp
              description: |
                The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
            data:
              type: object
              description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
              additionalProperties:
                x-additionalPropertiesName: liquid merge data
                description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
          example:
            name: homepage
            type: screen
            anonymous_id: abc123
        - title: Invite event
          description: The `data.recipient` is required if you expect the event to trigger a message.
          type: object
          required:
            - name
            - data
          properties:
            name:
              type: string
              description: The name of the event. This is how you'll reference the event in campaigns or segments.
            type:
              type: string
              description: Sets the event type.
            timestamp:
              type: integer
              format: unix timestamp
              description: |
                The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.

                **NOTE**: Events with a timestamp in the past 72 hours can trigger campaigns.
            data:
              type: object
              description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
              required:
                - recipient
              additionalProperties:
                x-additionalPropertiesName: liquid merge data
                description: Insert key-values that you want to reference in your message here.
              properties:
                recipient:
                  type: string
                  format: email
                  description: The email address of the person associated with the event. This property is required if you want to trigger a campaign from this event.
                from_address:
                  type: string
                  format: email
                  description: The address you want to trigger messages from, overriding any campaign settings associated with this event.
                reply_to:
                  type: string
                  format: email
                  description: The address you want to receive replies to, overriding campaign settings associated with this event.
          example:
            name: beta_test_invite
            data:
              first_name: Person
              recipient: person@example.com
              source: oldApp
    dedupe_id:
      type: string
      format: ulid
      description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
    eventsRequest:
      oneOf:
        - title: Standard event
          type: object
          required:
            - name
          properties:
            name:
              type: string
              description: The name of the event. This is how you'll reference the event in campaigns or segments.
            id:
              type: string
              format: ulid
              description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
            type:
              type: string
              description: Sets the event type. If your event isn't a `page` or `screen` type event, we automatically set this property to `event`.
              enum:
                - event
            timestamp:
              type: integer
              format: unix timestamp
              description: |
                The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.

                **NOTE**: Events with a timestamp in the past 72 hours can trigger campaigns.
            data:
              type: object
              description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
              additionalProperties:
                x-additionalPropertiesName: liquid merge data
                description: Insert key-values that you want to reference in your message here.
              properties:
                recipient:
                  type: string
                  format: email
                  description: The email address of the person associated with the event.
                from_address:
                  type: string
                  format: email
                  description: The address you want to trigger messages from, overriding any campaign settings associated with this event.
                reply_to:
                  type: string
                  format: email
                  description: The address you want to receive replies to, overriding campaign settings associated with this event.
          example:
            name: purchase
            data:
              price: 23.45
              product: socks
        - title: Page view
          type: object
          required:
            - name
            - type
          properties:
            name:
              type: string
              description: The name of the event. This is how you'll reference the event in campaigns or segments.
            id:
              type: string
              format: ulid
              description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
            type:
              type: string
              description: Indicates that the event represents a page view. See ["page view" events](../pageviews), for more information.
              enum:
                - page
            timestamp:
              type: integer
              format: unix timestamp
              description: |
                The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
            data:
              type: object
              description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
              additionalProperties:
                x-additionalPropertiesName: liquid merge data
                description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
          example:
            name: https://mysite.com/page
            type: page
            data:
              first_name: Cool
              last_name: Person
        - title: Mobile screen view
          type: object
          required:
            - anonymous_id
            - name
            - type
          properties:
            anonymous_id:
              type: string
              description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
            name:
              type: string
              description: The name of the event. In general, this should be the name of the screen or deep link path that a person viewed, making it easy to segment your audience or trigger campaigns from these events. Make sure you trim leading and trailing spaces from this field.
            id:
              type: string
              format: ulid
              description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
            type:
              type: string
              description: Indicates that the event represents a mobile screen view. You can also capture screen events directly with [our iOS SDK](/docs/sdk/ios/track-events/#screen-view-events).
              enum:
                - screen
            timestamp:
              type: integer
              format: unix timestamp
              description: |
                The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
            data:
              type: object
              description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
              additionalProperties:
                x-additionalPropertiesName: liquid merge data
                description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
          example:
            name: homepage
            type: screen
            data:
              from: push-notification
    activityObject:
      type: object
      properties:
        customer_id:
          type: string
          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
          nullable: true
          example: '42'
        customer_identifiers:
          type: object
          description: |
            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

            We recommend that you use this object rather than the less descriptive `customer_id`.
          required:
            - email
            - id
            - cio_id
          properties:
            email:
              type: string
              nullable: true
              format: email
              description: A person's email address, if set.
              example: cool.person@example.com
            id:
              type: string
              nullable: true
              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
              example: 2
            cio_id:
              type: string
              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
              example: 786433
        data:
          oneOf:
            - title: Message delivery
              type: object
              properties:
                delivered:
                  type: integer
                  format: unix timestamp
                  description: The date-time when the message was delivered, if applicable.
                  nullable: true
                delivery_id:
                  type: string
                  description: The message ID.
                opened:
                  type: boolean
                  nullable: true
                  description: Indicates whether or not a customer opened a message, if the message was delivered.
              example:
                delivery_id: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                opened: null
                delivered: null
            - title: Attribute change
              description: The name of the object is the attribute that changed.
              type: object
              additionalProperties:
                x-additionalPropertyName: Attribute Name
                type: object
                properties:
                  from:
                    type: string
                    description: The old attribute value. If empty, the customer probably didn't bear the attribute before this action.
                  to:
                    type: string
                    description: The new attribute value.
              example:
                email:
                  from: newPerson@example.com
                  to: newPerson@customer.io
        delivery_id:
          type: string
          description: The message ID.
          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
        delivery_type:
          type: string
          description: The recipient device, if applicable.
          enum:
            - ios
            - android
            - email
            - phone
          example: email
        id:
          description: The identifier for the action.
          type: string
          example: 01AK4N8V8G8KVA4HN8Y50CCZ59
        timestamp:
          type: integer
          format: unix timestamp
          description: The date and time when the action occurred.
          example: 1397566226
        type:
          description: The activity type.
          type: string
          enum:
            - page
            - event
            - attribute_change
            - failed_attribute_change
            - stripe_event
            - drafted_email
            - failed_email
            - dropped_email
            - sent_email
            - spammed_email
            - bounced_email
            - delivered_email
            - triggered_email
            - opened_email
            - clicked_email
            - converted_email
            - unsubscribed_email
            - attempted_email
            - undeliverable_email
            - device_change
            - attempted_action
            - drafted_action
            - sent_action
            - delivered_action
            - bounced_action
            - failed_action
            - converted_action
            - undeliverable_action
            - opened_action
            - secondary:dropped_email
            - secondary:spammed_email
            - secondary:bounced_email
            - secondary:delivered_email
            - secondary:opened_email
            - secondary:clicked_email
            - secondary:failed_email
          example: sent_email
    delivery_id:
      type: string
      description: The instance of a message sent to a person.
      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
    activityTypes:
      description: The activity type.
      type: string
      enum:
        - page
        - event
        - attribute_change
        - failed_attribute_change
        - stripe_event
        - drafted_email
        - failed_email
        - dropped_email
        - sent_email
        - spammed_email
        - bounced_email
        - delivered_email
        - triggered_email
        - opened_email
        - clicked_email
        - converted_email
        - unsubscribed_email
        - attempted_email
        - undeliverable_email
        - device_change
        - attempted_action
        - drafted_action
        - sent_action
        - delivered_action
        - bounced_action
        - failed_action
        - converted_action
        - undeliverable_action
        - opened_action
        - secondary:dropped_email
        - secondary:spammed_email
        - secondary:bounced_email
        - secondary:delivered_email
        - secondary:opened_email
        - secondary:clicked_email
        - secondary:failed_email
      example: sent_email
    attributeChangeAction:
      type: object
      properties:
        from:
          type: string
          description: The old attribute value. If empty, the customer probably didn't bear the attribute before this action.
        to:
          type: string
          description: The new attribute value.
    segmentAudienceFilter:
      title: segment
      type: object
      description: Provide the `id` of a segment containing people you want to search for.
      properties:
        id:
          type: integer
          description: The ID of the segment you want to return people from.
          example: 4
    attributeAudienceFilter:
      title: attribute
      description: Filter your audience by attribute.
      type: object
      properties:
        field:
          type: string
          description: The name of the attribute you want to filter against.
          example: first_name
        operator:
          type: string
          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
          enum:
            - eq
            - exists
        value:
          type: string
          description: The value you want to match for this attribute.
      example:
        field: unsubscribed
        operator: eq
        value: true
    simpleAudienceFilter:
      type: object
      properties:
        segment:
          title: segment
          type: object
          description: Provide the `id` of a segment containing people you want to search for.
          properties:
            id:
              type: integer
              description: The ID of the segment you want to return people from.
              example: 4
        attribute:
          title: attribute
          description: Filter your audience by attribute.
          type: object
          properties:
            field:
              type: string
              description: The name of the attribute you want to filter against.
              example: first_name
            operator:
              type: string
              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
              enum:
                - eq
                - exists
            value:
              type: string
              description: The value you want to match for this attribute.
          example:
            field: unsubscribed
            operator: eq
            value: true
    complexAudienceFilter:
      title: People Filter
      type: object
      description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
      properties:
        and:
          type: array
          description: Returns results matching *all* conditions.
          items:
            type: object
            properties:
              segment:
                title: segment
                type: object
                description: Provide the `id` of a segment containing people you want to search for.
                properties:
                  id:
                    type: integer
                    description: The ID of the segment you want to return people from.
                    example: 4
              attribute:
                title: attribute
                description: Filter your audience by attribute.
                type: object
                properties:
                  field:
                    type: string
                    description: The name of the attribute you want to filter against.
                    example: first_name
                  operator:
                    type: string
                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                    enum:
                      - eq
                      - exists
                  value:
                    type: string
                    description: The value you want to match for this attribute.
                example:
                  field: unsubscribed
                  operator: eq
                  value: true
        or:
          type: array
          description: Returns results matching *any* conditions.
          items:
            type: object
            properties:
              segment:
                title: segment
                type: object
                description: Provide the `id` of a segment containing people you want to search for.
                properties:
                  id:
                    type: integer
                    description: The ID of the segment you want to return people from.
                    example: 4
              attribute:
                title: attribute
                description: Filter your audience by attribute.
                type: object
                properties:
                  field:
                    type: string
                    description: The name of the attribute you want to filter against.
                    example: first_name
                  operator:
                    type: string
                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                    enum:
                      - eq
                      - exists
                  value:
                    type: string
                    description: The value you want to match for this attribute.
                example:
                  field: unsubscribed
                  operator: eq
                  value: true
        not:
          description: Returns results if a condition is false.
          type: object
          properties:
            and:
              type: array
              description: Match *all* conditions to return results.
              items:
                type: object
                properties:
                  segment:
                    title: segment
                    type: object
                    description: Provide the `id` of a segment containing people you want to search for.
                    properties:
                      id:
                        type: integer
                        description: The ID of the segment you want to return people from.
                        example: 4
                  attribute:
                    title: attribute
                    description: Filter your audience by attribute.
                    type: object
                    properties:
                      field:
                        type: string
                        description: The name of the attribute you want to filter against.
                        example: first_name
                      operator:
                        type: string
                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                        enum:
                          - eq
                          - exists
                      value:
                        type: string
                        description: The value you want to match for this attribute.
                    example:
                      field: unsubscribed
                      operator: eq
                      value: true
            or:
              type: array
              description: Match *any* condition to return results.
              items:
                type: object
                properties:
                  segment:
                    title: segment
                    type: object
                    description: Provide the `id` of a segment containing people you want to search for.
                    properties:
                      id:
                        type: integer
                        description: The ID of the segment you want to return people from.
                        example: 4
                  attribute:
                    title: attribute
                    description: Filter your audience by attribute.
                    type: object
                    properties:
                      field:
                        type: string
                        description: The name of the attribute you want to filter against.
                        example: first_name
                      operator:
                        type: string
                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                        enum:
                          - eq
                          - exists
                      value:
                        type: string
                        description: The value you want to match for this attribute.
                    example:
                      field: unsubscribed
                      operator: eq
                      value: true
            segment:
              title: segment
              type: object
              description: Provide the `id` of a segment containing people you want to search for.
              properties:
                id:
                  type: integer
                  description: The ID of the segment you want to return people from.
                  example: 4
            attribute:
              title: attribute
              description: Filter your audience by attribute.
              type: object
              properties:
                field:
                  type: string
                  description: The name of the attribute you want to filter against.
                  example: first_name
                operator:
                  type: string
                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                  enum:
                    - eq
                    - exists
                value:
                  type: string
                  description: The value you want to match for this attribute.
              example:
                field: unsubscribed
                operator: eq
                value: true
        segment:
          title: segment
          type: object
          description: Provide the `id` of a segment containing people you want to search for.
          properties:
            id:
              type: integer
              description: The ID of the segment you want to return people from.
              example: 4
        attribute:
          title: attribute
          description: Filter your audience by attribute.
          type: object
          properties:
            field:
              type: string
              description: The name of the attribute you want to filter against.
              example: first_name
            operator:
              type: string
              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
              enum:
                - eq
                - exists
            value:
              type: string
              description: The value you want to match for this attribute.
          example:
            field: unsubscribed
            operator: eq
            value: true
    audienceFilter:
      title: Audience Filter
      description: |
        When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.

        The top level of this object can only contain a single property, but you can nest `and` and `or` properties to produce complex filters.
      oneOf:
        - title: and
          type: object
          properties:
            and:
              type: array
              description: Match *all* conditions to return results.
              items:
                title: People Filter
                type: object
                description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                properties:
                  and:
                    type: array
                    description: Returns results matching *all* conditions.
                    items:
                      type: object
                      properties:
                        segment:
                          title: segment
                          type: object
                          description: Provide the `id` of a segment containing people you want to search for.
                          properties:
                            id:
                              type: integer
                              description: The ID of the segment you want to return people from.
                              example: 4
                        attribute:
                          title: attribute
                          description: Filter your audience by attribute.
                          type: object
                          properties:
                            field:
                              type: string
                              description: The name of the attribute you want to filter against.
                              example: first_name
                            operator:
                              type: string
                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                              enum:
                                - eq
                                - exists
                            value:
                              type: string
                              description: The value you want to match for this attribute.
                          example:
                            field: unsubscribed
                            operator: eq
                            value: true
                  or:
                    type: array
                    description: Returns results matching *any* conditions.
                    items:
                      type: object
                      properties:
                        segment:
                          title: segment
                          type: object
                          description: Provide the `id` of a segment containing people you want to search for.
                          properties:
                            id:
                              type: integer
                              description: The ID of the segment you want to return people from.
                              example: 4
                        attribute:
                          title: attribute
                          description: Filter your audience by attribute.
                          type: object
                          properties:
                            field:
                              type: string
                              description: The name of the attribute you want to filter against.
                              example: first_name
                            operator:
                              type: string
                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                              enum:
                                - eq
                                - exists
                            value:
                              type: string
                              description: The value you want to match for this attribute.
                          example:
                            field: unsubscribed
                            operator: eq
                            value: true
                  not:
                    description: Returns results if a condition is false.
                    type: object
                    properties:
                      and:
                        type: array
                        description: Match *all* conditions to return results.
                        items:
                          type: object
                          properties:
                            segment:
                              title: segment
                              type: object
                              description: Provide the `id` of a segment containing people you want to search for.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the segment you want to return people from.
                                  example: 4
                            attribute:
                              title: attribute
                              description: Filter your audience by attribute.
                              type: object
                              properties:
                                field:
                                  type: string
                                  description: The name of the attribute you want to filter against.
                                  example: first_name
                                operator:
                                  type: string
                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                  enum:
                                    - eq
                                    - exists
                                value:
                                  type: string
                                  description: The value you want to match for this attribute.
                              example:
                                field: unsubscribed
                                operator: eq
                                value: true
                      or:
                        type: array
                        description: Match *any* condition to return results.
                        items:
                          type: object
                          properties:
                            segment:
                              title: segment
                              type: object
                              description: Provide the `id` of a segment containing people you want to search for.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the segment you want to return people from.
                                  example: 4
                            attribute:
                              title: attribute
                              description: Filter your audience by attribute.
                              type: object
                              properties:
                                field:
                                  type: string
                                  description: The name of the attribute you want to filter against.
                                  example: first_name
                                operator:
                                  type: string
                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                  enum:
                                    - eq
                                    - exists
                                value:
                                  type: string
                                  description: The value you want to match for this attribute.
                              example:
                                field: unsubscribed
                                operator: eq
                                value: true
                      segment:
                        title: segment
                        type: object
                        description: Provide the `id` of a segment containing people you want to search for.
                        properties:
                          id:
                            type: integer
                            description: The ID of the segment you want to return people from.
                            example: 4
                      attribute:
                        title: attribute
                        description: Filter your audience by attribute.
                        type: object
                        properties:
                          field:
                            type: string
                            description: The name of the attribute you want to filter against.
                            example: first_name
                          operator:
                            type: string
                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                            enum:
                              - eq
                              - exists
                          value:
                            type: string
                            description: The value you want to match for this attribute.
                        example:
                          field: unsubscribed
                          operator: eq
                          value: true
                  segment:
                    title: segment
                    type: object
                    description: Provide the `id` of a segment containing people you want to search for.
                    properties:
                      id:
                        type: integer
                        description: The ID of the segment you want to return people from.
                        example: 4
                  attribute:
                    title: attribute
                    description: Filter your audience by attribute.
                    type: object
                    properties:
                      field:
                        type: string
                        description: The name of the attribute you want to filter against.
                        example: first_name
                      operator:
                        type: string
                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                        enum:
                          - eq
                          - exists
                      value:
                        type: string
                        description: The value you want to match for this attribute.
                    example:
                      field: unsubscribed
                      operator: eq
                      value: true
        - title: or
          type: object
          properties:
            or:
              type: array
              description: Match *any* condition to return results.
              items:
                title: People Filter
                type: object
                description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                properties:
                  and:
                    type: array
                    description: Returns results matching *all* conditions.
                    items:
                      type: object
                      properties:
                        segment:
                          title: segment
                          type: object
                          description: Provide the `id` of a segment containing people you want to search for.
                          properties:
                            id:
                              type: integer
                              description: The ID of the segment you want to return people from.
                              example: 4
                        attribute:
                          title: attribute
                          description: Filter your audience by attribute.
                          type: object
                          properties:
                            field:
                              type: string
                              description: The name of the attribute you want to filter against.
                              example: first_name
                            operator:
                              type: string
                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                              enum:
                                - eq
                                - exists
                            value:
                              type: string
                              description: The value you want to match for this attribute.
                          example:
                            field: unsubscribed
                            operator: eq
                            value: true
                  or:
                    type: array
                    description: Returns results matching *any* conditions.
                    items:
                      type: object
                      properties:
                        segment:
                          title: segment
                          type: object
                          description: Provide the `id` of a segment containing people you want to search for.
                          properties:
                            id:
                              type: integer
                              description: The ID of the segment you want to return people from.
                              example: 4
                        attribute:
                          title: attribute
                          description: Filter your audience by attribute.
                          type: object
                          properties:
                            field:
                              type: string
                              description: The name of the attribute you want to filter against.
                              example: first_name
                            operator:
                              type: string
                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                              enum:
                                - eq
                                - exists
                            value:
                              type: string
                              description: The value you want to match for this attribute.
                          example:
                            field: unsubscribed
                            operator: eq
                            value: true
                  not:
                    description: Returns results if a condition is false.
                    type: object
                    properties:
                      and:
                        type: array
                        description: Match *all* conditions to return results.
                        items:
                          type: object
                          properties:
                            segment:
                              title: segment
                              type: object
                              description: Provide the `id` of a segment containing people you want to search for.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the segment you want to return people from.
                                  example: 4
                            attribute:
                              title: attribute
                              description: Filter your audience by attribute.
                              type: object
                              properties:
                                field:
                                  type: string
                                  description: The name of the attribute you want to filter against.
                                  example: first_name
                                operator:
                                  type: string
                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                  enum:
                                    - eq
                                    - exists
                                value:
                                  type: string
                                  description: The value you want to match for this attribute.
                              example:
                                field: unsubscribed
                                operator: eq
                                value: true
                      or:
                        type: array
                        description: Match *any* condition to return results.
                        items:
                          type: object
                          properties:
                            segment:
                              title: segment
                              type: object
                              description: Provide the `id` of a segment containing people you want to search for.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the segment you want to return people from.
                                  example: 4
                            attribute:
                              title: attribute
                              description: Filter your audience by attribute.
                              type: object
                              properties:
                                field:
                                  type: string
                                  description: The name of the attribute you want to filter against.
                                  example: first_name
                                operator:
                                  type: string
                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                  enum:
                                    - eq
                                    - exists
                                value:
                                  type: string
                                  description: The value you want to match for this attribute.
                              example:
                                field: unsubscribed
                                operator: eq
                                value: true
                      segment:
                        title: segment
                        type: object
                        description: Provide the `id` of a segment containing people you want to search for.
                        properties:
                          id:
                            type: integer
                            description: The ID of the segment you want to return people from.
                            example: 4
                      attribute:
                        title: attribute
                        description: Filter your audience by attribute.
                        type: object
                        properties:
                          field:
                            type: string
                            description: The name of the attribute you want to filter against.
                            example: first_name
                          operator:
                            type: string
                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                            enum:
                              - eq
                              - exists
                          value:
                            type: string
                            description: The value you want to match for this attribute.
                        example:
                          field: unsubscribed
                          operator: eq
                          value: true
                  segment:
                    title: segment
                    type: object
                    description: Provide the `id` of a segment containing people you want to search for.
                    properties:
                      id:
                        type: integer
                        description: The ID of the segment you want to return people from.
                        example: 4
                  attribute:
                    title: attribute
                    description: Filter your audience by attribute.
                    type: object
                    properties:
                      field:
                        type: string
                        description: The name of the attribute you want to filter against.
                        example: first_name
                      operator:
                        type: string
                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                        enum:
                          - eq
                          - exists
                      value:
                        type: string
                        description: The value you want to match for this attribute.
                    example:
                      field: unsubscribed
                      operator: eq
                      value: true
        - title: not
          type: object
          description: Match if a condition is false.
          properties:
            not:
              title: People Filter
              type: object
              description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
              properties:
                and:
                  type: array
                  description: Returns results matching *all* conditions.
                  items:
                    type: object
                    properties:
                      segment:
                        title: segment
                        type: object
                        description: Provide the `id` of a segment containing people you want to search for.
                        properties:
                          id:
                            type: integer
                            description: The ID of the segment you want to return people from.
                            example: 4
                      attribute:
                        title: attribute
                        description: Filter your audience by attribute.
                        type: object
                        properties:
                          field:
                            type: string
                            description: The name of the attribute you want to filter against.
                            example: first_name
                          operator:
                            type: string
                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                            enum:
                              - eq
                              - exists
                          value:
                            type: string
                            description: The value you want to match for this attribute.
                        example:
                          field: unsubscribed
                          operator: eq
                          value: true
                or:
                  type: array
                  description: Returns results matching *any* conditions.
                  items:
                    type: object
                    properties:
                      segment:
                        title: segment
                        type: object
                        description: Provide the `id` of a segment containing people you want to search for.
                        properties:
                          id:
                            type: integer
                            description: The ID of the segment you want to return people from.
                            example: 4
                      attribute:
                        title: attribute
                        description: Filter your audience by attribute.
                        type: object
                        properties:
                          field:
                            type: string
                            description: The name of the attribute you want to filter against.
                            example: first_name
                          operator:
                            type: string
                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                            enum:
                              - eq
                              - exists
                          value:
                            type: string
                            description: The value you want to match for this attribute.
                        example:
                          field: unsubscribed
                          operator: eq
                          value: true
                not:
                  description: Returns results if a condition is false.
                  type: object
                  properties:
                    and:
                      type: array
                      description: Match *all* conditions to return results.
                      items:
                        type: object
                        properties:
                          segment:
                            title: segment
                            type: object
                            description: Provide the `id` of a segment containing people you want to search for.
                            properties:
                              id:
                                type: integer
                                description: The ID of the segment you want to return people from.
                                example: 4
                          attribute:
                            title: attribute
                            description: Filter your audience by attribute.
                            type: object
                            properties:
                              field:
                                type: string
                                description: The name of the attribute you want to filter against.
                                example: first_name
                              operator:
                                type: string
                                description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                enum:
                                  - eq
                                  - exists
                              value:
                                type: string
                                description: The value you want to match for this attribute.
                            example:
                              field: unsubscribed
                              operator: eq
                              value: true
                    or:
                      type: array
                      description: Match *any* condition to return results.
                      items:
                        type: object
                        properties:
                          segment:
                            title: segment
                            type: object
                            description: Provide the `id` of a segment containing people you want to search for.
                            properties:
                              id:
                                type: integer
                                description: The ID of the segment you want to return people from.
                                example: 4
                          attribute:
                            title: attribute
                            description: Filter your audience by attribute.
                            type: object
                            properties:
                              field:
                                type: string
                                description: The name of the attribute you want to filter against.
                                example: first_name
                              operator:
                                type: string
                                description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                enum:
                                  - eq
                                  - exists
                              value:
                                type: string
                                description: The value you want to match for this attribute.
                            example:
                              field: unsubscribed
                              operator: eq
                              value: true
                    segment:
                      title: segment
                      type: object
                      description: Provide the `id` of a segment containing people you want to search for.
                      properties:
                        id:
                          type: integer
                          description: The ID of the segment you want to return people from.
                          example: 4
                    attribute:
                      title: attribute
                      description: Filter your audience by attribute.
                      type: object
                      properties:
                        field:
                          type: string
                          description: The name of the attribute you want to filter against.
                          example: first_name
                        operator:
                          type: string
                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                          enum:
                            - eq
                            - exists
                        value:
                          type: string
                          description: The value you want to match for this attribute.
                      example:
                        field: unsubscribed
                        operator: eq
                        value: true
                segment:
                  title: segment
                  type: object
                  description: Provide the `id` of a segment containing people you want to search for.
                  properties:
                    id:
                      type: integer
                      description: The ID of the segment you want to return people from.
                      example: 4
                attribute:
                  title: attribute
                  description: Filter your audience by attribute.
                  type: object
                  properties:
                    field:
                      type: string
                      description: The name of the attribute you want to filter against.
                      example: first_name
                    operator:
                      type: string
                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                      enum:
                        - eq
                        - exists
                    value:
                      type: string
                      description: The value you want to match for this attribute.
                  example:
                    field: unsubscribed
                    operator: eq
                    value: true
        - title: segment
          type: object
          description: Provide the `id` of a segment containing people you want to search for.
          properties:
            id:
              type: integer
              description: The ID of the segment you want to return people from.
              example: 4
        - title: attribute
          description: Filter your audience by attribute.
          type: object
          properties:
            field:
              type: string
              description: The name of the attribute you want to filter against.
              example: first_name
            operator:
              type: string
              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
              enum:
                - eq
                - exists
            value:
              type: string
              description: The value you want to match for this attribute.
          example:
            field: unsubscribed
            operator: eq
            value: true
    device_object:
      description: The properties representing an individual device. [Our SDK's](/docs/sdk/) gather all the properties defined below automatically, unless you disable the `autoTrackDeviceAttributes` setting. You can reference the properties outside the `attributes` object in segments or in Liquid.
      type: object
      required:
        - id
        - platform
      properties:
        id:
          description: The device token.
          type: string
        last_used:
          type: integer
          format: unix timestamp
          description: The `timestamp` when you last identified this device. If you don't pass a timestamp when you add or update a device, we use the time of the request itself. Our SDKs identify a device when a person launches their app.
        platform:
          type: string
          enum:
            - ios
            - android
          description: The device/messaging platform.
        attributes:
          type: object
          description: Attributes that you can reference to segment your audience—like a person's attributes, but specific to a device. These can be either the attributes defined below or custom key-value attributes.
          properties:
            device_os:
              type: string
              description: The operating system, including the version, on the device.
            device_model:
              type: string
              description: The model of the device a person uses.
            app_version:
              type: string
              description: The version of your app that a customer users. You might target app versions to let people know when they need to update, or expose them to new features when they do.
            cio_sdk_version:
              type: string
              description: The version of the Customer.io SDK in the app.
            _last_status:
              type: string
              readOnly: true
              description: The delivery status of the last message sent to the device—sent, bounced, or suppressed. An empty string indicates that that the device hasn't received a push yet.
              enum:
                - ''
                - bounced
                - sent
                - suppressed
            device_locale:
              type: string
              description: The four-letter [IETF language code](/docs/localization/#supported-languages) for the device. For example, `en-MX` (indicating an app in Spanish formatted for a user in Mexico) or `es-ES` (indicating an app in Spanish formatted for a user in Spain).
            push_enabled:
              type: string
              description: If `"true"`, the device is opted-in and can receive push notifications.
              enum:
                - 'true'
                - 'false'
          additionalProperties:
            x-additionalPropertiesName: Custom Device Attributes
            description: Custom properties that you want to associate with the device.
            type: string
    customerAttributesObject:
      type: object
      properties:
        customer:
          type: object
          description: The profile you referenced by ID in the request.
          properties:
            id:
              type: string
              description: The customer ID referenced in the request.
            identifiers:
              type: object
              description: |
                Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                We recommend that you use this object rather than the less descriptive `customer_id`.
              required:
                - email
                - id
                - cio_id
              properties:
                email:
                  type: string
                  nullable: true
                  format: email
                  description: A person's email address, if set.
                  example: cool.person@example.com
                id:
                  type: string
                  nullable: true
                  description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                  example: 2
                cio_id:
                  type: string
                  description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                  example: 786433
            attributes:
              type: object
              description: Contains attributes assigned to this profile, including your workspace's people-identifiers (by default, these are `id`, `email`, and `cio_id`). Attributes are all stored as strings.
              properties:
                id:
                  type: string
                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                  nullable: true
                  example: '42'
                email:
                  type: string
                  description: The email address of the customer.
                  nullable: true
                  example: test@example.com
                cio_id:
                  type: string
                  description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                  example: 786433
              additionalProperties:
                x-additionalPropertiesName: additional attributes
                description: Non-identifier attributes assigned to this person.
                type: string
            timestamps:
              type: object
              description: The epoch timestamps when corresponding attributes were set on the customer profile.
              properties:
                cio_id:
                  type: integer
                  description: The date-time when `cio_id` was assigned.
                  format: unix timestamp
                _last_emailed:
                  type: integer
                  description: The date-time when you last emailed a person.
                  format: unix timestamp
                email:
                  type: integer
                  description: The date-time when the person's email address was added.
                  format: unix timestamp
                id:
                  type: integer
                  description: The date-time when the person's ID was generated.
                  format: unix timestamp
                unsubscribed:
                  type: integer
                  description: The date-time when the person unsubscribed.
                  format: unix timestamp
                additionalProperties:
                  x-additionalPropertiesName: additional attribute timestamps
                  description: Timestamps when attributes assigned to the person were set.
                  format: unix timestamp
            unsubscribed:
              type: boolean
              description: If true, the person is unsubscribed from messages.
            devices:
              type: array
              description: Lists the devices associated with the customer profile.
              items:
                description: The properties representing an individual device. [Our SDK's](/docs/sdk/) gather all the properties defined below automatically, unless you disable the `autoTrackDeviceAttributes` setting. You can reference the properties outside the `attributes` object in segments or in Liquid.
                type: object
                required:
                  - id
                  - platform
                properties:
                  id:
                    description: The device token.
                    type: string
                  last_used:
                    type: integer
                    format: unix timestamp
                    description: The `timestamp` when you last identified this device. If you don't pass a timestamp when you add or update a device, we use the time of the request itself. Our SDKs identify a device when a person launches their app.
                  platform:
                    type: string
                    enum:
                      - ios
                      - android
                    description: The device/messaging platform.
                  attributes:
                    type: object
                    description: Attributes that you can reference to segment your audience—like a person's attributes, but specific to a device. These can be either the attributes defined below or custom key-value attributes.
                    properties:
                      device_os:
                        type: string
                        description: The operating system, including the version, on the device.
                      device_model:
                        type: string
                        description: The model of the device a person uses.
                      app_version:
                        type: string
                        description: The version of your app that a customer users. You might target app versions to let people know when they need to update, or expose them to new features when they do.
                      cio_sdk_version:
                        type: string
                        description: The version of the Customer.io SDK in the app.
                      _last_status:
                        type: string
                        readOnly: true
                        description: The delivery status of the last message sent to the device—sent, bounced, or suppressed. An empty string indicates that that the device hasn't received a push yet.
                        enum:
                          - ''
                          - bounced
                          - sent
                          - suppressed
                      device_locale:
                        type: string
                        description: The four-letter [IETF language code](/docs/localization/#supported-languages) for the device. For example, `en-MX` (indicating an app in Spanish formatted for a user in Mexico) or `es-ES` (indicating an app in Spanish formatted for a user in Spain).
                      push_enabled:
                        type: string
                        description: If `"true"`, the device is opted-in and can receive push notifications.
                        enum:
                          - 'true'
                          - 'false'
                    additionalProperties:
                      x-additionalPropertiesName: Custom Device Attributes
                      description: Custom properties that you want to associate with the device.
                      type: string
      example:
        customer:
          id: '1'
          attributes:
            _last_emailed: '1528932553'
            created_at: '1489014595'
            email: test@example.com
            title: tester
            department: qa
            id: '1'
            cio_id: '03000001'
          timestamps:
            cio_id: 1489014595
            _last_emailed: 1528932553
            created_at: 1489014595
            email: 1508932553
            id: 1489014595
            department: 1508932553
            title: 1508932553
          unsubscribed: false
          devices:
            - id: my_android_device_id
              last_used: 1514764800
              platform: android
            - id: my_ios_device_id
              last_used: 1514764800
              platform: ios
    preheader:
      type: string
      description: Also known as "preview text", this is the block block of text that users see next to, or underneath, the subject line in their inbox.
    plaintext_body:
      type: string
      description: By default, we generate a plaintext version of your message body for each delivery. Use this key to override the default plain text body.
    attachments:
      type: array
      description: |
        A dictionary of attachments where the filename is the key and the value is the base64-encoded contents. The total size of all attachments must be less than 2 MB. Some filetype extensions are restricted.
      items:
        type: object
        additionalProperties:
          type: string
          format: base64
          x-additionalPropertiesName: Attachment Names
          x-doNotRender: true
    headers:
      type: array
      description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
      items:
        type: object
        additionalProperties:
          type: string
          x-additionalPropertiesName: Header Names
          x-doNotRender: true
    disable_message_retention:
      type: boolean
      default: false
      description: If true, the message body is not retained in delivery history. Setting this value overrides the value set in the settings of your `transactional_message_id`.
    send_to_unsubscribed:
      type: boolean
      default: true
      description: If false, your message is not sent to unsubscribed recipients. Setting this value overrides the value set in the settings of your `transactional_message_id`.
    tracked:
      type: boolean
      description: If true, Customer.io tracks opens and link clicks in your message.
      default: true
    queue_draft:
      type: boolean
      description: If true, your transactional message is held as a draft in Customer.io and not sent directly to your audience. You must go to the Deliveries and Drafts page to send your message.
      default: false
    customer_identifiers:
      type: object
      description: |
        Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

        We recommend that you use this object rather than the less descriptive `customer_id`.
      required:
        - email
        - id
        - cio_id
      properties:
        email:
          type: string
          nullable: true
          format: email
          description: A person's email address, if set.
          example: cool.person@example.com
        id:
          type: string
          nullable: true
          description: A person's unique ID, if set. This is the same as the `customer_id` if present.
          example: 2
        cio_id:
          type: string
          description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
          example: 786433
    transactionalSharedObject:
      type: object
      required:
        - to
        - identifiers
      properties:
        to:
          type: string
          description: The message recipient(s). Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
          example: cool.person@example.com
        identifiers:
          description: Identifies the person represented by your transactional message by one of, and only one of, `id`, `email`, or `cio_id`.
          oneOf:
            - title: id
              type: object
              required:
                - id
              properties:
                id:
                  type: string
                  description: |
                    The identifier for the person represented by the transactional message. **NOTE**: If your workspace identifies people by email, use the `email` identifier instead.
                  example: 12345
            - title: email
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  description: The identifier for the person represented by the transactional message. Use this option if your workspace identifies people by email rather than by `id`.
                  example: cool.person@example.com
            - title: cio_id
              type: object
              required:
                - cio_id
              properties:
                cio_id:
                  type: string
                  description: A unique, immutable identifier for a person, set by Customer.io when you add a person.
                  example: 3000001
        message_data:
          type: object
          description: An object containing the key-value pairs referenced using liquid in your message.
          additionalProperties:
            x-additionalPropertiesName: Liquid Data
            description: Insert key-values that you want to reference in your message here.
          example:
            password_reset_token: abcde-12345-fghij-d888
            account_id: 123dj
        send_at:
          type: integer
          description: A unix timestamp determining when the message will be sent. The timestamp can be up to 90 days in the future. If this value is in the past, your message is sent immediately.
        bcc:
          type: string
          description: Blind copy message recipients. Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
          example: bcc@example.com
        fake_bcc:
          type: boolean
          description: |
            If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
        reply_to:
          type: string
          description: The address that recipients can reply to, if different from the `from` address.
          example: replyto@example.com
        preheader:
          type: string
          description: Also known as "preview text", this is the block block of text that users see next to, or underneath, the subject line in their inbox.
        plaintext_body:
          type: string
          description: By default, we generate a plaintext version of your message body for each delivery. Use this key to override the default plain text body.
        attachments:
          type: array
          description: |
            A dictionary of attachments where the filename is the key and the value is the base64-encoded contents. The total size of all attachments must be less than 2 MB. Some filetype extensions are restricted.
          items:
            type: object
            additionalProperties:
              type: string
              format: base64
              x-additionalPropertiesName: Attachment Names
              x-doNotRender: true
        headers:
          type: array
          description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
          items:
            type: object
            additionalProperties:
              type: string
              x-additionalPropertiesName: Header Names
              x-doNotRender: true
        disable_message_retention:
          type: boolean
          default: false
          description: If true, the message body is not retained in delivery history. Setting this value overrides the value set in the settings of your `transactional_message_id`.
        send_to_unsubscribed:
          type: boolean
          default: true
          description: If false, your message is not sent to unsubscribed recipients. Setting this value overrides the value set in the settings of your `transactional_message_id`.
        tracked:
          type: boolean
          description: If true, Customer.io tracks opens and link clicks in your message.
          default: true
        queue_draft:
          type: boolean
          description: If true, your transactional message is held as a draft in Customer.io and not sent directly to your audience. You must go to the Deliveries and Drafts page to send your message.
          default: false
        disable_css_preprocessing:
          type: boolean
          description: Set to `true` to disable CSS preprocessing. This setting overrides the CSS preprocessing setting on the `transactional_message_id` as set in the user interface. Transactional emails have CSS preprocessing enabled by default.
          example: false
          default: false
    snippet:
      type: object
      description: describes a piece of reusable content. You must provide a name for the snippet and the `value`—the content that appears in messages that use the snippet.
      required:
        - name
        - value
      properties:
        name:
          type: string
          description: The name of the snippet, must be unique.
        value:
          type: string
          description: The contents of the snippet.
        updated_at:
          type: integer
          format: unix timestamp
          description: The last date-time the snippet was updated.
          readOnly: true
      example:
        name: address
        value: undefined<strong>My Company</strong>undefined</br>1234 Fake Stundefined<br/>Fake,NYundefined<br/>10111
        updated_at: 1582500000
    senderIdentityObject:
      type: object
      description: Information about a sender.
      properties:
        id:
          type: integer
          description: The identifier of a sender.
        deduplicate_id:
          type: string
          readOnly: true
          description: A completely unique CIO identifier.
          example: '15:1492548073'
        name:
          type: string
          description: The name of the sender.
        email:
          type: string
          description: The email address of the sender.
        address:
          type: string
          description: The sender name and email address in the format `name undefined<name@example.com>`.
        template_type:
          type: string
          enum:
            - email
            - phone
          description: The type of sender.
        auto_generated:
          type: boolean
          description: If true, the sender is automatically generated by Customer.io.
      example:
        id: 4534
        deduplicate_id: '4534:1478035647'
        name: Cher Ami
        email: test@example.com
        address: Cher Ami undefined<test@example.com>
        template_type: email
        auto_generated: false
    export_id:
      type: integer
      description: The identifier for the export.
      example: 110
    export_type:
      type: string
      description: The type of information contained in the export.
      enum:
        - customers
        - deliveries
      example: customers
    export_failed:
      type: boolean
      description: If true, the export was unsuccessful.
      example: false
    export_description:
      type: string
      description: A description of the export.
      example: Customers with segment filters—in Purchased Flowers
    export_downloads:
      type: integer
      description: Counts the total number of times the export has been downloaded.
      example: 2
    metric:
      description: Determines the metric(s) you want to return.
      type: string
      enum:
        - created
        - attempted
        - sent
        - delivered
        - opened
        - clicked
        - converted
        - bounced
        - spammed
        - unsubscribed
        - dropped
        - failed
        - undeliverable
    start:
      description: The unix timestamp representing the beginning of the export.
      type: integer
      format: unix timestamp
      example: 1517529600
    end:
      description: The unix timestamp representing the end of the export.
      type: integer
      format: unix timestamp
      example: 1517702400
    drafts:
      description: If true, your request returns both drafts and active/sent messages.
      type: boolean
    exportObject:
      type: object
      description: Metadata about an export.
      properties:
        id:
          type: integer
          description: The identifier for the export.
          example: 110
        user_id:
          type: integer
          description: The user who created the export.
        user_email:
          type: string
          description: The email of the user who created the export.
        total:
          type: integer
          description: The number of entries in the export. Exports report 0 until done.
        deduplicate_id:
          type: string
          readOnly: true
          description: A completely unique CIO identifier.
          example: '15:1492548073'
        type:
          type: string
          description: The type of information contained in the export.
          enum:
            - customers
            - deliveries
          example: customers
        failed:
          type: boolean
          description: If true, the export was unsuccessful.
          example: false
        description:
          type: string
          description: A description of the export.
          example: Customers with segment filters—in Purchased Flowers
        downloads:
          type: integer
          description: Counts the total number of times the export has been downloaded.
          example: 2
        created_at:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was created.
          example: 1552341937
        updated_at:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was last updated.
          example: 1552341937
        status:
          type: string
          enum:
            - done
            - pending
            - failed
          description: The state of your export where `done` indicates an export that you can download, `pending`, indicates that your export is not ready to download, and `failed` indicates an export that has failed and will not be downloadable.
      example:
        id: 110
        user_id: 0
        user_email: person@email.com
        total: 1234
        deduplicate_id: '110:1530296738'
        type: customers
        failed: false
        status: done
        description: Customers with segment filters—in \Purchased Flowers\
        downloads: 2
        created_at: 1530296738
        updated_at: 1530296738
    variant_id:
      type: integer
      description: The identifier of a newsletter variant—a language in a multi-language newsletter or a test in an A/B test.
      readOnly: true
    newsletterObject:
      type: object
      properties:
        id:
          description: The identifier for a newsletter.
          type: integer
          readOnly: true
          nullable: true
        deduplicate_id:
          type: string
          readOnly: true
          description: A completely unique CIO identifier.
          example: '15:1492548073'
        name:
          type: string
          description: The name of the newsletter.
          readOnly: true
        subject:
          type: string
          description: The subject line for an `email` action.
          example: Did you get that thing I sent you?
        created:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was created.
          example: 1552341937
        updated:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was last updated.
          example: 1552341937
        sent_at:
          type: integer
          format: unix timestamp
          description: The last time the newsletter was sent.
        recipient_segment_ids:
          description: A list of segments used in a newsletter's recipient filter, returned if newsletter recipients were filtered by one or more segments.
          type: array
          items:
            type: integer
        msg_template_ids:
          type: array
          deprecated: true
          description: Indicates the message template(s) used in this newsletter.
          items:
            type: integer
        content_ids:
          type: array
          description: A list of languages in a multi-language newsletter and/or A/B test variants for this message. [Look up a newsletter variant](#operation/getNewsletterVariant) to get more information about an individual content ID.
          items:
            type: integer
        tags:
          type: array
          description: An array of tags you set on this newsletter.
          items:
            type: string
      example:
        id: 128275
        deduplicate_id: '128275:1484870424'
        msg_template_ids:
          - 428849
        content_ids:
          - 45
          - 90
        recipient_filter_ids:
          - 42
        name: Example Newsletter
        subject: Example Newsletter
        sent_at: null
        created: 1481653929
        updated: 1484870424
        tags:
          - Example Tag
    customer_events:
      description: Describes the customer events reported from Customer.io to a webhook.
      type: object
      properties:
        customer_subscribed:
          type: boolean
          description: A person's `unsubscribed` attribute was explicitly set to `false`. Set to true to report `subscribed` events.
        customer_unsubscribed:
          type: boolean
          description: A person's `unsubscribed` attribute was explicitly set to `true`. Set to true to report `unsubscribed` events.
    email_events:
      type: object
      description: Describes the email events reported from Customer.io to a webhook.
      properties:
        email_attempted:
          type: boolean
          description: Reports when a message cannot be sent to the delivery provider and will retry. Set to true to report this event type.
        email_bounced:
          type: boolean
          description: Reports when the delivery provider is unable to deliver a message. Set to true to report this event type.
        email_clicked:
          type: boolean
          description: Reports when a person clicks a tracked link in a message. Set to true to report this event type.
        email_converted:
          type: boolean
          description: Reports a conversion. Set to true to report this event type.
        email_deferred:
          type: boolean
          description: Reports when the delivery provider couldn't send a message and will retry. Set to true to report this event type.
        email_delivered:
          type: boolean
          description: Reports when the delivery provider reports that a message is delivered to an inbox. Set to true to report this event type.
        email_drafted:
          type: boolean
          description: Reports when a message draft is created. Set to true to report this event type.
        email_dropped:
          type: boolean
          description: Reports when a message isn't sent because the recipient is suppressed. Set to true to report this event type.
        email_failed:
          type: boolean
          description: Reports when an email couldn't be sent to the delivery provider. Set to true to report this event type.
        email_opened:
          type: boolean
          description: Reports when a recipient opens a message. Set to true to report this event type.
        email_sent:
          type: boolean
          description: Reports when a message is sent from Customer.io to the delivery provider. Set to true to report this event type.
        email_spammed:
          type: boolean
          description: Reports a recipient marks a message as spam. Set to true to report this even type.
        email_unsubscribed:
          type: boolean
          description: Reports when a person unsubscribes through a particular email. Set to true to report this event type.
    push_events:
      type: object
      description: Describes the push events reported from Customer.io to a webhook.
      properties:
        push_attempted:
          type: boolean
          description: Reports when a push notification could not be sent to the delivery provider will retry. Set to true to report this event type.
        push_bounced:
          type: boolean
          description: Reports when the delivery provider is unable to deliver a message. Set to true to report this event type.
        push_clicked:
          type: boolean
          description: Reports when a person clicks a tracked link in a message. Set to true to report this event type.
        push_converted:
          type: boolean
          description: Reports a conversion. Set to true to report this event type.
        push_delivered:
          type: boolean
          description: An app reports that the recipient's device received a message. Set to true to report this event type.
        push_drafted:
          type: boolean
          description: Reports when a message draft is created. Set to true to report this event type.
        push_dropped:
          type: boolean
          description: Reports when a message isn't sent because the recipient is suppressed. Set to true to report this event type.
        push_failed:
          type: boolean
          description: Reports when a message couldn't be sent to the delivery provider. Set to true to report this event type.
        push_opened:
          type: boolean
          description: The app on a recipient's device reports that the recipient opened the message. Set to true to report this event type.
        push_sent:
          type: boolean
          description: Reports when a message is sent from Customer.io to the delivery provider. Set to true to report this event type.
    sms_events:
      type: object
      description: Describes the SMS events reported from Customer.io to a webhook.
      properties:
        sms_attempted:
          type: boolean
          description: Reports when a push notification could not be sent to the delivery provider will retry. Set to true to report this event type.
        sms_bounced:
          type: boolean
          description: Reports when the delivery provider is unable to deliver a message to the recipient. Set to true to report this event type.
        sms_clicked:
          type: boolean
          description: Reports when a person clicks a tracked link in a message. Set to true to report this event type.
        sms_converted:
          type: boolean
          description: Reports when a person matches a conversion goal attributed to a a message. Set to true to report this event type.
        sms_delivered:
          type: boolean
          description: The delivery provider reports that the message is delivered. Set to true to report this event type.
        sms_drafted:
          type: boolean
          description: Reports when a message draft is created. Set to true to report this event type.
        sms_failed:
          type: boolean
          description: Reports when a message couldn't be sent to the delivery provider. Set to true to report this event type.
        sms_sent:
          type: boolean
          description: Reports when a message is sent from Customer.io to the delivery provider. Set to true to report this event type.
    slack_events:
      type: object
      description: Describes the slack events reported from Customer.io to a webhook.
      properties:
        slack_attempted:
          type: boolean
          description: Reports when a message could not be sent to the delivery provider will retry. Set to true to report this event type.
        slack_clicked:
          type: boolean
          description: Reports when a person clicks a tracked link in a message. Set to true to report this event type.
        slack_converted:
          type: boolean
          description: Reports when a person matches a conversion goal attributed to a a message. Set to true to report this event type.
        slack_drafted:
          type: boolean
          description: Reports when a message draft is created. Set to true to report this event type.
        slack_failed:
          type: boolean
          description: Reports when a message couldn't be sent to the delivery provider. Set to true to report this event type.
        slack_sent:
          type: boolean
          description: Reports when a message is sent from Customer.io to the delivery provider. Set to true to report this event type.
    webhook_events:
      type: object
      description: Describes the webhook events reported from Customer.io to a webhook.
      properties:
        webhook_attempted:
          type: boolean
          description: Reports when a webhook could not be sent and will retry. Set to true to report this event type.
        webhook_clicked:
          type: boolean
          description: Reports when a tracked link in a webhook payload is opened. Set to true to report this event type.
        webhook_drafted:
          type: boolean
          description: A webhook draft is created. Set to true to report this event type.
        webhook_failed:
          type: boolean
          description: Reports when a webhook couldn't be sent to the webhook URL. Set to true to report this event type.
        webhook_sent:
          type: boolean
          description: Reports when a webhook is sent from Customer.io to the webhook URL. Set to true to report this event type.
    body_content:
      type: string
      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
    reportingWebhook:
      type: object
      required:
        - name
        - endpoint
        - events
      properties:
        name:
          type: string
          description: The name of your webhook.
          example: my cool webhook
        id:
          type: integer
          description: The identifier for the webhook.
          readOnly: true
          example: 4
        endpoint:
          type: string
          format: url
          description: The webhook URL.
          example: http://example.com/webhook
        disabled:
          type: boolean
          description: Set to `true` to quit sending events to the webhook URL. Set to `false` to enable the webhook.
          example: false
        full_resolution:
          type: boolean
          description: Set to `false` to send unique open and click events to the webhook. Set to `true` to send all events.
          default: false
          example: true
        with_content:
          type: boolean
          description: Set to `true` to include the message `body` in `_sent` events.
          example: false
        events:
          description: Specifies the types of events you want to report to your webhook. See our [reporting webhooks reference](/docs/api/webhooks/#operation/reportingWebhook) for more information about event types and the information they return.
          type: array
          minItems: 1
          items:
            type: string
            enum:
              - customer_subscribed
              - customer_unsubscribed
              - email_drafted
              - email_attempted
              - email_sent
              - email_delivered
              - email_opened
              - email_clicked
              - email_converted
              - email_bounced
              - email_dropped
              - email_deferred
              - email_spammed
              - email_failed
              - email_unsubscribed
              - email_undeliverable
              - push_drafted
              - push_attempted
              - push_sent
              - push_delivered
              - push_opened
              - push_clicked
              - push_converted
              - push_bounced
              - push_dropped
              - push_failed
              - push_undeliverable
              - slack_drafted
              - slack_attempted
              - slack_sent
              - slack_clicked
              - slack_converted
              - slack_failed
              - sms_drafted
              - sms_attempted
              - sms_sent
              - sms_delivered
              - sms_clicked
              - sms_converted
              - sms_bounced
              - sms_failed
              - sms_undeliverable
              - webhook_drafted
              - webhook_attempted
              - webhook_sent
              - webhook_clicked
              - webhook_converted
              - webhook_failed
              - webhook_undeliverable
          example:
            - email_failed
            - webhook_failed
    url:
      type: string
      description: The URL of a webhook or action.
      example: http://example.com/webhook
    request_method:
      type: string
      description: The method used in conjunction with a webhook `url`.
      enum:
        - GET
        - POST
        - PUT
        - DELETE
        - PATCH
      example: POST
    forgotten:
      type: boolean
      description: If true, Customer.io does not retain the message content.
      example: false
    archivedMessageObject:
      description: |
        An archived message, including a complete message body.
      type: object
      properties:
        id:
          description: The identifier for a delivery—the instance of a message intended for an individual recipient.
          type: string
          readOnly: true
          example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
        body:
          type: string
          description: The body of the variant. You cannot modify the body if you created it with our drag-and-drop editor.
          example: undefined<!DOCTYPE html>undefined<html>undefined<head>\nundefined<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>undefined<h1>Hello World</h1>\n\nundefined</body>undefined</html>
        from:
          type: string
          description: The address that the message is from, relevant if the action `type` is `email`.
          readOnly: true
          example: sentFrom@example.com
        reply_to:
          type: string
          description: The address that receives replies for the message, if applicable.
          readOnly: true
          example: replyto@example.com
        recipient:
          description: The recipient address for an action.
          type: string
          example: person@example.com
        subject:
          type: string
          description: The subject line for an `email` action.
          example: Did you get that thing I sent you?
        bcc:
          readOnly: true
          description: The blind-copy address(es) for this action.
          type: string
        fake_bcc:
          readOnly: true
          type: boolean
          description: |
            If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
        preheader_text:
          type: string
          description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
          readOnly: true
        url:
          type: string
          description: The URL of a webhook or action.
          example: http://example.com/webhook
        request_method:
          type: string
          description: The method used in conjunction with a webhook `url`.
          enum:
            - GET
            - POST
            - PUT
            - DELETE
            - PATCH
          example: POST
        headers:
          type: array
          description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
          items:
            type: object
            additionalProperties:
              type: string
              x-additionalPropertiesName: Header Names
              x-doNotRender: true
        forgotten:
          type: boolean
          description: If true, Customer.io does not retain the message content.
          example: false
    commonTriggerProps:
      type: object
      properties:
        data:
          type: object
          description: Contains information you want to use to populate your broadcast.
          additionalProperties:
            x-additionalPropertiesName: Broadcast liquid data
            description: Insert key-values that you want to reference in your message here.
          example:
            headline: Roadrunner spotted in Albuquerque!
            date: 1511315635
            text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
        email_add_duplicates:
          type: boolean
          default: false
          description: an email address associated with more than one profile id is an error.
        email_ignore_missing:
          type: boolean
          default: false
          description: If false a missing email address is an error.
        id_ignore_missing:
          type: boolean
          default: false
          description: If false, a missing customer ID is an error.
    campaignRequest:
      oneOf:
        - title: Audience Filter
          description: The segment you want to send your broadcast to.
          allOf:
            - type: object
              required:
                - recipients
              properties:
                recipients:
                  description: A filter defining the group of people that you want send the broadcast to.
                  title: Audience Filter
                  oneOf:
                    - title: and
                      type: object
                      properties:
                        and:
                          type: array
                          description: Match *all* conditions to return results.
                          items:
                            title: People Filter
                            type: object
                            description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                            properties:
                              and:
                                type: array
                                description: Returns results matching *all* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              or:
                                type: array
                                description: Returns results matching *any* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              not:
                                description: Returns results if a condition is false.
                                type: object
                                properties:
                                  and:
                                    type: array
                                    description: Match *all* conditions to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  or:
                                    type: array
                                    description: Match *any* condition to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                              segment:
                                title: segment
                                type: object
                                description: Provide the `id` of a segment containing people you want to search for.
                                properties:
                                  id:
                                    type: integer
                                    description: The ID of the segment you want to return people from.
                                    example: 4
                              attribute:
                                title: attribute
                                description: Filter your audience by attribute.
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: The name of the attribute you want to filter against.
                                    example: first_name
                                  operator:
                                    type: string
                                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                    enum:
                                      - eq
                                      - exists
                                  value:
                                    type: string
                                    description: The value you want to match for this attribute.
                                example:
                                  field: unsubscribed
                                  operator: eq
                                  value: true
                    - title: or
                      type: object
                      properties:
                        or:
                          type: array
                          description: Match *any* condition to return results.
                          items:
                            title: People Filter
                            type: object
                            description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                            properties:
                              and:
                                type: array
                                description: Returns results matching *all* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              or:
                                type: array
                                description: Returns results matching *any* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              not:
                                description: Returns results if a condition is false.
                                type: object
                                properties:
                                  and:
                                    type: array
                                    description: Match *all* conditions to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  or:
                                    type: array
                                    description: Match *any* condition to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                              segment:
                                title: segment
                                type: object
                                description: Provide the `id` of a segment containing people you want to search for.
                                properties:
                                  id:
                                    type: integer
                                    description: The ID of the segment you want to return people from.
                                    example: 4
                              attribute:
                                title: attribute
                                description: Filter your audience by attribute.
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: The name of the attribute you want to filter against.
                                    example: first_name
                                  operator:
                                    type: string
                                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                    enum:
                                      - eq
                                      - exists
                                  value:
                                    type: string
                                    description: The value you want to match for this attribute.
                                example:
                                  field: unsubscribed
                                  operator: eq
                                  value: true
                    - title: not
                      type: object
                      description: Match if a condition is false.
                      properties:
                        not:
                          title: People Filter
                          type: object
                          description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                          properties:
                            and:
                              type: array
                              description: Returns results matching *all* conditions.
                              items:
                                type: object
                                properties:
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                            or:
                              type: array
                              description: Returns results matching *any* conditions.
                              items:
                                type: object
                                properties:
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                            not:
                              description: Returns results if a condition is false.
                              type: object
                              properties:
                                and:
                                  type: array
                                  description: Match *all* conditions to return results.
                                  items:
                                    type: object
                                    properties:
                                      segment:
                                        title: segment
                                        type: object
                                        description: Provide the `id` of a segment containing people you want to search for.
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the segment you want to return people from.
                                            example: 4
                                      attribute:
                                        title: attribute
                                        description: Filter your audience by attribute.
                                        type: object
                                        properties:
                                          field:
                                            type: string
                                            description: The name of the attribute you want to filter against.
                                            example: first_name
                                          operator:
                                            type: string
                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                            enum:
                                              - eq
                                              - exists
                                          value:
                                            type: string
                                            description: The value you want to match for this attribute.
                                        example:
                                          field: unsubscribed
                                          operator: eq
                                          value: true
                                or:
                                  type: array
                                  description: Match *any* condition to return results.
                                  items:
                                    type: object
                                    properties:
                                      segment:
                                        title: segment
                                        type: object
                                        description: Provide the `id` of a segment containing people you want to search for.
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the segment you want to return people from.
                                            example: 4
                                      attribute:
                                        title: attribute
                                        description: Filter your audience by attribute.
                                        type: object
                                        properties:
                                          field:
                                            type: string
                                            description: The name of the attribute you want to filter against.
                                            example: first_name
                                          operator:
                                            type: string
                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                            enum:
                                              - eq
                                              - exists
                                          value:
                                            type: string
                                            description: The value you want to match for this attribute.
                                        example:
                                          field: unsubscribed
                                          operator: eq
                                          value: true
                                segment:
                                  title: segment
                                  type: object
                                  description: Provide the `id` of a segment containing people you want to search for.
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the segment you want to return people from.
                                      example: 4
                                attribute:
                                  title: attribute
                                  description: Filter your audience by attribute.
                                  type: object
                                  properties:
                                    field:
                                      type: string
                                      description: The name of the attribute you want to filter against.
                                      example: first_name
                                    operator:
                                      type: string
                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                      enum:
                                        - eq
                                        - exists
                                    value:
                                      type: string
                                      description: The value you want to match for this attribute.
                                  example:
                                    field: unsubscribed
                                    operator: eq
                                    value: true
                            segment:
                              title: segment
                              type: object
                              description: Provide the `id` of a segment containing people you want to search for.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the segment you want to return people from.
                                  example: 4
                            attribute:
                              title: attribute
                              description: Filter your audience by attribute.
                              type: object
                              properties:
                                field:
                                  type: string
                                  description: The name of the attribute you want to filter against.
                                  example: first_name
                                operator:
                                  type: string
                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                  enum:
                                    - eq
                                    - exists
                                value:
                                  type: string
                                  description: The value you want to match for this attribute.
                              example:
                                field: unsubscribed
                                operator: eq
                                value: true
                    - title: segment
                      type: object
                      description: Provide the `id` of a segment containing people you want to search for.
                      properties:
                        id:
                          type: integer
                          description: The ID of the segment you want to return people from.
                          example: 4
                    - title: attribute
                      description: Filter your audience by attribute.
                      type: object
                      properties:
                        field:
                          type: string
                          description: The name of the attribute you want to filter against.
                          example: first_name
                        operator:
                          type: string
                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                          enum:
                            - eq
                            - exists
                        value:
                          type: string
                          description: The value you want to match for this attribute.
                      example:
                        field: unsubscribed
                        operator: eq
                        value: true
            - type: object
              properties:
                data:
                  type: object
                  description: Contains information you want to use to populate your broadcast.
                  additionalProperties:
                    x-additionalPropertiesName: Broadcast liquid data
                    description: Insert key-values that you want to reference in your message here.
                  example:
                    headline: Roadrunner spotted in Albuquerque!
                    date: 1511315635
                    text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                email_add_duplicates:
                  type: boolean
                  default: false
                  description: an email address associated with more than one profile id is an error.
                email_ignore_missing:
                  type: boolean
                  default: false
                  description: If false a missing email address is an error.
                id_ignore_missing:
                  type: boolean
                  default: false
                  description: If false, a missing customer ID is an error.
          example:
            recipients:
              and:
                - segment:
                    id: 3
                - or:
                    - attribute:
                        field: interest
                        operator: eq
                        value: roadrunners
                    - attribute:
                        field: state
                        operator: eq
                        value: NM
                    - not:
                        attribute:
                          field: species
                          operator: eq
                          value: roadrunners
            data:
              headline: Roadrunner spotted in Albuquerque!
              date: 1511315635
              text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
        - title: Emails
          description: An array of emails you want to send the broadcast to. These addresses must already exist; your request cannot create a new person.
          allOf:
            - type: object
              required:
                - emails
              properties:
                emails:
                  description: An array of email addresses you want to send the broadcast to. These addresses must already exist; your request cannot create a new person.
                  type: array
                  items:
                    type: string
                    format: email
                  example:
                    - recipient1@example.com
                    - anotherRecipient@example.com
            - type: object
              properties:
                data:
                  type: object
                  description: Contains information you want to use to populate your broadcast.
                  additionalProperties:
                    x-additionalPropertiesName: Broadcast liquid data
                    description: Insert key-values that you want to reference in your message here.
                  example:
                    headline: Roadrunner spotted in Albuquerque!
                    date: 1511315635
                    text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                email_add_duplicates:
                  type: boolean
                  default: false
                  description: an email address associated with more than one profile id is an error.
                email_ignore_missing:
                  type: boolean
                  default: false
                  description: If false a missing email address is an error.
                id_ignore_missing:
                  type: boolean
                  default: false
                  description: If false, a missing customer ID is an error.
        - title: IDs
          description: An array of customer ids that you want to send the broadcast to. These IDs must already exist; your request cannot create a new person.
          allOf:
            - type: object
              required:
                - ids
              properties:
                ids:
                  description: |
                    An array of IDs you want to send a broadcast to. **NOTE**: If your workspace identifies people by `email`, don't use this option. Identify your audience by `emails` instead.
                  type: array
                  maxItems: 10000
                  items:
                    type: string
                  example:
                    - id1
                    - id4
            - type: object
              properties:
                data:
                  type: object
                  description: Contains information you want to use to populate your broadcast.
                  additionalProperties:
                    x-additionalPropertiesName: Broadcast liquid data
                    description: Insert key-values that you want to reference in your message here.
                  example:
                    headline: Roadrunner spotted in Albuquerque!
                    date: 1511315635
                    text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                email_add_duplicates:
                  type: boolean
                  default: false
                  description: an email address associated with more than one profile id is an error.
                email_ignore_missing:
                  type: boolean
                  default: false
                  description: If false a missing email address is an error.
                id_ignore_missing:
                  type: boolean
                  default: false
                  description: If false, a missing customer ID is an error.
        - title: User Maps
          description: An array of JSON objects containing `id` or `email` keys and a `data` key. Each object represents a person you want to send the broadcast to and data you want to personalize their message with using liquid.
          allOf:
            - type: object
              required:
                - per_user_data
              properties:
                per_user_data:
                  description: |
                    An array of people you want to send a broadcast to and custom data for each person. Each object in the array represents a person, with additional data you want to use to personalize their message. **When you trigger a broadcast, the people in your request must already exist in your workspace.** Requests to trigger a broadcast cannot create new people. 

                    **Remove line-breaks from `per_user_data`**. We've added line breaks in examples to make the code easy to read, but you must remove line breaks (collapsing/uglifying your payload) to prevent errors.
                  type: array
                  maxItems: 10000
                  items:
                    oneOf:
                      - title: ids
                        type: object
                        required:
                          - id
                        properties:
                          id:
                            type: string
                            description: The ID of the recipient.
                            example: 1
                          data:
                            type: object
                            description: Merge data associated with the recipient.
                            additionalProperties:
                              x-additionalPropertiesName: Liquid merge data
                              description: Insert key-values that you want to reference in your message here.
                            example:
                              firstName: Hugh
                              lastName: Mann
                              purchase: shoes
                      - title: emails
                        type: object
                        required:
                          - email
                        properties:
                          email:
                            type: string
                            description: The email address of the recipient. This address must be unique in your workspace. If more than one person has the same `email` attribute, your request will produce an error.
                            example: recipient1@example.com
                          data:
                            description: Merge data associated with the recipient.
                            type: object
                            additionalProperties:
                              x-additionalPropertiesName: Liquid merge data
                              description: Insert key-values that you want to reference in your message here.
                            example:
                              firstName: Hugh
                              lastName: Mann
                              purchase: shoes
                  example:
                    - id: wiley_coyote
                      data:
                        voucher_code: FESwYm
                    - email: road@runner.net
                      data:
                        voucher_code: cYm6XJ
            - type: object
              properties:
                data:
                  type: object
                  description: Contains information you want to use to populate your broadcast.
                  additionalProperties:
                    x-additionalPropertiesName: Broadcast liquid data
                    description: Insert key-values that you want to reference in your message here.
                  example:
                    headline: Roadrunner spotted in Albuquerque!
                    date: 1511315635
                    text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                email_add_duplicates:
                  type: boolean
                  default: false
                  description: an email address associated with more than one profile id is an error.
                email_ignore_missing:
                  type: boolean
                  default: false
                  description: If false a missing email address is an error.
                id_ignore_missing:
                  type: boolean
                  default: false
                  description: If false, a missing customer ID is an error.
        - title: Data file URL
          description: |
            The URL of a data file containing per-user data, each line containing a json map with either `id` and `data` or `email` and `data` keys. **When you trigger a broadcast, the people represented by `id` and `email` must already exist in your workspace.** Requests to trigger a broadcast cannot create new people.
          allOf:
            - type: object
              required:
                - data_file_url
              properties:
                data_file_url:
                  description: |
                    The URL of a data file containing per-user data, each line containing a json map with either `id` and `data` or `email` and `data` keys.
                  type: string
                  format: url
                  example: https://myFile.example.com
            - type: object
              properties:
                data:
                  type: object
                  description: Contains information you want to use to populate your broadcast.
                  additionalProperties:
                    x-additionalPropertiesName: Broadcast liquid data
                    description: Insert key-values that you want to reference in your message here.
                  example:
                    headline: Roadrunner spotted in Albuquerque!
                    date: 1511315635
                    text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                email_add_duplicates:
                  type: boolean
                  default: false
                  description: an email address associated with more than one profile id is an error.
                email_ignore_missing:
                  type: boolean
                  default: false
                  description: If false a missing email address is an error.
                id_ignore_missing:
                  type: boolean
                  default: false
                  description: If false, a missing customer ID is an error.
    customer_id:
      type: string
      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
      nullable: true
      example: '42'
    not_nullable_customer_id:
      type: string
      description: The ID of a customer profile, analogous to a "person" in the UI.
      example: '42'
    not_nullable_email_address:
      type: string
      description: The email address of the customer.
      example: test@example.com
    device_id:
      type: string
      description: The identifier for a person's device—typically a device token.
    created:
      type: integer
      format: unix timestamp
      description: The date time when the referenced ID was created.
      example: 1552341937
    updated:
      type: integer
      format: unix timestamp
      description: The date time when the referenced ID was last updated.
      example: 1552341937
    segment_id:
      type: integer
      description: The identifier for a segment.
      example: 7
    deduplicate_id:
      type: string
      readOnly: true
      description: A completely unique CIO identifier.
      example: '15:1492548073'
    segment_name:
      type: string
      description: The name of the segment.
      example: Manual Segment 1
    segment_description:
      type: string
      description: A description for the segment. This can help you understand the purpose of the segment when you encounter it in other requests or in the UI.
      example: My first manual segment
    segmentResponseObject:
      type: object
      properties:
        id:
          type: integer
          description: The identifier for a segment.
          example: 7
        deduplicate_id:
          type: string
          readOnly: true
          description: A completely unique CIO identifier.
          example: '15:1492548073'
        name:
          type: string
          description: The name of the segment.
          example: Manual Segment 1
        description:
          type: string
          description: A description for the segment. This can help you understand the purpose of the segment when you encounter it in other requests or in the UI.
          example: My first manual segment
        state:
          type: string
          description: |
            The state of the segment. 
          enum:
            - finished
        progress:
          type: integer
          nullable: true
          description: If Customer.io has not finished processing the segment, this indicates the percentage complete. Otherwise, this key is null.
          example: null
        type:
          type: string
          description: The type of segment.
          enum:
            - dynamic
            - manual
          example: manual
        tags:
          type: array
          description: The tags assigned to the segment, if any. Tags may help you sort through your segments.
          nullable: true
          items:
            type: string
          example: null
    broadcast_id:
      type: integer
      description: The identifier for a broadcast.
      example: 2
      nullable: true
    msg_template_ids:
      type: array
      deprecated: true
      description: Indicates the message template(s) used in this broadcast.
      items:
        type: object
        properties:
          id:
            type: integer
            description: The identifier for the template.
          type:
            type: string
            description: The type of template.
            enum:
              - email
              - webhook
              - push
              - sms
              - slack
    broadcastObject:
      type: object
      properties:
        id:
          type: integer
          description: The identifier for a broadcast.
          example: 2
          nullable: true
        deduplicate_id:
          type: string
          readOnly: true
          description: A completely unique CIO identifier.
          example: '15:1492548073'
        name:
          type: string
          description: The name of the broadcast.
          readOnly: true
        created:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was created.
          example: 1552341937
        updated:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was last updated.
          example: 1552341937
        active:
          type: boolean
          description: If true, the broadcast is active.
        msg_template_ids:
          type: array
          deprecated: true
          description: Indicates the message template(s) used in this broadcast.
          items:
            type: object
            properties:
              id:
                type: integer
                description: The identifier for the template.
              type:
                type: string
                description: The type of template.
                enum:
                  - email
                  - webhook
                  - push
                  - sms
                  - slack
        actions:
          type: array
          description: A list of actions used by the broadcast.
          items:
            type: object
            properties:
              id:
                type: integer
                description: The identifier for the action.
              type:
                type: string
                description: The type of action.
                enum:
                  - email
                  - webhook
                  - push
                  - sms
                  - slack
        tags:
          type: array
          description: An array of tags you set on this broadcast.
          items:
            type: string
      example:
        id: 2
        deduplicate_id: '2:1520467200'
        created: 1520467200
        type: triggered_broadcast
        updated: 1520467200
        name: basic
        active: true
        actions:
          - id: 3
            type: email
          - id: 4
          - type: webhook
        tags: nil
        first_started: 1520467200
        created_by: ExamplePerson
    sendemail:
      description: The payload of a transactional message.
      oneOf:
        - title: With template
          description: Send a transactional message that you set up in the Customer.io dashboard.
          allOf:
            - type: object
              required:
                - transactional_message_id
              properties:
                transactional_message_id:
                  type: integer
                  description: The transactional message that you want to send. When you set up a transactional message in Customer.io, it functions as a template that you call by ID.
                  example: 44
            - type: object
              properties:
                body:
                  type: string
                  description: The body of your message. This overrides the body of the transactional template (referenced by `transactional_message_id`).
                subject:
                  type: string
                  description: The subject line for your message. This overrides the subject of the transactional template (referenced by `transactional_message_id`).
                from:
                  type: string
                  description: The address that your email is from. This address must be verified by Customer.io. This overrides the from address set within the transactional template (referenced by `transactional_message_id`). You can include a display/friendly name in your from address in the format `Person undefined<person@example.com>`.
                  example: support@example.com
            - type: object
              required:
                - to
                - identifiers
              properties:
                to:
                  type: string
                  description: The message recipient(s). Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
                  example: cool.person@example.com
                identifiers:
                  description: Identifies the person represented by your transactional message by one of, and only one of, `id`, `email`, or `cio_id`.
                  oneOf:
                    - title: id
                      type: object
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: |
                            The identifier for the person represented by the transactional message. **NOTE**: If your workspace identifies people by email, use the `email` identifier instead.
                          example: 12345
                    - title: email
                      type: object
                      required:
                        - email
                      properties:
                        email:
                          type: string
                          description: The identifier for the person represented by the transactional message. Use this option if your workspace identifies people by email rather than by `id`.
                          example: cool.person@example.com
                    - title: cio_id
                      type: object
                      required:
                        - cio_id
                      properties:
                        cio_id:
                          type: string
                          description: A unique, immutable identifier for a person, set by Customer.io when you add a person.
                          example: 3000001
                message_data:
                  type: object
                  description: An object containing the key-value pairs referenced using liquid in your message.
                  additionalProperties:
                    x-additionalPropertiesName: Liquid Data
                    description: Insert key-values that you want to reference in your message here.
                  example:
                    password_reset_token: abcde-12345-fghij-d888
                    account_id: 123dj
                send_at:
                  type: integer
                  description: A unix timestamp determining when the message will be sent. The timestamp can be up to 90 days in the future. If this value is in the past, your message is sent immediately.
                bcc:
                  type: string
                  description: Blind copy message recipients. Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
                  example: bcc@example.com
                fake_bcc:
                  type: boolean
                  description: |
                    If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                reply_to:
                  type: string
                  description: The address that recipients can reply to, if different from the `from` address.
                  example: replyto@example.com
                preheader:
                  type: string
                  description: Also known as "preview text", this is the block block of text that users see next to, or underneath, the subject line in their inbox.
                plaintext_body:
                  type: string
                  description: By default, we generate a plaintext version of your message body for each delivery. Use this key to override the default plain text body.
                attachments:
                  type: array
                  description: |
                    A dictionary of attachments where the filename is the key and the value is the base64-encoded contents. The total size of all attachments must be less than 2 MB. Some filetype extensions are restricted.
                  items:
                    type: object
                    additionalProperties:
                      type: string
                      format: base64
                      x-additionalPropertiesName: Attachment Names
                      x-doNotRender: true
                headers:
                  type: array
                  description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                  items:
                    type: object
                    additionalProperties:
                      type: string
                      x-additionalPropertiesName: Header Names
                      x-doNotRender: true
                disable_message_retention:
                  type: boolean
                  default: false
                  description: If true, the message body is not retained in delivery history. Setting this value overrides the value set in the settings of your `transactional_message_id`.
                send_to_unsubscribed:
                  type: boolean
                  default: true
                  description: If false, your message is not sent to unsubscribed recipients. Setting this value overrides the value set in the settings of your `transactional_message_id`.
                tracked:
                  type: boolean
                  description: If true, Customer.io tracks opens and link clicks in your message.
                  default: true
                queue_draft:
                  type: boolean
                  description: If true, your transactional message is held as a draft in Customer.io and not sent directly to your audience. You must go to the Deliveries and Drafts page to send your message.
                  default: false
                disable_css_preprocessing:
                  type: boolean
                  description: Set to `true` to disable CSS preprocessing. This setting overrides the CSS preprocessing setting on the `transactional_message_id` as set in the user interface. Transactional emails have CSS preprocessing enabled by default.
                  example: false
                  default: false
          example:
            transactional_message_id: 44
            to: cool.person@example.com
            identifiers:
              id: 12345
            message_data:
              password_reset_token: abcde-12345-fghij-d888
              account_id: 123dj
            bcc: bcc@example.com
            disable_message_retention: false
            send_to_unsubscribed: true
            tracked: true
            queue_draft: false
            disable_css_preprocessing: true
        - title: Without template
          description: Create your own message from scratch.
          allOf:
            - type: object
              required:
                - body
                - subject
                - from
              properties:
                body:
                  type: string
                  description: The body of your message.
                  example: Your temporary password is {{message_data.password_reset_token}}
                subject:
                  type: string
                  description: The subject line for your message.
                  example: Reset your password!
                from:
                  type: string
                  description: The address that your email is from. This address must be verified by Customer.io. You can include a display/friendly name in your from address in the format `Person undefined<person@example.com>`.
                  example: support@example.com
            - type: object
              required:
                - to
                - identifiers
              properties:
                to:
                  type: string
                  description: The message recipient(s). Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
                  example: cool.person@example.com
                identifiers:
                  description: Identifies the person represented by your transactional message by one of, and only one of, `id`, `email`, or `cio_id`.
                  oneOf:
                    - title: id
                      type: object
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: |
                            The identifier for the person represented by the transactional message. **NOTE**: If your workspace identifies people by email, use the `email` identifier instead.
                          example: 12345
                    - title: email
                      type: object
                      required:
                        - email
                      properties:
                        email:
                          type: string
                          description: The identifier for the person represented by the transactional message. Use this option if your workspace identifies people by email rather than by `id`.
                          example: cool.person@example.com
                    - title: cio_id
                      type: object
                      required:
                        - cio_id
                      properties:
                        cio_id:
                          type: string
                          description: A unique, immutable identifier for a person, set by Customer.io when you add a person.
                          example: 3000001
                message_data:
                  type: object
                  description: An object containing the key-value pairs referenced using liquid in your message.
                  additionalProperties:
                    x-additionalPropertiesName: Liquid Data
                    description: Insert key-values that you want to reference in your message here.
                  example:
                    password_reset_token: abcde-12345-fghij-d888
                    account_id: 123dj
                send_at:
                  type: integer
                  description: A unix timestamp determining when the message will be sent. The timestamp can be up to 90 days in the future. If this value is in the past, your message is sent immediately.
                bcc:
                  type: string
                  description: Blind copy message recipients. Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
                  example: bcc@example.com
                fake_bcc:
                  type: boolean
                  description: |
                    If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                reply_to:
                  type: string
                  description: The address that recipients can reply to, if different from the `from` address.
                  example: replyto@example.com
                preheader:
                  type: string
                  description: Also known as "preview text", this is the block block of text that users see next to, or underneath, the subject line in their inbox.
                plaintext_body:
                  type: string
                  description: By default, we generate a plaintext version of your message body for each delivery. Use this key to override the default plain text body.
                attachments:
                  type: array
                  description: |
                    A dictionary of attachments where the filename is the key and the value is the base64-encoded contents. The total size of all attachments must be less than 2 MB. Some filetype extensions are restricted.
                  items:
                    type: object
                    additionalProperties:
                      type: string
                      format: base64
                      x-additionalPropertiesName: Attachment Names
                      x-doNotRender: true
                headers:
                  type: array
                  description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                  items:
                    type: object
                    additionalProperties:
                      type: string
                      x-additionalPropertiesName: Header Names
                      x-doNotRender: true
                disable_message_retention:
                  type: boolean
                  default: false
                  description: If true, the message body is not retained in delivery history. Setting this value overrides the value set in the settings of your `transactional_message_id`.
                send_to_unsubscribed:
                  type: boolean
                  default: true
                  description: If false, your message is not sent to unsubscribed recipients. Setting this value overrides the value set in the settings of your `transactional_message_id`.
                tracked:
                  type: boolean
                  description: If true, Customer.io tracks opens and link clicks in your message.
                  default: true
                queue_draft:
                  type: boolean
                  description: If true, your transactional message is held as a draft in Customer.io and not sent directly to your audience. You must go to the Deliveries and Drafts page to send your message.
                  default: false
                disable_css_preprocessing:
                  type: boolean
                  description: Set to `true` to disable CSS preprocessing. This setting overrides the CSS preprocessing setting on the `transactional_message_id` as set in the user interface. Transactional emails have CSS preprocessing enabled by default.
                  example: false
                  default: false
          example:
            from: Support undefined<support@example.com>
            subject: Your password reset request!
            body: Your temporary password is {{message_data.password_reset_token}}
            to: cool.person@example.com
            identifiers:
              id: 12345
            message_data:
              password_reset_token: abcde-12345-fghij-d888
              account_id: 123dj
            bcc: bcc@example.com
            disable_message_retention: false
            send_to_unsubscribed: true
            tracked: true
            queue_draft: false
            disable_css_preprocessing: true
    transactionalObject:
      description: Contains information about a transactional message.
      type: object
      properties:
        id:
          type: integer
          description: The identifier Customer.io assigned to the transactional message
          example: 2
        name:
          type: string
          description: The name you set for the transactional message.
          example: password reset
        description:
          type: string
          description: A description of the transactional message.
          example: sends a temporary password and lets the customer reset their password.
        send_to_unsubscribed:
          type: boolean
          description: If true, people with an `unsubscribed` attribute set to `true` can trigger the message.
        link_tracking:
          type: boolean
          description: If true, link tracking is enabled for this message.
        open_tracking:
          type: boolean
          description: If true, open-tracking is enabled for this message.
        hide_message_body:
          type: boolean
          description: If true, message contents are not retained in delivery history—you cannot recall the exact contents of the message.
        queue_drafts:
          type: boolean
          description: If true, messages do not send automatically, and queue as drafts instead. You must send drafts through the *Deliveries & Drafts* page in the user interface.
        created_at:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was created.
          example: 1552341937
        updated_at:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was last updated.
          example: 1552341937
    contentObject:
      type: object
      properties:
        id:
          type: integer
          description: The identifier of a newsletter variant—a language in a multi-language newsletter or a test in an A/B test.
          readOnly: true
        newsletter_id:
          description: The identifier for a newsletter.
          type: integer
          readOnly: true
          nullable: true
        deduplicate_id:
          type: string
          readOnly: true
          description: A completely unique CIO identifier.
          example: '15:1492548073'
        name:
          type: string
          description: The name of the variant, if it exists.
          readOnly: true
          example: newsletter variant A
        layout:
          type: string
          description: The layout used for the variant, if it exists.
          example: undefined<html>undefined<body>{{ content }}</body>undefined</html>
          readOnly: true
        body:
          type: string
          description: The body of the variant. You cannot modify the body if you created it with our drag-and-drop editor.
          example: undefined<strong>Hello from the API</strong>
        type:
          description: The type of message/action.
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
          readOnly: true
          example: email
        from:
          type: string
          description: The address that the message is from, relevant if the action `type` is `email`.
          readOnly: true
          example: sentFrom@example.com
        from_id:
          type: integer
          description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
          example: 1
        reply_to:
          type: string
          description: The address that receives replies for the message, if applicable.
          readOnly: true
          example: replyto@example.com
        reply_to_id:
          type: integer
          description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
          nullable: true
          example: 38
        preprocessor:
          type: string
          description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
          enum:
            - premailer
          readOnly: true
        recipient:
          description: The recipient address for an action.
          type: string
          example: '{{customer.email}}'
        subject:
          type: string
          description: The subject line for an `email` action.
          example: Did you get that thing I sent you?
        bcc:
          readOnly: true
          description: The blind-copy address(es) for this action.
          type: string
        fake_bcc:
          readOnly: true
          type: boolean
          description: |
            If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
        preheader_text:
          type: string
          description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
          readOnly: true
        headers:
          type: array
          description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
          items:
            type: object
            additionalProperties:
              type: string
              x-additionalPropertiesName: Header Names
              x-doNotRender: true
    action_id:
      description: The identifier for an action.
      type: integer
      readOnly: true
      example: 96
      nullable: true
    campaign_id:
      description: The identifier for a campaign.
      type: integer
      readOnly: true
      example: 5
      nullable: true
    message_id:
      description: The identifier for a delivery—the instance of a message intended for an individual recipient.
      type: string
      readOnly: true
      example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
    message_template_id:
      description: The identifier of the message template used to create a message.
      type: integer
      readOnly: true
      deprecated: true
    recipient:
      description: The recipient address for an action.
      type: string
      example: '{{customer.email}}'
    recipient_not_templated:
      description: The recipient address for an action.
      type: string
      example: test@example.com
    subject:
      type: string
      description: The subject line for an `email` action.
      example: Did you get that thing I sent you?
    newsletter_id:
      description: The identifier for a newsletter.
      type: integer
      readOnly: true
      nullable: true
    content_id:
      description: The identifier for a newsletter variant.
      type: integer
      readOnly: true
      example: 1
      nullable: true
    messageType:
      description: The type of message/action.
      type: string
      enum:
        - email
        - webhook
        - twilio
        - urban_airship
        - slack
        - push
      readOnly: true
      example: email
    from:
      type: string
      description: The address that the message is from, relevant if the action `type` is `email`.
      readOnly: true
      example: sentFrom@example.com
    from_id:
      type: integer
      description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
      example: 1
    reply_to:
      type: string
      description: The address that receives replies for the message, if applicable.
      readOnly: true
      example: replyto@example.com
    reply_to_id:
      type: integer
      description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
      nullable: true
      example: 38
    preprocessor:
      type: string
      description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
      enum:
        - premailer
      readOnly: true
    bcc:
      readOnly: true
      description: The blind-copy address(es) for this action.
      type: string
    fake_bcc:
      readOnly: true
      type: boolean
      description: |
        If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
    preheader_text:
      type: string
      description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
      readOnly: true
    messageObject:
      type: object
      description: Describes an individual message delivery. The object contains keys for all possible parents of the message (`newsletter_id`, `broadcast_id`, etc) but only the parents of the delivery are populated. Other parent IDs are null.
      properties:
        id:
          description: The identifier for a delivery—the instance of a message intended for an individual recipient.
          type: string
          readOnly: true
          example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
        deduplicate_id:
          type: string
          readOnly: true
          description: A completely unique CIO identifier.
          example: '15:1492548073'
        message_template_id:
          description: The identifier of the message template used to create a message.
          type: integer
          readOnly: true
          deprecated: true
        customer_id:
          type: string
          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
          nullable: true
          example: '42'
        customer_identifiers:
          type: object
          description: |
            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

            We recommend that you use this object rather than the less descriptive `customer_id`.
          required:
            - email
            - id
            - cio_id
          properties:
            email:
              type: string
              nullable: true
              format: email
              description: A person's email address, if set.
              example: cool.person@example.com
            id:
              type: string
              nullable: true
              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
              example: 2
            cio_id:
              type: string
              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
              example: 786433
        recipient:
          description: The recipient address for an action.
          type: string
          example: '{{customer.email}}'
        subject:
          type: string
          description: The subject line for an `email` action.
          example: Did you get that thing I sent you?
        metrics:
          type: object
          description: Metrics for an individual instance of a message; each item in the object represents the timestamp when a message achieved a particular metric. This object only contains metrics that have been recorded.
          properties:
            bounced:
              type: integer
              description: The timestamp when the message `bounced`.
            clicked:
              type: integer
              description: The timestamp when the message was `clicked`.
            converted:
              type: integer
              description: The timestamp when the message was `converted`.
            created:
              type: integer
              description: The timestamp when the message was `created`.
            delivered:
              type: integer
              description: The timestamp when the message was `delivered`.
            drafted:
              type: integer
              description: The timestamp when the message was `drafted`.
            dropped:
              type: integer
              description: The timestamp when the message was `dropped`.
            failed:
              type: integer
              description: The timestamp when the message `failed`.
            opened:
              type: integer
              description: The timestamp when the message was `opened`.
            sent:
              type: integer
              description: The timestamp when the message was `sent`.
            spammed:
              type: integer
              description: The timestamp when the message was marked as spam.
            undeliverable:
              type: integer
              description: The timestamp when the message became `undeliverable`.
            unsubscribed:
              type: integer
              description: The timestamp when a person unsubscribed based on this message.
        created:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was created.
          example: 1552341937
        failure_message:
          type: string
          description: Explains why a message failed, if applicable.
          nullable: true
        campaign_id:
          description: The identifier for a campaign.
          type: integer
          readOnly: true
          example: 5
          nullable: true
        action_id:
          description: The identifier for an action.
          type: integer
          readOnly: true
          example: 96
          nullable: true
        newsletter_id:
          description: The identifier for a newsletter.
          type: integer
          readOnly: true
          nullable: true
        content_id:
          description: The identifier for a newsletter variant.
          type: integer
          readOnly: true
          example: 1
          nullable: true
        broadcast_id:
          type: integer
          description: The identifier for a broadcast.
          example: 2
          nullable: true
        type:
          description: The type of message/action.
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
          readOnly: true
          example: email
        forgotten:
          type: boolean
          description: If true message contents are not retained by Customer.io.
      example:
        id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
        deduplicate_id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=:1619137768
        msg_template_id: 43
        action_id: 215
        customer_id: null
        recipient: person@example.com
        subject: Did you get that thing I sent you?
        metrics:
          delivered: 1619137768
          sent: 1619137768
        created: 1619137767
        failure_message: null
        newsletter_id: null
        content_id: null
        campaign_id: 23
        broadcast_id: null
        type: email
        forgotten: false
    broadcastActionObject:
      type: object
      properties:
        id:
          description: The identifier for an action.
          type: integer
          readOnly: true
          example: 96
          nullable: true
        broadcast_id:
          type: integer
          description: The identifier for a broadcast.
          example: 2
          nullable: true
        deduplicate_id:
          type: string
          readOnly: true
          description: A completely unique CIO identifier.
          example: '15:1492548073'
        name:
          type: string
          description: The name of the action, if it exists.
          readOnly: true
          example: Opening Message
        layout:
          type: string
          description: The layout used for the action, if it exists.
          readOnly: true
        created:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was created.
          example: 1552341937
        updated:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was last updated.
          example: 1552341937
        body:
          type: string
          description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
        type:
          type: string
          description: The type of action.
          enum:
            - email
            - twilio
            - urban_airship
            - slack
            - push
          readOnly: true
        sending_state:
          type: string
          enum:
            - automatic
            - draft
            - 'off'
          description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
        from:
          type: string
          description: The address that the message is from, relevant if the action `type` is `email`.
          readOnly: true
          example: sentFrom@example.com
        from_id:
          type: integer
          description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
          example: 1
        reply_to:
          type: string
          description: The address that receives replies for the message, if applicable.
          readOnly: true
          example: replyto@example.com
        reply_to_id:
          type: integer
          description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
          nullable: true
          example: 38
        preprocessor:
          type: string
          description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
          enum:
            - premailer
          readOnly: true
        recipient:
          description: The recipient address for an action.
          type: string
          example: '{{customer.email}}'
        subject:
          type: string
          description: The subject line for an `email` action.
          example: Did you get that thing I sent you?
        bcc:
          readOnly: true
          description: The blind-copy address(es) for this action.
          type: string
        fake_bcc:
          readOnly: true
          type: boolean
          description: |
            If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
        preheader_text:
          type: string
          description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
          readOnly: true
        headers:
          type: array
          description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
          items:
            type: object
            additionalProperties:
              type: string
              x-additionalPropertiesName: Header Names
              x-doNotRender: true
    parent_action_id:
      type: integer
      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
      example: 1
    actionObject:
      oneOf:
        - title: Email / message
          type: object
          properties:
            id:
              description: The identifier for an action.
              type: integer
              readOnly: true
              example: 96
              nullable: true
            campaign_id:
              description: The identifier for a campaign.
              type: integer
              readOnly: true
              example: 5
              nullable: true
            parent_action_id:
              type: integer
              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
              example: 1
            deduplicate_id:
              type: string
              readOnly: true
              description: A completely unique CIO identifier.
              example: '15:1492548073'
            name:
              type: string
              description: The name of the action, if it exists.
              readOnly: true
              example: Opening Message
            layout:
              type: string
              description: The layout used for the action, if it exists.
              readOnly: true
            created:
              type: integer
              format: unix timestamp
              description: The date time when the referenced ID was created.
              example: 1552341937
            updated:
              type: integer
              format: unix timestamp
              description: The date time when the referenced ID was last updated.
              example: 1552341937
            body:
              type: string
              description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
            type:
              type: string
              description: The type of action.
              enum:
                - email
                - twilio
                - urban_airship
                - slack
                - push
              readOnly: true
            sending_state:
              type: string
              enum:
                - automatic
                - draft
                - 'off'
              description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
            from:
              type: string
              description: The address that the message is from, relevant if the action `type` is `email`.
              readOnly: true
              example: sentFrom@example.com
            from_id:
              type: integer
              description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
              example: 1
            reply_to:
              type: string
              description: The address that receives replies for the message, if applicable.
              readOnly: true
              example: replyto@example.com
            reply_to_id:
              type: integer
              description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
              nullable: true
              example: 38
            preprocessor:
              type: string
              description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
              enum:
                - premailer
              readOnly: true
            recipient:
              description: The recipient address for an action.
              type: string
              example: '{{customer.email}}'
            subject:
              type: string
              description: The subject line for an `email` action.
              example: Did you get that thing I sent you?
            bcc:
              readOnly: true
              description: The blind-copy address(es) for this action.
              type: string
            fake_bcc:
              readOnly: true
              type: boolean
              description: |
                If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
            preheader_text:
              type: string
              description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
              readOnly: true
            headers:
              type: array
              description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
              items:
                type: object
                additionalProperties:
                  type: string
                  x-additionalPropertiesName: Header Names
                  x-doNotRender: true
        - title: Webhook
          type: object
          properties:
            id:
              description: The identifier for an action.
              type: integer
              readOnly: true
              example: 96
              nullable: true
            campaign_id:
              description: The identifier for a campaign.
              type: integer
              readOnly: true
              example: 5
              nullable: true
            parent_action_id:
              type: integer
              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
              example: 1
            deduplicate_id:
              type: string
              readOnly: true
              description: A completely unique CIO identifier.
              example: '15:1492548073'
            name:
              type: string
              description: The name of the action, if it exists.
              readOnly: true
              example: Set attribute
            layout:
              type: string
              description: The layout used for the action, if it exists.
              readOnly: true
            created:
              type: integer
              format: unix timestamp
              description: The date time when the referenced ID was created.
              example: 1552341937
            updated:
              type: integer
              format: unix timestamp
              description: The date time when the referenced ID was last updated.
              example: 1552341937
            body:
              type: string
              description: The payload for your webhook.
              example: '{"attribute":"cool-webhook"}'
            type:
              type: string
              description: The type of action.
              enum:
                - webhook
              readOnly: true
            url:
              type: string
              description: The URL to send a webhook to, applies to `webhook` type actions.
              example: https://my.example.com/webhook
            headers:
              type: array
              description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
              items:
                type: object
                additionalProperties:
                  type: string
                  x-additionalPropertiesName: Header Names
                  x-doNotRender: true
            method:
              description: The HTTP method for your webhook.
              type: string
              enum:
                - get
                - post
                - put
                - delete
                - patch
              example: post
            sending_state:
              type: string
              enum:
                - automatic
                - draft
                - 'off'
              description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
    sending_state:
      type: string
      enum:
        - automatic
        - draft
        - 'off'
      description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
    periodWebhookMetrics:
      type: object
      description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
      properties:
        2xx:
          type: array
          items:
            type: integer
          description: 2xx responses by period, representative of webhook performance.
        3xx:
          type: array
          items:
            type: integer
          description: 3xx responses by period, representative of webhook performance.
        4xx:
          type: array
          items:
            type: integer
          description: 4xx responses by period, representative of webhook performance.
        5xx:
          type: array
          items:
            type: integer
          description: 5xx responses by period, representative of webhook performance.
    periodMessageMetrics:
      description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
      type: object
      properties:
        attempted:
          type: array
          items:
            type: integer
          description: The number of `attempted` messages.
        bounced:
          type: array
          items:
            type: integer
          description: The number of `bounced` messages.
        clicked:
          type: array
          items:
            type: integer
          description: The number of `clicked` messages.
        converted:
          type: array
          items:
            type: integer
          description: The number of `converted` messages.
        created:
          type: array
          items:
            type: integer
          description: The number of `created` messages.
        delivered:
          type: array
          items:
            type: integer
          description: The number of `delivered` messages.
        drafted:
          type: array
          items:
            type: integer
          description: The number of `drafted` messages.
        dropped:
          type: array
          items:
            type: integer
          description: The number of `dropped` messages.
        failed:
          type: array
          items:
            type: integer
          description: The number of `failed` messages.
        opened:
          type: array
          items:
            type: integer
          description: The number of `opened` messages.
        sent:
          type: array
          items:
            type: integer
          description: The number of sent messages.
        spammed:
          type: array
          items:
            type: integer
          description: The number of spam complaints.
        undeliverable:
          type: array
          items:
            type: integer
          description: The number of `undeliverable` messages.
        unsubscribed:
          type: array
          items:
            type: integer
          description: The number of unsubscribes attributed to the campaign or message.
    webhookMetrics:
      type: object
      properties:
        2xx:
          type: integer
          description: The number of 2xx responses.
        3xx:
          type: integer
          description: The number of 3xx responses.
        4xx:
          type: integer
          description: The number of 4xx responses.
        5xx:
          type: integer
          description: The number of 5xx responses.
    messageMetrics:
      type: object
      description: Metrics for an individual instance of a message; each item in the object represents the timestamp when a message achieved a particular metric. This object only contains metrics that have been recorded.
      properties:
        bounced:
          type: integer
          description: The timestamp when the message `bounced`.
        clicked:
          type: integer
          description: The timestamp when the message was `clicked`.
        converted:
          type: integer
          description: The timestamp when the message was `converted`.
        created:
          type: integer
          description: The timestamp when the message was `created`.
        delivered:
          type: integer
          description: The timestamp when the message was `delivered`.
        drafted:
          type: integer
          description: The timestamp when the message was `drafted`.
        dropped:
          type: integer
          description: The timestamp when the message was `dropped`.
        failed:
          type: integer
          description: The timestamp when the message `failed`.
        opened:
          type: integer
          description: The timestamp when the message was `opened`.
        sent:
          type: integer
          description: The timestamp when the message was `sent`.
        spammed:
          type: integer
          description: The timestamp when the message was marked as spam.
        undeliverable:
          type: integer
          description: The timestamp when the message became `undeliverable`.
        unsubscribed:
          type: integer
          description: The timestamp when a person unsubscribed based on this message.
    messageTotalMetrics:
      type: object
      description: Total metrics over the lifespan of the requested item.
      properties:
        bounced:
          type: integer
          description: The number of `bounced` messages.
        clicked:
          type: integer
          description: The number of `clicked` messages.
        converted:
          type: integer
          description: The number of `converted` messages.
        created:
          type: integer
          description: The number of `created` messages.
        delivered:
          type: integer
          description: The number of `delivered` messages.
        drafted:
          type: integer
          description: The number of `drafted` messages.
        dropped:
          type: integer
          description: The number of `dropped` messages.
        failed:
          type: integer
          description: The number of `failed` messages.
        opened:
          type: integer
          description: The number of `opened` messages
        sent:
          type: integer
          description: The number of `sent` messages
        spammed:
          type: integer
          description: The number of messages marked as spam.
        undeliverable:
          type: integer
          description: The number of `undeliverable` messages.
        unsubscribed:
          type: integer
          description: The number of unsubscribes attributed to messages.
    linkMetrics:
      type: object
      properties:
        link:
          type: object
          properties:
            id:
              type: integer
              description: The ID of the link.
              example: 1234
            href:
              type: string
              description: The link destination—a URL, mailto, etc.
              example: https://customer.io/docs
        metric:
          type: object
          description: Contains metrics for the link.
          properties:
            series:
              type: object
              properties:
                clicked:
                  type: array
                  description: An array of results from oldest to newest, where each result indicates a period.
                  items:
                    type: integer
                  example:
                    - 1
                    - 3
                    - 5
                    - 7
    campaignObject:
      type: object
      properties:
        id:
          description: The identifier for a campaign.
          type: integer
          readOnly: true
          example: 5
          nullable: true
        deduplicate_id:
          type: string
          readOnly: true
          description: A completely unique CIO identifier.
          example: '15:1492548073'
        name:
          type: string
          description: The name of the campaign.
          readOnly: true
        type:
          type: string
          description: The type of campaign.
          enum:
            - segment
        created:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was created.
          example: 1552341937
        updated:
          type: integer
          format: unix timestamp
          description: The date time when the referenced ID was last updated.
          example: 1552341937
        filter_segment_ids:
          description: A list of segments used in the campaign filter, returned if the campaign audience was filtered on one or more segments.
          type: array
          items:
            type: integer
          example:
            - 21
            - 42
        trigger_segment_ids:
          description: A list of segments used in the campaign trigger, returned if the campaign trigger included one or more segment conditions.
          type: array
          items:
            type: integer
          example:
            - 90
        active:
          type: boolean
          description: If true, the campaign is active and can still send messages.
        msg_templates:
          type: array
          deprecated: true
          description: Indicates the message templates used in this campaign.
          items:
            type: object
            properties:
              type:
                type: string
                description: The message type the template represents.
                enum:
                  - email
                  - sms
                  - push
                  - slack
              id:
                type: integer
                description: The identifier for the template.
        actions:
          type: array
          description: An array of actions contained within the campaign.
          items:
            type: object
            properties:
              type:
                type: string
                description: The message type actions resulting from the campaign.
                enum:
                  - email
                  - sms
                  - push
                  - slack
                  - webhook
              id:
                type: integer
                description: The identifier for the action.
        first_started:
          type: integer
          format: unix timestamp
          description: The date and time when you first started the campaign and it first became eligible to be triggered.
          example: 1552341937
        created_by:
          type: string
          format: email
          description: The email address of the person who created the campaign.
          example: hugh.mann@example.com
        tags:
          type: array
          description: An array of tags you set on this campaign.
          items:
            type: string
          example:
            - new
            - welcome
    esp_suppression:
      type: object
      properties:
        category:
          type: string
          description: The reason the addresses are suppressed.
          enum:
            - bounces
            - blocks
            - spam
            - invalid
          example: bounces
        suppressions:
          type: array
          description: The addresses suppressed in this category.
          items:
            type: object
            properties:
              created:
                type: integer
                format: Unix timestamp
                description: The timestamp (in seconds), when the ESP suppressed the address.
                example: 1650895738
              email:
                type: string
                description: The email address that the ESP suppressed.
                example: bounced.person@example.com
              reason:
                type: string
                description: The reason for the suppression, as [recorded by Mailgun](https://documentation.mailgun.com/en/latest/api-suppressions.html).
                example: Uploaded manually via api.customer.io
              status:
                type: string
                description: The status code for the suppression, as [recorded by mailgun](https://documentation.mailgun.com/en/latest/api-suppressions.html). This is normally `550`.
                example: '550'
    pushTitle:
      type: string
      description: The title of your push notification.
    pushBody:
      type: string
      description: The body of your push notification.
    pushLink:
      type: string
      description: A deep link (to a page in your app), or a link to a web page.
    pushImage:
      type: string
      description: The URL of an HTTPS image that you want to use for your message.
    customAndroidProps:
      type: object
      description: Properties supported specifically by Android on FCM.
      properties:
        icon:
          type: string
          description: Sets the notification icon to `myicon` for drawable resource `myicon`. If you don't send this key, FCM displays the launcher icon from your app manifest.
        sound:
          type: string
          description: The sound that plays when the device receives the notification. Supports `"default"` or the filename of a sound resource bundled in your app. Sound files must reside in `/res/raw/`.
        tag:
          type: string
          description: |
            Identifier to replace existing notifications in the notification drawer. If empty, each request creates a new notification.

            If you specify a tag, and a notification with the same tag is already being shown, the new notification replaces the existing one in the notification drawer. 
        color:
          type: string
          description: The notification's icon color, in `#rrggbb` format.
        click_action:
          type: string
          description: The action that occurs when user taps on the notification. Launches an activity with a matching intent filter when a person taps the notification.
        body_loc_key:
          type: string
          description: The key to the body string in the app's string resources that you want to use to localize the body text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
        body_loc_arg:
          type: string
          description: Variable string values used in place of the format specifiers in `body_loc_key` to localize the body text to the user's current localization. See Formatting and Styling for more information.
        title_loc_key:
          type: string
          description: The key to the title string in the app's string resources that you want to use to localize the title text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
        title_loc_arg:
          type: string
          description: Variable string values used in place of the format specifiers in `title_loc_key` to localize the title text to the user's current localization. See Formatting and Styling for more information.
    allAndroidProps:
      allOf:
        - type: object
          properties:
            title:
              type: string
              description: The title of your push notification.
            body:
              type: string
              description: The body of your push notification.
        - type: object
          description: Properties supported specifically by Android on FCM.
          properties:
            icon:
              type: string
              description: Sets the notification icon to `myicon` for drawable resource `myicon`. If you don't send this key, FCM displays the launcher icon from your app manifest.
            sound:
              type: string
              description: The sound that plays when the device receives the notification. Supports `"default"` or the filename of a sound resource bundled in your app. Sound files must reside in `/res/raw/`.
            tag:
              type: string
              description: |
                Identifier to replace existing notifications in the notification drawer. If empty, each request creates a new notification.

                If you specify a tag, and a notification with the same tag is already being shown, the new notification replaces the existing one in the notification drawer. 
            color:
              type: string
              description: The notification's icon color, in `#rrggbb` format.
            click_action:
              type: string
              description: The action that occurs when user taps on the notification. Launches an activity with a matching intent filter when a person taps the notification.
            body_loc_key:
              type: string
              description: The key to the body string in the app's string resources that you want to use to localize the body text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
            body_loc_arg:
              type: string
              description: Variable string values used in place of the format specifiers in `body_loc_key` to localize the body text to the user's current localization. See Formatting and Styling for more information.
            title_loc_key:
              type: string
              description: The key to the title string in the app's string resources that you want to use to localize the title text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
            title_loc_arg:
              type: string
              description: Variable string values used in place of the format specifiers in `title_loc_key` to localize the title text to the user's current localization. See Formatting and Styling for more information.
    fcmAndroidWithSdk:
      type: object
      required:
        - message
      properties:
        message:
          type: object
          description: The parent object for all custom push payloads.
          required:
            - data
          properties:
            data:
              type: object
              description: Contains properties interpreted by the Customer.io SDK.
              properties:
                title:
                  type: string
                  description: The title of your push notification.
                body:
                  type: string
                  description: The body of your push notification.
                link:
                  type: string
                  description: A deep link (to a page in your app), or a link to a web page.
                image:
                  type: string
                  description: The URL of an HTTPS image that you want to use for your message.
            android:
              type: object
              description: Contains properties that are **not** interpreted by the SDK. You need to write your own code to handle these Android push features.
              properties:
                notification:
                  type: object
                  description: Properties supported specifically by Android on FCM.
                  properties:
                    icon:
                      type: string
                      description: Sets the notification icon to `myicon` for drawable resource `myicon`. If you don't send this key, FCM displays the launcher icon from your app manifest.
                    sound:
                      type: string
                      description: The sound that plays when the device receives the notification. Supports `"default"` or the filename of a sound resource bundled in your app. Sound files must reside in `/res/raw/`.
                    tag:
                      type: string
                      description: |
                        Identifier to replace existing notifications in the notification drawer. If empty, each request creates a new notification.

                        If you specify a tag, and a notification with the same tag is already being shown, the new notification replaces the existing one in the notification drawer. 
                    color:
                      type: string
                      description: The notification's icon color, in `#rrggbb` format.
                    click_action:
                      type: string
                      description: The action that occurs when user taps on the notification. Launches an activity with a matching intent filter when a person taps the notification.
                    body_loc_key:
                      type: string
                      description: The key to the body string in the app's string resources that you want to use to localize the body text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
                    body_loc_arg:
                      type: string
                      description: Variable string values used in place of the format specifiers in `body_loc_key` to localize the body text to the user's current localization. See Formatting and Styling for more information.
                    title_loc_key:
                      type: string
                      description: The key to the title string in the app's string resources that you want to use to localize the title text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
                    title_loc_arg:
                      type: string
                      description: Variable string values used in place of the format specifiers in `title_loc_key` to localize the title text to the user's current localization. See Formatting and Styling for more information.
    fcmAndroidWithoutSdk:
      type: object
      required:
        - message
      properties:
        message:
          type: object
          description: The parent object for all custom push payloads.
          properties:
            notification:
              type: object
              description: Contains the push body and title.
              properties:
                title:
                  type: string
                  description: The title of your push notification.
                body:
                  type: string
                  description: The body of your push notification.
            data:
              type: object
              description: Contains key-value pairs that your app interprets.
              additionalProperties:
                x-additionalPropertiesName: Attachment Names
                x-doNotRender: true
                type: string
            android:
              type: object
              description: Contains custom push options for your notification.
              properties:
                notification:
                  type: object
                  description: Properties supported specifically by Android on FCM.
                  properties:
                    icon:
                      type: string
                      description: Sets the notification icon to `myicon` for drawable resource `myicon`. If you don't send this key, FCM displays the launcher icon from your app manifest.
                    sound:
                      type: string
                      description: The sound that plays when the device receives the notification. Supports `"default"` or the filename of a sound resource bundled in your app. Sound files must reside in `/res/raw/`.
                    tag:
                      type: string
                      description: |
                        Identifier to replace existing notifications in the notification drawer. If empty, each request creates a new notification.

                        If you specify a tag, and a notification with the same tag is already being shown, the new notification replaces the existing one in the notification drawer. 
                    color:
                      type: string
                      description: The notification's icon color, in `#rrggbb` format.
                    click_action:
                      type: string
                      description: The action that occurs when user taps on the notification. Launches an activity with a matching intent filter when a person taps the notification.
                    body_loc_key:
                      type: string
                      description: The key to the body string in the app's string resources that you want to use to localize the body text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
                    body_loc_arg:
                      type: string
                      description: Variable string values used in place of the format specifiers in `body_loc_key` to localize the body text to the user's current localization. See Formatting and Styling for more information.
                    title_loc_key:
                      type: string
                      description: The key to the title string in the app's string resources that you want to use to localize the title text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
                    title_loc_arg:
                      type: string
                      description: Variable string values used in place of the format specifiers in `title_loc_key` to localize the title text to the user's current localization. See Formatting and Styling for more information.
    fcmAndroid:
      oneOf:
        - title: SDK Integration
          type: object
          required:
            - message
          properties:
            message:
              type: object
              required:
                - message
              properties:
                message:
                  type: object
                  description: The parent object for all custom push payloads.
                  required:
                    - data
                  properties:
                    data:
                      type: object
                      description: Contains properties interpreted by the Customer.io SDK.
                      properties:
                        title:
                          type: string
                          description: The title of your push notification.
                        body:
                          type: string
                          description: The body of your push notification.
                        link:
                          type: string
                          description: A deep link (to a page in your app), or a link to a web page.
                        image:
                          type: string
                          description: The URL of an HTTPS image that you want to use for your message.
                    android:
                      type: object
                      description: Contains properties that are **not** interpreted by the SDK. You need to write your own code to handle these Android push features.
                      properties:
                        notification:
                          type: object
                          description: Properties supported specifically by Android on FCM.
                          properties:
                            icon:
                              type: string
                              description: Sets the notification icon to `myicon` for drawable resource `myicon`. If you don't send this key, FCM displays the launcher icon from your app manifest.
                            sound:
                              type: string
                              description: The sound that plays when the device receives the notification. Supports `"default"` or the filename of a sound resource bundled in your app. Sound files must reside in `/res/raw/`.
                            tag:
                              type: string
                              description: |
                                Identifier to replace existing notifications in the notification drawer. If empty, each request creates a new notification.

                                If you specify a tag, and a notification with the same tag is already being shown, the new notification replaces the existing one in the notification drawer. 
                            color:
                              type: string
                              description: The notification's icon color, in `#rrggbb` format.
                            click_action:
                              type: string
                              description: The action that occurs when user taps on the notification. Launches an activity with a matching intent filter when a person taps the notification.
                            body_loc_key:
                              type: string
                              description: The key to the body string in the app's string resources that you want to use to localize the body text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
                            body_loc_arg:
                              type: string
                              description: Variable string values used in place of the format specifiers in `body_loc_key` to localize the body text to the user's current localization. See Formatting and Styling for more information.
                            title_loc_key:
                              type: string
                              description: The key to the title string in the app's string resources that you want to use to localize the title text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
                            title_loc_arg:
                              type: string
                              description: Variable string values used in place of the format specifiers in `title_loc_key` to localize the title text to the user's current localization. See Formatting and Styling for more information.
        - title: Custom Integration
          type: object
          required:
            - message
          properties:
            message:
              type: object
              required:
                - message
              properties:
                message:
                  type: object
                  description: The parent object for all custom push payloads.
                  properties:
                    notification:
                      type: object
                      description: Contains the push body and title.
                      properties:
                        title:
                          type: string
                          description: The title of your push notification.
                        body:
                          type: string
                          description: The body of your push notification.
                    data:
                      type: object
                      description: Contains key-value pairs that your app interprets.
                      additionalProperties:
                        x-additionalPropertiesName: Attachment Names
                        x-doNotRender: true
                        type: string
                    android:
                      type: object
                      description: Contains custom push options for your notification.
                      properties:
                        notification:
                          type: object
                          description: Properties supported specifically by Android on FCM.
                          properties:
                            icon:
                              type: string
                              description: Sets the notification icon to `myicon` for drawable resource `myicon`. If you don't send this key, FCM displays the launcher icon from your app manifest.
                            sound:
                              type: string
                              description: The sound that plays when the device receives the notification. Supports `"default"` or the filename of a sound resource bundled in your app. Sound files must reside in `/res/raw/`.
                            tag:
                              type: string
                              description: |
                                Identifier to replace existing notifications in the notification drawer. If empty, each request creates a new notification.

                                If you specify a tag, and a notification with the same tag is already being shown, the new notification replaces the existing one in the notification drawer. 
                            color:
                              type: string
                              description: The notification's icon color, in `#rrggbb` format.
                            click_action:
                              type: string
                              description: The action that occurs when user taps on the notification. Launches an activity with a matching intent filter when a person taps the notification.
                            body_loc_key:
                              type: string
                              description: The key to the body string in the app's string resources that you want to use to localize the body text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
                            body_loc_arg:
                              type: string
                              description: Variable string values used in place of the format specifiers in `body_loc_key` to localize the body text to the user's current localization. See Formatting and Styling for more information.
                            title_loc_key:
                              type: string
                              description: The key to the title string in the app's string resources that you want to use to localize the title text to the user's current localization. See [String Resources](https://developer.android.com/guide/topics/resources/string-resource/) for more information.
                            title_loc_arg:
                              type: string
                              description: Variable string values used in place of the format specifiers in `title_loc_key` to localize the title text to the user's current localization. See Formatting and Styling for more information.
    iosSharedOptions:
      type: object
      description: A push payload intended for an iOS device.
      properties:
        alert:
          oneOf:
            - title: Simple alert
              type: string
              description: A simple alert message.
            - title: Complex alert
              type: object
              properties:
                body:
                  type: string
                  description: The body of your push notification.
                title:
                  type: string
                  description: The title of your push notification.
                subtitle:
                  description: Additional information that explains the purpose of the notification.
                  type: string
                launch-image:
                  description: The name of the launch image file you want to display. When a user launches your app, they'll see this image or storyboard file rather than your app’s normal launch image.
                  type: string
                title-loc-key:
                  description: The key for a localized title string in your app’s Localizable.strings files.
                  type: string
                title-loc-args:
                  type: array
                  description: An array of replacement value strings for variables in your title string. Each %@ character in the title-loc-key is replaced by a value from this array, in the order they appear in the title string.
                  items:
                    type: string
                subtitle-loc-key:
                  description: The key for a localized subtitle string in your app’s Localizable.strings file.
                  type: string
                subtitle-loc-args:
                  type: array
                  description: An array of replacement value strings for variables in your subtitle string. Each %@ character in the subtitle-loc-key is replaced by a value from this array, in the order they appear in the subtitle string.
                  items:
                    type: string
                loc-key:
                  description: The key for a localized message string in your app’s Localizable.strings file.
                  type: string
                loc-args:
                  type: array
                  description: An array of replacement value strings for variables in your message text. Each %@ character in the loc-key is replaced by a value from this array, in the order they appear in the message body.
                  items:
                    type: string
        badge:
          type: integer
          description: The number you want to display on your app's icon. Set to 0 to remove the current badge, if any.
        sound:
          oneOf:
            - title: Regular alert
              type: string
              description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound. For critical alerts, you'll pass an object instead.
            - title: Critical alert
              type: object
              properties:
                critical:
                  type: integer
                  description: 1 indicates critical. 0 is not critical.
                name:
                  type: string
                  description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound.
                volume:
                  type: number
                  description: The volume for a critical alert between 0 and 1, where 0 is silent and 1 is full volume.
        thread-id:
          type: string
          description: An identifier to group related notifications.
        category:
          type: string
          description: The notification’s type. This string must correspond to the identifier of one of the `UNNotificationCategory` objects you register at launch time.
        content-available:
          type: integer
          description: The background notification flag. Use `1` without an `alert` to perform a silent update. `0` indicates a normal push notification.
        mutable-content:
          type: integer
          description: The notification service app extension flag. If the value is 1, your notification is passed to your notification service app extension before delivery. Use your extension to modify the notification’s content.
        target-content-id:
          type: string
          description: The identifier of the window brought forward.
        interruption-level:
          type: string
          description: Indicates the importance and delivery timing of a notification.
          enum:
            - passive
            - active
            - time-sensitive
            - critical
        relevance-score:
          type: number
          description: A number between 0 and 1. The highest score is considered the "most relevant"  and is featured in the notification summary.
    fcmIosWithSdk:
      type: object
      required:
        - message
      properties:
        message:
          type: object
          description: The base object for all FCM payloads.
          required:
            - apns
          properties:
            apns:
              type: object
              required:
                - payload
              description: Defines a payload for iOS devices sent through Firebase Cloud Messaging (FCM).
              properties:
                headers:
                  description: Headers defined by [Apple's payload reference](https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/sending_notification_requests_to_apns) that you want to pass through FCM.
                  type: object
                payload:
                  type: object
                  description: Contains a push payload.
                  properties:
                    CIO:
                      type: object
                      description: Contains properties interpreted by the Customer.io iOS SDK.
                      required:
                        - push
                      properties:
                        push:
                          type: object
                          description: A push payload for the iOS SDK.
                          properties:
                            title:
                              type: string
                              description: The title of your push notification.
                            body:
                              type: string
                              description: The body of your push notification.
                            link:
                              type: string
                              description: A deep link (to a page in your app), or a link to a web page.
                            image:
                              type: string
                              description: The URL of an HTTPS image that you want to use for your message.
                    aps:
                      type: object
                      description: A push payload intended for an iOS device.
                      properties:
                        alert:
                          oneOf:
                            - title: Simple alert
                              type: string
                              description: A simple alert message.
                            - title: Complex alert
                              type: object
                              properties:
                                body:
                                  type: string
                                  description: The body of your push notification.
                                title:
                                  type: string
                                  description: The title of your push notification.
                                subtitle:
                                  description: Additional information that explains the purpose of the notification.
                                  type: string
                                launch-image:
                                  description: The name of the launch image file you want to display. When a user launches your app, they'll see this image or storyboard file rather than your app’s normal launch image.
                                  type: string
                                title-loc-key:
                                  description: The key for a localized title string in your app’s Localizable.strings files.
                                  type: string
                                title-loc-args:
                                  type: array
                                  description: An array of replacement value strings for variables in your title string. Each %@ character in the title-loc-key is replaced by a value from this array, in the order they appear in the title string.
                                  items:
                                    type: string
                                subtitle-loc-key:
                                  description: The key for a localized subtitle string in your app’s Localizable.strings file.
                                  type: string
                                subtitle-loc-args:
                                  type: array
                                  description: An array of replacement value strings for variables in your subtitle string. Each %@ character in the subtitle-loc-key is replaced by a value from this array, in the order they appear in the subtitle string.
                                  items:
                                    type: string
                                loc-key:
                                  description: The key for a localized message string in your app’s Localizable.strings file.
                                  type: string
                                loc-args:
                                  type: array
                                  description: An array of replacement value strings for variables in your message text. Each %@ character in the loc-key is replaced by a value from this array, in the order they appear in the message body.
                                  items:
                                    type: string
                        badge:
                          type: integer
                          description: The number you want to display on your app's icon. Set to 0 to remove the current badge, if any.
                        sound:
                          oneOf:
                            - title: Regular alert
                              type: string
                              description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound. For critical alerts, you'll pass an object instead.
                            - title: Critical alert
                              type: object
                              properties:
                                critical:
                                  type: integer
                                  description: 1 indicates critical. 0 is not critical.
                                name:
                                  type: string
                                  description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound.
                                volume:
                                  type: number
                                  description: The volume for a critical alert between 0 and 1, where 0 is silent and 1 is full volume.
                        thread-id:
                          type: string
                          description: An identifier to group related notifications.
                        category:
                          type: string
                          description: The notification’s type. This string must correspond to the identifier of one of the `UNNotificationCategory` objects you register at launch time.
                        content-available:
                          type: integer
                          description: The background notification flag. Use `1` without an `alert` to perform a silent update. `0` indicates a normal push notification.
                        mutable-content:
                          type: integer
                          description: The notification service app extension flag. If the value is 1, your notification is passed to your notification service app extension before delivery. Use your extension to modify the notification’s content.
                        target-content-id:
                          type: string
                          description: The identifier of the window brought forward.
                        interruption-level:
                          type: string
                          description: Indicates the importance and delivery timing of a notification.
                          enum:
                            - passive
                            - active
                            - time-sensitive
                            - critical
                        relevance-score:
                          type: number
                          description: A number between 0 and 1. The highest score is considered the "most relevant"  and is featured in the notification summary.
                  additionalProperties:
                    description: Additional properties that you've set up your app to interpret outside of the Customer.io SDK.
                    x-additionalPropertiesName: Custom key-value pairs
    fcmIosWithoutSdk:
      type: object
      required:
        - message
      properties:
        message:
          type: object
          required:
            - apns
          description: The base object for all Firebase payloads.
          properties:
            apns:
              type: object
              description: Defines a push notification for iOS devices.
              required:
                - payload
              properties:
                headers:
                  description: Headers defined by [Apple's payload reference](https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/sending_notification_requests_to_apns) that you want to pass through FCM.
                  type: object
                payload:
                  type: object
                  properties:
                    aps:
                      type: object
                      description: A push payload intended for an iOS device.
                      properties:
                        alert:
                          oneOf:
                            - title: Simple alert
                              type: string
                              description: A simple alert message.
                            - title: Complex alert
                              type: object
                              properties:
                                body:
                                  type: string
                                  description: The body of your push notification.
                                title:
                                  type: string
                                  description: The title of your push notification.
                                subtitle:
                                  description: Additional information that explains the purpose of the notification.
                                  type: string
                                launch-image:
                                  description: The name of the launch image file you want to display. When a user launches your app, they'll see this image or storyboard file rather than your app’s normal launch image.
                                  type: string
                                title-loc-key:
                                  description: The key for a localized title string in your app’s Localizable.strings files.
                                  type: string
                                title-loc-args:
                                  type: array
                                  description: An array of replacement value strings for variables in your title string. Each %@ character in the title-loc-key is replaced by a value from this array, in the order they appear in the title string.
                                  items:
                                    type: string
                                subtitle-loc-key:
                                  description: The key for a localized subtitle string in your app’s Localizable.strings file.
                                  type: string
                                subtitle-loc-args:
                                  type: array
                                  description: An array of replacement value strings for variables in your subtitle string. Each %@ character in the subtitle-loc-key is replaced by a value from this array, in the order they appear in the subtitle string.
                                  items:
                                    type: string
                                loc-key:
                                  description: The key for a localized message string in your app’s Localizable.strings file.
                                  type: string
                                loc-args:
                                  type: array
                                  description: An array of replacement value strings for variables in your message text. Each %@ character in the loc-key is replaced by a value from this array, in the order they appear in the message body.
                                  items:
                                    type: string
                        badge:
                          type: integer
                          description: The number you want to display on your app's icon. Set to 0 to remove the current badge, if any.
                        sound:
                          oneOf:
                            - title: Regular alert
                              type: string
                              description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound. For critical alerts, you'll pass an object instead.
                            - title: Critical alert
                              type: object
                              properties:
                                critical:
                                  type: integer
                                  description: 1 indicates critical. 0 is not critical.
                                name:
                                  type: string
                                  description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound.
                                volume:
                                  type: number
                                  description: The volume for a critical alert between 0 and 1, where 0 is silent and 1 is full volume.
                        thread-id:
                          type: string
                          description: An identifier to group related notifications.
                        category:
                          type: string
                          description: The notification’s type. This string must correspond to the identifier of one of the `UNNotificationCategory` objects you register at launch time.
                        content-available:
                          type: integer
                          description: The background notification flag. Use `1` without an `alert` to perform a silent update. `0` indicates a normal push notification.
                        mutable-content:
                          type: integer
                          description: The notification service app extension flag. If the value is 1, your notification is passed to your notification service app extension before delivery. Use your extension to modify the notification’s content.
                        target-content-id:
                          type: string
                          description: The identifier of the window brought forward.
                        interruption-level:
                          type: string
                          description: Indicates the importance and delivery timing of a notification.
                          enum:
                            - passive
                            - active
                            - time-sensitive
                            - critical
                        relevance-score:
                          type: number
                          description: A number between 0 and 1. The highest score is considered the "most relevant"  and is featured in the notification summary.
    apnsWithoutSdk:
      type: object
      properties:
        aps:
          type: object
          description: A push payload intended for an iOS device.
          properties:
            alert:
              oneOf:
                - title: Simple alert
                  type: string
                  description: A simple alert message.
                - title: Complex alert
                  type: object
                  properties:
                    body:
                      type: string
                      description: The body of your push notification.
                    title:
                      type: string
                      description: The title of your push notification.
                    subtitle:
                      description: Additional information that explains the purpose of the notification.
                      type: string
                    launch-image:
                      description: The name of the launch image file you want to display. When a user launches your app, they'll see this image or storyboard file rather than your app’s normal launch image.
                      type: string
                    title-loc-key:
                      description: The key for a localized title string in your app’s Localizable.strings files.
                      type: string
                    title-loc-args:
                      type: array
                      description: An array of replacement value strings for variables in your title string. Each %@ character in the title-loc-key is replaced by a value from this array, in the order they appear in the title string.
                      items:
                        type: string
                    subtitle-loc-key:
                      description: The key for a localized subtitle string in your app’s Localizable.strings file.
                      type: string
                    subtitle-loc-args:
                      type: array
                      description: An array of replacement value strings for variables in your subtitle string. Each %@ character in the subtitle-loc-key is replaced by a value from this array, in the order they appear in the subtitle string.
                      items:
                        type: string
                    loc-key:
                      description: The key for a localized message string in your app’s Localizable.strings file.
                      type: string
                    loc-args:
                      type: array
                      description: An array of replacement value strings for variables in your message text. Each %@ character in the loc-key is replaced by a value from this array, in the order they appear in the message body.
                      items:
                        type: string
            badge:
              type: integer
              description: The number you want to display on your app's icon. Set to 0 to remove the current badge, if any.
            sound:
              oneOf:
                - title: Regular alert
                  type: string
                  description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound. For critical alerts, you'll pass an object instead.
                - title: Critical alert
                  type: object
                  properties:
                    critical:
                      type: integer
                      description: 1 indicates critical. 0 is not critical.
                    name:
                      type: string
                      description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound.
                    volume:
                      type: number
                      description: The volume for a critical alert between 0 and 1, where 0 is silent and 1 is full volume.
            thread-id:
              type: string
              description: An identifier to group related notifications.
            category:
              type: string
              description: The notification’s type. This string must correspond to the identifier of one of the `UNNotificationCategory` objects you register at launch time.
            content-available:
              type: integer
              description: The background notification flag. Use `1` without an `alert` to perform a silent update. `0` indicates a normal push notification.
            mutable-content:
              type: integer
              description: The notification service app extension flag. If the value is 1, your notification is passed to your notification service app extension before delivery. Use your extension to modify the notification’s content.
            target-content-id:
              type: string
              description: The identifier of the window brought forward.
            interruption-level:
              type: string
              description: Indicates the importance and delivery timing of a notification.
              enum:
                - passive
                - active
                - time-sensitive
                - critical
            relevance-score:
              type: number
              description: A number between 0 and 1. The highest score is considered the "most relevant"  and is featured in the notification summary.
    iosFcmAndApns:
      description: Your payload changes depending whether you send to iOS devices through Google's Firebase Cloud Messaging (FCM) or Apple's Push Notification service (APNs).
      oneOf:
        - title: FCM
          type: object
          required:
            - message
          properties:
            message:
              type: object
              description: The base object for all FCM payloads.
              required:
                - apns
              properties:
                apns:
                  type: object
                  required:
                    - payload
                  description: Defines a payload for iOS devices sent through Firebase Cloud Messaging (FCM).
                  properties:
                    headers:
                      description: Headers defined by [Apple's payload reference](https://developer.apple.com/documentation/usernotifications/setting_up_a_remote_notification_server/sending_notification_requests_to_apns) that you want to pass through FCM.
                      type: object
                    payload:
                      type: object
                      description: Contains a push payload.
                      properties:
                        CIO:
                          type: object
                          description: Contains properties interpreted by the Customer.io iOS SDK.
                          required:
                            - push
                          properties:
                            push:
                              type: object
                              description: A push payload for the iOS SDK.
                              properties:
                                title:
                                  type: string
                                  description: The title of your push notification.
                                body:
                                  type: string
                                  description: The body of your push notification.
                                link:
                                  type: string
                                  description: A deep link (to a page in your app), or a link to a web page.
                                image:
                                  type: string
                                  description: The URL of an HTTPS image that you want to use for your message.
                        aps:
                          type: object
                          description: A push payload intended for an iOS device.
                          properties:
                            alert:
                              oneOf:
                                - title: Simple alert
                                  type: string
                                  description: A simple alert message.
                                - title: Complex alert
                                  type: object
                                  properties:
                                    body:
                                      type: string
                                      description: The body of your push notification.
                                    title:
                                      type: string
                                      description: The title of your push notification.
                                    subtitle:
                                      description: Additional information that explains the purpose of the notification.
                                      type: string
                                    launch-image:
                                      description: The name of the launch image file you want to display. When a user launches your app, they'll see this image or storyboard file rather than your app’s normal launch image.
                                      type: string
                                    title-loc-key:
                                      description: The key for a localized title string in your app’s Localizable.strings files.
                                      type: string
                                    title-loc-args:
                                      type: array
                                      description: An array of replacement value strings for variables in your title string. Each %@ character in the title-loc-key is replaced by a value from this array, in the order they appear in the title string.
                                      items:
                                        type: string
                                    subtitle-loc-key:
                                      description: The key for a localized subtitle string in your app’s Localizable.strings file.
                                      type: string
                                    subtitle-loc-args:
                                      type: array
                                      description: An array of replacement value strings for variables in your subtitle string. Each %@ character in the subtitle-loc-key is replaced by a value from this array, in the order they appear in the subtitle string.
                                      items:
                                        type: string
                                    loc-key:
                                      description: The key for a localized message string in your app’s Localizable.strings file.
                                      type: string
                                    loc-args:
                                      type: array
                                      description: An array of replacement value strings for variables in your message text. Each %@ character in the loc-key is replaced by a value from this array, in the order they appear in the message body.
                                      items:
                                        type: string
                            badge:
                              type: integer
                              description: The number you want to display on your app's icon. Set to 0 to remove the current badge, if any.
                            sound:
                              oneOf:
                                - title: Regular alert
                                  type: string
                                  description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound. For critical alerts, you'll pass an object instead.
                                - title: Critical alert
                                  type: object
                                  properties:
                                    critical:
                                      type: integer
                                      description: 1 indicates critical. 0 is not critical.
                                    name:
                                      type: string
                                      description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound.
                                    volume:
                                      type: number
                                      description: The volume for a critical alert between 0 and 1, where 0 is silent and 1 is full volume.
                            thread-id:
                              type: string
                              description: An identifier to group related notifications.
                            category:
                              type: string
                              description: The notification’s type. This string must correspond to the identifier of one of the `UNNotificationCategory` objects you register at launch time.
                            content-available:
                              type: integer
                              description: The background notification flag. Use `1` without an `alert` to perform a silent update. `0` indicates a normal push notification.
                            mutable-content:
                              type: integer
                              description: The notification service app extension flag. If the value is 1, your notification is passed to your notification service app extension before delivery. Use your extension to modify the notification’s content.
                            target-content-id:
                              type: string
                              description: The identifier of the window brought forward.
                            interruption-level:
                              type: string
                              description: Indicates the importance and delivery timing of a notification.
                              enum:
                                - passive
                                - active
                                - time-sensitive
                                - critical
                            relevance-score:
                              type: number
                              description: A number between 0 and 1. The highest score is considered the "most relevant"  and is featured in the notification summary.
                      additionalProperties:
                        description: Additional properties that you've set up your app to interpret outside of the Customer.io SDK.
                        x-additionalPropertiesName: Custom key-value pairs
        - title: APNS
          type: object
          properties:
            CIO:
              type: object
              required:
                - push
              description: Contains options supported by the Customer.io SDK.
              properties:
                push:
                  type: object
                  description: Describes push notification options supported by the CIO SDK.
                  properties:
                    link:
                      type: string
                      description: A deep link (to a page in your app), or a link to a web page.
                    image:
                      type: string
                      description: The URL of an HTTPS image that you want to use for your message.
            aps:
              type: object
              description: A push payload intended for an iOS device.
              properties:
                alert:
                  oneOf:
                    - title: Simple alert
                      type: string
                      description: A simple alert message.
                    - title: Complex alert
                      type: object
                      properties:
                        body:
                          type: string
                          description: The body of your push notification.
                        title:
                          type: string
                          description: The title of your push notification.
                        subtitle:
                          description: Additional information that explains the purpose of the notification.
                          type: string
                        launch-image:
                          description: The name of the launch image file you want to display. When a user launches your app, they'll see this image or storyboard file rather than your app’s normal launch image.
                          type: string
                        title-loc-key:
                          description: The key for a localized title string in your app’s Localizable.strings files.
                          type: string
                        title-loc-args:
                          type: array
                          description: An array of replacement value strings for variables in your title string. Each %@ character in the title-loc-key is replaced by a value from this array, in the order they appear in the title string.
                          items:
                            type: string
                        subtitle-loc-key:
                          description: The key for a localized subtitle string in your app’s Localizable.strings file.
                          type: string
                        subtitle-loc-args:
                          type: array
                          description: An array of replacement value strings for variables in your subtitle string. Each %@ character in the subtitle-loc-key is replaced by a value from this array, in the order they appear in the subtitle string.
                          items:
                            type: string
                        loc-key:
                          description: The key for a localized message string in your app’s Localizable.strings file.
                          type: string
                        loc-args:
                          type: array
                          description: An array of replacement value strings for variables in your message text. Each %@ character in the loc-key is replaced by a value from this array, in the order they appear in the message body.
                          items:
                            type: string
                badge:
                  type: integer
                  description: The number you want to display on your app's icon. Set to 0 to remove the current badge, if any.
                sound:
                  oneOf:
                    - title: Regular alert
                      type: string
                      description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound. For critical alerts, you'll pass an object instead.
                    - title: Critical alert
                      type: object
                      properties:
                        critical:
                          type: integer
                          description: 1 indicates critical. 0 is not critical.
                        name:
                          type: string
                          description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound.
                        volume:
                          type: number
                          description: The volume for a critical alert between 0 and 1, where 0 is silent and 1 is full volume.
                thread-id:
                  type: string
                  description: An identifier to group related notifications.
                category:
                  type: string
                  description: The notification’s type. This string must correspond to the identifier of one of the `UNNotificationCategory` objects you register at launch time.
                content-available:
                  type: integer
                  description: The background notification flag. Use `1` without an `alert` to perform a silent update. `0` indicates a normal push notification.
                mutable-content:
                  type: integer
                  description: The notification service app extension flag. If the value is 1, your notification is passed to your notification service app extension before delivery. Use your extension to modify the notification’s content.
                target-content-id:
                  type: string
                  description: The identifier of the window brought forward.
                interruption-level:
                  type: string
                  description: Indicates the importance and delivery timing of a notification.
                  enum:
                    - passive
                    - active
                    - time-sensitive
                    - critical
                relevance-score:
                  type: number
                  description: A number between 0 and 1. The highest score is considered the "most relevant"  and is featured in the notification summary.
          additionalProperties:
            description: Additional properties that you've set up your app to interpret outside of the Customer.io SDK.
            x-additionalPropertiesName: Custom key-value pairs
    apnsWithSdk:
      type: object
      properties:
        CIO:
          type: object
          required:
            - push
          description: Contains options supported by the Customer.io SDK.
          properties:
            push:
              type: object
              description: Describes push notification options supported by the CIO SDK.
              properties:
                link:
                  type: string
                  description: A deep link (to a page in your app), or a link to a web page.
                image:
                  type: string
                  description: The URL of an HTTPS image that you want to use for your message.
        aps:
          type: object
          description: A push payload intended for an iOS device.
          properties:
            alert:
              oneOf:
                - title: Simple alert
                  type: string
                  description: A simple alert message.
                - title: Complex alert
                  type: object
                  properties:
                    body:
                      type: string
                      description: The body of your push notification.
                    title:
                      type: string
                      description: The title of your push notification.
                    subtitle:
                      description: Additional information that explains the purpose of the notification.
                      type: string
                    launch-image:
                      description: The name of the launch image file you want to display. When a user launches your app, they'll see this image or storyboard file rather than your app’s normal launch image.
                      type: string
                    title-loc-key:
                      description: The key for a localized title string in your app’s Localizable.strings files.
                      type: string
                    title-loc-args:
                      type: array
                      description: An array of replacement value strings for variables in your title string. Each %@ character in the title-loc-key is replaced by a value from this array, in the order they appear in the title string.
                      items:
                        type: string
                    subtitle-loc-key:
                      description: The key for a localized subtitle string in your app’s Localizable.strings file.
                      type: string
                    subtitle-loc-args:
                      type: array
                      description: An array of replacement value strings for variables in your subtitle string. Each %@ character in the subtitle-loc-key is replaced by a value from this array, in the order they appear in the subtitle string.
                      items:
                        type: string
                    loc-key:
                      description: The key for a localized message string in your app’s Localizable.strings file.
                      type: string
                    loc-args:
                      type: array
                      description: An array of replacement value strings for variables in your message text. Each %@ character in the loc-key is replaced by a value from this array, in the order they appear in the message body.
                      items:
                        type: string
            badge:
              type: integer
              description: The number you want to display on your app's icon. Set to 0 to remove the current badge, if any.
            sound:
              oneOf:
                - title: Regular alert
                  type: string
                  description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound. For critical alerts, you'll pass an object instead.
                - title: Critical alert
                  type: object
                  properties:
                    critical:
                      type: integer
                      description: 1 indicates critical. 0 is not critical.
                    name:
                      type: string
                      description: The name of a sound file in your app’s main bundle or in the Library/Sounds folder of your app’s container directory. Use “default” to play the system sound.
                    volume:
                      type: number
                      description: The volume for a critical alert between 0 and 1, where 0 is silent and 1 is full volume.
            thread-id:
              type: string
              description: An identifier to group related notifications.
            category:
              type: string
              description: The notification’s type. This string must correspond to the identifier of one of the `UNNotificationCategory` objects you register at launch time.
            content-available:
              type: integer
              description: The background notification flag. Use `1` without an `alert` to perform a silent update. `0` indicates a normal push notification.
            mutable-content:
              type: integer
              description: The notification service app extension flag. If the value is 1, your notification is passed to your notification service app extension before delivery. Use your extension to modify the notification’s content.
            target-content-id:
              type: string
              description: The identifier of the window brought forward.
            interruption-level:
              type: string
              description: Indicates the importance and delivery timing of a notification.
              enum:
                - passive
                - active
                - time-sensitive
                - critical
            relevance-score:
              type: number
              description: A number between 0 and 1. The highest score is considered the "most relevant"  and is featured in the notification summary.
      additionalProperties:
        description: Additional properties that you've set up your app to interpret outside of the Customer.io SDK.
        x-additionalPropertiesName: Custom key-value pairs
    reporting_webhook:
      oneOf:
        - title: Customer
          description: Events that occur when a customer subscribes or unsubscribes from your messages.
          type: object
          required:
            - event_id
            - object_type
            - metric
            - timestamp
            - data
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - customer
              description: The event represents a customer subscribing or unsubscribing.
              example: customer
            metric:
              type: string
              enum:
                - subscribed
                - unsubscribed
              description: The metric recorded by the event. For `customer` events, this is whether the customer explicitly subscribed or unsubscribed.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              type: object
              required:
                - identifiers
                - customer_id
                - email_address
              properties:
                customer_id:
                  type: string
                  deprecated: true
                  description: |
                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                  example: '42'
                email_address:
                  type: string
                  description: The email address of the customer.
                  nullable: true
                  example: test@example.com
                identifiers:
                  type: object
                  description: |
                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                      nullable: true
                      example: '42'
                    email:
                      type: string
                      description: The email address of the customer.
                      nullable: true
                      example: test@example.com
                    cio_id:
                      type: string
                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                      example: d9c106000001
        - title: Email
          description: Events representing an email.
          oneOf:
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - drafted
                      description: The metric recorded by the event. For `customer` events, this is whether the customer explicitly subscribed or unsubscribed.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - attempted
                      description: An email could not be sent to the delivery provider and will be retried. The `failure_message` provides the reason for the failure.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - sent
                      description: A message was successfully sent.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - delivered
                      description: A message was successfully delivered to a recipient.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - opened
                      description: The recipient opened a message.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - clicked
                      description: The recipient clicked a tracked link in the email.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                            - href
                            - link_id
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
                            href:
                              type: string
                              description: The URL of the link that a person clicked.
                              example: https://www.customer.io/docs
                            link_id:
                              type: integer
                              description: The identifier for the tracked link that a person clicked or tapped.
                              example: 1
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - converted
                      description: A person matched a conversion goal attributed to an email.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - unsubscribed
                      description: The recipient unsubscribed based on a particular message.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - bounced
                      description: The delivery provider could not deliver an email.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                            - failure_message
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - dropped
                      description: Customer.io did not send an email because it was addressed to a person who was suppressed.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                            - failure_message
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - spammed
                      description: A recipient marked an email as spam.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - email
                      description: The event relates to an email action.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - failed
                      description: An email couldn't be sent to the delivery provider.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - subject
                            - failure_message
                          properties:
                            subject:
                              type: string
                              description: The subject of the email.
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: test@example.com
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
          discriminator:
            propertyName: metric
            mapping:
              drafted: '#/components/schemas/email_drafted'
              attempted: '#/components/schemas/email_attempted'
              sent: '#/components/schemas/email_sent'
              delivered: '#/components/schemas/email_delivered'
              opened: '#/components/schemas/email_opened'
              clicked: '#/components/schemas/email_clicked'
              converted: '#/components/schemas/email_converted'
              unsubscribed: '#/components/schemas/email_unsubscribed'
              bounced: '#/components/schemas/email_bounced'
              dropped: '#/components/schemas/email_dropped'
              spammed: '#/components/schemas/email_spammed'
              failed: '#/components/schemas/email_failed'
        - title: Push
          description: Events representing a push notification.
          oneOf:
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - attempted
                      description: A push notification was drafted.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - attempted
                      description: A push notification was attempted but unsuccessful. This generally means that we'll try again.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - delivered
                      description: A push notification was delivered to a recipient device.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipients
                          properties:
                            recipients:
                              type: array
                              items:
                                type: object
                                required:
                                  - device_id
                                  - device_platform
                                description: Describes the device the push was sent to.
                                properties:
                                  device_id:
                                    type: string
                                    description: The device identifier/token.
                                  device_platform:
                                    type: string
                                    enum:
                                      - android
                                      - ios
                                    description: The device's operating system.
                                    example: ios
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - sent
                      description: A push notification was sent to a recipient.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipients
                          properties:
                            recipients:
                              type: array
                              items:
                                type: object
                                required:
                                  - device_id
                                  - device_platform
                                description: Describes the device the push was sent to.
                                properties:
                                  device_id:
                                    type: string
                                    description: The device identifier/token.
                                  device_platform:
                                    type: string
                                    enum:
                                      - android
                                      - ios
                                    description: The device's operating system.
                                    example: ios
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - opened
                      description: A device opened a push notification.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - clicked
                      description: A recipient tapped a link in a push notification.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipients
                            - href
                            - link_id
                          properties:
                            href:
                              type: string
                              description: The URL of the link that a person clicked.
                              example: https://www.customer.io/docs
                            link_id:
                              type: integer
                              description: The identifier for the tracked link that a person clicked or tapped.
                              example: 1
                            recipients:
                              type: array
                              items:
                                type: object
                                required:
                                  - device_id
                                description: Describes the device of the recipient who tapped the link.
                                properties:
                                  device_id:
                                    type: string
                                    description: The device identifier/token.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - converted
                      description: A person matched a conversion goal attributed to a push notification.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipients
                          properties:
                            recipients:
                              type: array
                              items:
                                type: object
                                required:
                                  - device_id
                                description: Describes the device of the recipient who tapped the link.
                                properties:
                                  device_id:
                                    type: string
                                    description: The device identifier/token.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - bounced
                      description: The delivery provider reported at least one invalid device token.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipients
                          properties:
                            recipients:
                              type: array
                              items:
                                type: object
                                required:
                                  - device_id
                                  - device_platform
                                  - failure_message
                                description: Describes the device of the recipient who tapped the link.
                                properties:
                                  device_id:
                                    type: string
                                    description: The device identifier/token.
                                  device_platform:
                                    type: string
                                    enum:
                                      - android
                                      - ios
                                    description: The device's operating system.
                                    example: ios
                                  failure_message:
                                    type: string
                                    description: The reason the push failed for this particular recipient.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - dropped
                      description: A push notification wasn't sent because at least one device token previously bounced.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipients
                          properties:
                            recipients:
                              type: array
                              items:
                                type: object
                                required:
                                  - device_id
                                  - device_platform
                                  - failure_message
                                description: Describes the device of the recipient who tapped the link.
                                properties:
                                  device_id:
                                    type: string
                                    description: The device identifier/token.
                                  device_platform:
                                    type: string
                                    enum:
                                      - android
                                      - ios
                                    description: The device's operating system.
                                    example: ios
                                  failure_message:
                                    type: string
                                    description: The reason the push failed for this particular recipient.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - push
                      description: The event relates to an push notification.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - failed
                      description: A push notification couldn't be sent to the delivery provider.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
          discriminator:
            propertyName: metric
            mapping:
              drafted: '#/components/schemas/push_drafted'
              attempted: '#/components/schemas/push_attempted'
              delivered: '#/components/schemas/push_delivered'
              sent: '#/components/schemas/push_sent'
              opened: '#/components/schemas/push_opened'
              clicked: '#/components/schemas/push_clicked'
              converted: '#/components/schemas/push_converted'
              bounced: '#/components/schemas/push_bounced'
              dropped: '#/components/schemas/push_dropped'
              failed: '#/components/schemas/push_failed'
        - title: SMS
          description: Events pertaining to SMS notifications.
          oneOf:
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - sms
                      description: The event relates to an SMS message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - drafted
                      description: An SMS notification was drafted.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - sms
                      description: The event relates to an SMS message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - attempted
                      description: An SMS could not be sent to the delivery provider, but will retry.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - sms
                      description: The event relates to an SMS message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - sent
                      description: An SMS notification was sent.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                          properties:
                            recipient:
                              type: string
                              description: The MSISDN (phone number) of the SMS recipient.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - sms
                      description: The event relates to an SMS message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - delivered
                      description: An SMS notification was delivered to a recipient.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                          properties:
                            recipient:
                              type: string
                              description: The MSISDN (phone number) of the SMS recipient.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - sms
                      description: The event relates to an SMS message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - clicked
                      description: A recipient tapped a link in an SMS message they received.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - link_id
                            - href
                          properties:
                            recipient:
                              type: string
                              description: The MSISDN (phone number) of the SMS recipient.
                            link_id:
                              type: integer
                              description: The identifier for the tracked link that a person clicked or tapped.
                              example: 1
                            href:
                              type: string
                              description: The URL of the link that a person clicked.
                              example: https://www.customer.io/docs
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - sms
                      description: The event relates to an SMS message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - converted
                      description: A person matched a conversion goal attributed to an SMS.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                          properties:
                            recipient:
                              type: string
                              description: The MSISDN (phone number) of the SMS recipient.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - sms
                      description: The event relates to an SMS message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - bounced
                      description: The delivery provider was unable to deliver an SMS message.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
                            recipient:
                              type: string
                              description: The MSISDN (phone number) of the SMS recipient.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - sms
                      description: The event relates to an SMS message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - failed
                      description: An SMS couldn't be sent to the delivery provider.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
          discriminator:
            propertyName: metric
            mapping:
              drafted: '#/components/schemas/sms_drafted'
              attempted: '#/components/schemas/sms_attempted'
              sent: '#/components/schemas/sms_sent'
              delivered: '#/components/schemas/sms_delivered'
              clicked: '#/components/schemas/sms_clicked'
              converted: '#/components/schemas/sms_converted'
              bounced: '#/components/schemas/sms_bounced'
              failed: '#/components/schemas/sms_failed'
        - title: Slack
          description: Events pertaining to Slack messages.
          oneOf:
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - slack
                      description: The event relates to a Slack message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - drafted
                      description: A slack message was drafted.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - slack
                      description: The event relates to a Slack message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - attempted
                      description: A slack message failed and will be retried.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - slack
                      description: The event relates to a Slack message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - sent
                      description: A slack message was sent.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                          properties:
                            recipient:
                              type: string
                              description: The channel or person that received the message, i.e. `#general`.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - slack
                      description: The event relates to a Slack message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - clicked
                      description: A person clicked a tracked link in a Slack message.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - href
                            - link_id
                          properties:
                            recipient:
                              type: string
                              description: The channel or person that received the message, i.e. `#general`.
                            href:
                              type: string
                              description: The URL of the link that a person clicked.
                              example: https://www.customer.io/docs
                            link_id:
                              type: integer
                              description: The identifier for the tracked link that a person clicked or tapped.
                              example: 1
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - slack
                      description: The event relates to a Slack message.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - failed
                      description: A slack message failed.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
          discriminator:
            propertyName: metric
            mapping:
              drafted: '#/components/schemas/slack_drafted'
              attempted: '#/components/schemas/slack_attempted'
              sent: '#/components/schemas/slack_sent'
              clicked: '#/components/schemas/slack_clicked'
              failed: '#/components/schemas/slack_failed'
        - title: Webhook
          description: Events pertaining to webhooks.
          oneOf:
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - webhook
                      description: The event relates to a webhook.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - drafted
                      description: A webhook draft was created.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - webhook
                      description: The event relates to a webhook.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - attempted
                      description: A webhook failed to send, but will be retried.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - webhook
                      description: The event relates to a webhook.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - sent
                      description: A webhook was sent from Customer.io.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                          properties:
                            recipient:
                              type: string
                              description: The URL the webhook was sent to.
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - webhook
                      description: The event relates to a webhook.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - clicked
                      description: The webhook recipient opened a tracked link in the webhook payload.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - recipient
                            - link_id
                            - href
                          properties:
                            recipient:
                              type: string
                              description: The URL the webhook was sent to.
                            href:
                              type: string
                              description: The URL of the link that a person clicked.
                              example: https://www.customer.io/docs
                            link_id:
                              type: integer
                              description: The identifier for the tracked link that a person clicked or tapped.
                              example: 1
            - allOf:
                - type: object
                  required:
                    - event_id
                    - object_type
                    - timestamp
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - webhook
                      description: The event relates to a webhook.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                - type: object
                  required:
                    - metric
                    - data
                  properties:
                    metric:
                      type: string
                      enum:
                        - failed
                      description: A webhook failed to send.
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      allOf:
                        - description: Contains information about the event, specific to the `object_type` and `metric`.
                          oneOf:
                            - title: API triggered broadcast
                              required:
                                - trigger_id
                                - broadcast_id
                                - delivery_id
                                - action_id
                                - identifiers
                              type: object
                              properties:
                                trigger_id:
                                  type: integer
                                  description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                  example: 1
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                broadcast_id:
                                  type: integer
                                  description: The identifier for a broadcast.
                                  example: 2
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                parent_action_id:
                                  type: integer
                                  description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                  example: 1
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                                content:
                                  type: string
                                  description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                            - title: Campaign
                              type: object
                              required:
                                - campaign_id
                                - delivery_id
                                - action_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                action_id:
                                  description: The identifier for an action.
                                  type: integer
                                  readOnly: true
                                  example: 96
                                  nullable: true
                                campaign_id:
                                  description: The identifier for a campaign.
                                  type: integer
                                  readOnly: true
                                  example: 5
                                  nullable: true
                                journey_id:
                                  type: integer
                                  description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                  example: 5
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                            - title: newsletter
                              type: object
                              required:
                                - newsletter_id
                                - delivery_id
                                - identifiers
                              properties:
                                customer_id:
                                  type: string
                                  deprecated: true
                                  description: |
                                    The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                    While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                  example: '42'
                                delivery_id:
                                  type: string
                                  description: The instance of a message sent to a person.
                                  example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                newsletter_id:
                                  description: The identifier for a newsletter.
                                  type: integer
                                  example: 1
                                content_id:
                                  description: The identifier for a newsletter variant.
                                  type: integer
                                  example: 3
                                identifiers:
                                  type: object
                                  description: |
                                    The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                    Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                  required:
                                    - id
                                  properties:
                                    id:
                                      type: string
                                      description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                      nullable: true
                                      example: '42'
                                    email:
                                      type: string
                                      description: The email address of the customer.
                                      nullable: true
                                      example: test@example.com
                                    cio_id:
                                      type: string
                                      description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                      example: d9c106000001
                        - type: object
                          required:
                            - failure_message
                          properties:
                            failure_message:
                              type: string
                              description: Indicates the reason that an attempted message failed.
                              example: Something went wrong!
          discriminator:
            propertyName: metric
            mapping:
              drafted: '#/components/schemas/webhook_drafted'
              attempted: '#/components/schemas/webhook_attempted'
              sent: '#/components/schemas/webhook_sent'
              clicked: '#/components/schemas/webhook_clicked'
              failed: '#/components/schemas/webhook_failed'
    customer_event:
      title: Customer
      description: Events that occur when a customer subscribes or unsubscribes from your messages.
      type: object
      required:
        - event_id
        - object_type
        - metric
        - timestamp
        - data
      properties:
        event_id:
          type: string
          description: The unique identifier for the event.
          example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
        object_type:
          type: string
          enum:
            - customer
          description: The event represents a customer subscribing or unsubscribing.
          example: customer
        metric:
          type: string
          enum:
            - subscribed
            - unsubscribed
          description: The metric recorded by the event. For `customer` events, this is whether the customer explicitly subscribed or unsubscribed.
        timestamp:
          type: integer
          format: unix timestamp
          description: The unix timestamp when the event occurred.
          example: 1613063089
        data:
          description: Contains information about the event, specific to the `object_type` and `metric`.
          type: object
          required:
            - identifiers
            - customer_id
            - email_address
          properties:
            customer_id:
              type: string
              deprecated: true
              description: |
                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
              example: '42'
            email_address:
              type: string
              description: The email address of the customer.
              nullable: true
              example: test@example.com
            identifiers:
              type: object
              description: |
                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
              required:
                - id
              properties:
                id:
                  type: string
                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                  nullable: true
                  example: '42'
                email:
                  type: string
                  description: The email address of the customer.
                  nullable: true
                  example: test@example.com
                cio_id:
                  type: string
                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                  example: d9c106000001
    email_event:
      title: Email
      description: Events representing an email.
      oneOf:
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - drafted
                  description: The metric recorded by the event. For `customer` events, this is whether the customer explicitly subscribed or unsubscribed.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - attempted
                  description: An email could not be sent to the delivery provider and will be retried. The `failure_message` provides the reason for the failure.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - sent
                  description: A message was successfully sent.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - delivered
                  description: A message was successfully delivered to a recipient.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - opened
                  description: The recipient opened a message.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - clicked
                  description: The recipient clicked a tracked link in the email.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                        - href
                        - link_id
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
                        href:
                          type: string
                          description: The URL of the link that a person clicked.
                          example: https://www.customer.io/docs
                        link_id:
                          type: integer
                          description: The identifier for the tracked link that a person clicked or tapped.
                          example: 1
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - converted
                  description: A person matched a conversion goal attributed to an email.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - unsubscribed
                  description: The recipient unsubscribed based on a particular message.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - bounced
                  description: The delivery provider could not deliver an email.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                        - failure_message
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - dropped
                  description: Customer.io did not send an email because it was addressed to a person who was suppressed.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                        - failure_message
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - spammed
                  description: A recipient marked an email as spam.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - email
                  description: The event relates to an email action.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - failed
                  description: An email couldn't be sent to the delivery provider.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - subject
                        - failure_message
                      properties:
                        subject:
                          type: string
                          description: The subject of the email.
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: test@example.com
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
      discriminator:
        propertyName: metric
        mapping:
          drafted: '#/components/schemas/email_drafted'
          attempted: '#/components/schemas/email_attempted'
          sent: '#/components/schemas/email_sent'
          delivered: '#/components/schemas/email_delivered'
          opened: '#/components/schemas/email_opened'
          clicked: '#/components/schemas/email_clicked'
          converted: '#/components/schemas/email_converted'
          unsubscribed: '#/components/schemas/email_unsubscribed'
          bounced: '#/components/schemas/email_bounced'
          dropped: '#/components/schemas/email_dropped'
          spammed: '#/components/schemas/email_spammed'
          failed: '#/components/schemas/email_failed'
    email_event_common:
      type: object
      required:
        - event_id
        - object_type
        - timestamp
      properties:
        event_id:
          type: string
          description: The unique identifier for the event.
          example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
        object_type:
          type: string
          enum:
            - email
          description: The event relates to an email action.
        timestamp:
          type: integer
          format: unix timestamp
          description: The unix timestamp when the event occurred.
          example: 1613063089
    email_drafted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - drafted
              description: The metric recorded by the event. For `customer` events, this is whether the customer explicitly subscribed or unsubscribed.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
    email_attempted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - attempted
              description: An email could not be sent to the delivery provider and will be retried. The `failure_message` provides the reason for the failure.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    email_sent:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - sent
              description: A message was successfully sent.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
    email_delivered:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - delivered
              description: A message was successfully delivered to a recipient.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
    email_opened:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - opened
              description: The recipient opened a message.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
    email_clicked:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - clicked
              description: The recipient clicked a tracked link in the email.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                    - href
                    - link_id
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
                    href:
                      type: string
                      description: The URL of the link that a person clicked.
                      example: https://www.customer.io/docs
                    link_id:
                      type: integer
                      description: The identifier for the tracked link that a person clicked or tapped.
                      example: 1
    email_converted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - converted
              description: A person matched a conversion goal attributed to an email.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
    email_unsubscribed:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - unsubscribed
              description: The recipient unsubscribed based on a particular message.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
    email_bounced:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - bounced
              description: The delivery provider could not deliver an email.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                    - failure_message
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    email_dropped:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - dropped
              description: Customer.io did not send an email because it was addressed to a person who was suppressed.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                    - failure_message
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    email_spammed:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - spammed
              description: A recipient marked an email as spam.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
    email_failed:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - email
              description: The event relates to an email action.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - failed
              description: An email couldn't be sent to the delivery provider.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - subject
                    - failure_message
                  properties:
                    subject:
                      type: string
                      description: The subject of the email.
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: test@example.com
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    push_event:
      title: Push
      description: Events representing a push notification.
      oneOf:
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - attempted
                  description: A push notification was drafted.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - attempted
                  description: A push notification was attempted but unsuccessful. This generally means that we'll try again.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - delivered
                  description: A push notification was delivered to a recipient device.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipients
                      properties:
                        recipients:
                          type: array
                          items:
                            type: object
                            required:
                              - device_id
                              - device_platform
                            description: Describes the device the push was sent to.
                            properties:
                              device_id:
                                type: string
                                description: The device identifier/token.
                              device_platform:
                                type: string
                                enum:
                                  - android
                                  - ios
                                description: The device's operating system.
                                example: ios
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - sent
                  description: A push notification was sent to a recipient.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipients
                      properties:
                        recipients:
                          type: array
                          items:
                            type: object
                            required:
                              - device_id
                              - device_platform
                            description: Describes the device the push was sent to.
                            properties:
                              device_id:
                                type: string
                                description: The device identifier/token.
                              device_platform:
                                type: string
                                enum:
                                  - android
                                  - ios
                                description: The device's operating system.
                                example: ios
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - opened
                  description: A device opened a push notification.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - clicked
                  description: A recipient tapped a link in a push notification.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipients
                        - href
                        - link_id
                      properties:
                        href:
                          type: string
                          description: The URL of the link that a person clicked.
                          example: https://www.customer.io/docs
                        link_id:
                          type: integer
                          description: The identifier for the tracked link that a person clicked or tapped.
                          example: 1
                        recipients:
                          type: array
                          items:
                            type: object
                            required:
                              - device_id
                            description: Describes the device of the recipient who tapped the link.
                            properties:
                              device_id:
                                type: string
                                description: The device identifier/token.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - converted
                  description: A person matched a conversion goal attributed to a push notification.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipients
                      properties:
                        recipients:
                          type: array
                          items:
                            type: object
                            required:
                              - device_id
                            description: Describes the device of the recipient who tapped the link.
                            properties:
                              device_id:
                                type: string
                                description: The device identifier/token.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - bounced
                  description: The delivery provider reported at least one invalid device token.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipients
                      properties:
                        recipients:
                          type: array
                          items:
                            type: object
                            required:
                              - device_id
                              - device_platform
                              - failure_message
                            description: Describes the device of the recipient who tapped the link.
                            properties:
                              device_id:
                                type: string
                                description: The device identifier/token.
                              device_platform:
                                type: string
                                enum:
                                  - android
                                  - ios
                                description: The device's operating system.
                                example: ios
                              failure_message:
                                type: string
                                description: The reason the push failed for this particular recipient.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - dropped
                  description: A push notification wasn't sent because at least one device token previously bounced.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipients
                      properties:
                        recipients:
                          type: array
                          items:
                            type: object
                            required:
                              - device_id
                              - device_platform
                              - failure_message
                            description: Describes the device of the recipient who tapped the link.
                            properties:
                              device_id:
                                type: string
                                description: The device identifier/token.
                              device_platform:
                                type: string
                                enum:
                                  - android
                                  - ios
                                description: The device's operating system.
                                example: ios
                              failure_message:
                                type: string
                                description: The reason the push failed for this particular recipient.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - push
                  description: The event relates to an push notification.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - failed
                  description: A push notification couldn't be sent to the delivery provider.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
      discriminator:
        propertyName: metric
        mapping:
          drafted: '#/components/schemas/push_drafted'
          attempted: '#/components/schemas/push_attempted'
          delivered: '#/components/schemas/push_delivered'
          sent: '#/components/schemas/push_sent'
          opened: '#/components/schemas/push_opened'
          clicked: '#/components/schemas/push_clicked'
          converted: '#/components/schemas/push_converted'
          bounced: '#/components/schemas/push_bounced'
          dropped: '#/components/schemas/push_dropped'
          failed: '#/components/schemas/push_failed'
    push_event_common:
      type: object
      required:
        - event_id
        - object_type
        - timestamp
      properties:
        event_id:
          type: string
          description: The unique identifier for the event.
          example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
        object_type:
          type: string
          enum:
            - push
          description: The event relates to an push notification.
        timestamp:
          type: integer
          format: unix timestamp
          description: The unix timestamp when the event occurred.
          example: 1613063089
    push_drafted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - attempted
              description: A push notification was drafted.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              oneOf:
                - title: API triggered broadcast
                  required:
                    - trigger_id
                    - broadcast_id
                    - delivery_id
                    - action_id
                    - identifiers
                  type: object
                  properties:
                    trigger_id:
                      type: integer
                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                      example: 1
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    broadcast_id:
                      type: integer
                      description: The identifier for a broadcast.
                      example: 2
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    parent_action_id:
                      type: integer
                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                      example: 1
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                    content:
                      type: string
                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                - title: Campaign
                  type: object
                  required:
                    - campaign_id
                    - delivery_id
                    - action_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    campaign_id:
                      description: The identifier for a campaign.
                      type: integer
                      readOnly: true
                      example: 5
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                - title: newsletter
                  type: object
                  required:
                    - newsletter_id
                    - delivery_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    newsletter_id:
                      description: The identifier for a newsletter.
                      type: integer
                      example: 1
                    content_id:
                      description: The identifier for a newsletter variant.
                      type: integer
                      example: 3
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
    push_attempted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - attempted
              description: A push notification was attempted but unsuccessful. This generally means that we'll try again.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    push_sent:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - sent
              description: A push notification was sent to a recipient.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipients
                  properties:
                    recipients:
                      type: array
                      items:
                        type: object
                        required:
                          - device_id
                          - device_platform
                        description: Describes the device the push was sent to.
                        properties:
                          device_id:
                            type: string
                            description: The device identifier/token.
                          device_platform:
                            type: string
                            enum:
                              - android
                              - ios
                            description: The device's operating system.
                            example: ios
    push_delivered:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - delivered
              description: A push notification was delivered to a recipient device.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipients
                  properties:
                    recipients:
                      type: array
                      items:
                        type: object
                        required:
                          - device_id
                          - device_platform
                        description: Describes the device the push was sent to.
                        properties:
                          device_id:
                            type: string
                            description: The device identifier/token.
                          device_platform:
                            type: string
                            enum:
                              - android
                              - ios
                            description: The device's operating system.
                            example: ios
    push_opened:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - opened
              description: A device opened a push notification.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              oneOf:
                - title: API triggered broadcast
                  required:
                    - trigger_id
                    - broadcast_id
                    - delivery_id
                    - action_id
                    - identifiers
                  type: object
                  properties:
                    trigger_id:
                      type: integer
                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                      example: 1
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    broadcast_id:
                      type: integer
                      description: The identifier for a broadcast.
                      example: 2
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    parent_action_id:
                      type: integer
                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                      example: 1
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                    content:
                      type: string
                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                - title: Campaign
                  type: object
                  required:
                    - campaign_id
                    - delivery_id
                    - action_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    campaign_id:
                      description: The identifier for a campaign.
                      type: integer
                      readOnly: true
                      example: 5
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                - title: newsletter
                  type: object
                  required:
                    - newsletter_id
                    - delivery_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    newsletter_id:
                      description: The identifier for a newsletter.
                      type: integer
                      example: 1
                    content_id:
                      description: The identifier for a newsletter variant.
                      type: integer
                      example: 3
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
    push_clicked:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - clicked
              description: A recipient tapped a link in a push notification.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipients
                    - href
                    - link_id
                  properties:
                    href:
                      type: string
                      description: The URL of the link that a person clicked.
                      example: https://www.customer.io/docs
                    link_id:
                      type: integer
                      description: The identifier for the tracked link that a person clicked or tapped.
                      example: 1
                    recipients:
                      type: array
                      items:
                        type: object
                        required:
                          - device_id
                        description: Describes the device of the recipient who tapped the link.
                        properties:
                          device_id:
                            type: string
                            description: The device identifier/token.
    push_converted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - converted
              description: A person matched a conversion goal attributed to a push notification.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipients
                  properties:
                    recipients:
                      type: array
                      items:
                        type: object
                        required:
                          - device_id
                        description: Describes the device of the recipient who tapped the link.
                        properties:
                          device_id:
                            type: string
                            description: The device identifier/token.
    push_bounced:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - bounced
              description: The delivery provider reported at least one invalid device token.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipients
                  properties:
                    recipients:
                      type: array
                      items:
                        type: object
                        required:
                          - device_id
                          - device_platform
                          - failure_message
                        description: Describes the device of the recipient who tapped the link.
                        properties:
                          device_id:
                            type: string
                            description: The device identifier/token.
                          device_platform:
                            type: string
                            enum:
                              - android
                              - ios
                            description: The device's operating system.
                            example: ios
                          failure_message:
                            type: string
                            description: The reason the push failed for this particular recipient.
    push_dropped:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - dropped
              description: A push notification wasn't sent because at least one device token previously bounced.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipients
                  properties:
                    recipients:
                      type: array
                      items:
                        type: object
                        required:
                          - device_id
                          - device_platform
                          - failure_message
                        description: Describes the device of the recipient who tapped the link.
                        properties:
                          device_id:
                            type: string
                            description: The device identifier/token.
                          device_platform:
                            type: string
                            enum:
                              - android
                              - ios
                            description: The device's operating system.
                            example: ios
                          failure_message:
                            type: string
                            description: The reason the push failed for this particular recipient.
    push_failed:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - push
              description: The event relates to an push notification.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - failed
              description: A push notification couldn't be sent to the delivery provider.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    sms_event:
      title: SMS
      description: Events pertaining to SMS notifications.
      oneOf:
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - sms
                  description: The event relates to an SMS message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - drafted
                  description: An SMS notification was drafted.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - sms
                  description: The event relates to an SMS message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - attempted
                  description: An SMS could not be sent to the delivery provider, but will retry.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - sms
                  description: The event relates to an SMS message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - sent
                  description: An SMS notification was sent.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                      properties:
                        recipient:
                          type: string
                          description: The MSISDN (phone number) of the SMS recipient.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - sms
                  description: The event relates to an SMS message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - delivered
                  description: An SMS notification was delivered to a recipient.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                      properties:
                        recipient:
                          type: string
                          description: The MSISDN (phone number) of the SMS recipient.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - sms
                  description: The event relates to an SMS message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - clicked
                  description: A recipient tapped a link in an SMS message they received.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - link_id
                        - href
                      properties:
                        recipient:
                          type: string
                          description: The MSISDN (phone number) of the SMS recipient.
                        link_id:
                          type: integer
                          description: The identifier for the tracked link that a person clicked or tapped.
                          example: 1
                        href:
                          type: string
                          description: The URL of the link that a person clicked.
                          example: https://www.customer.io/docs
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - sms
                  description: The event relates to an SMS message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - converted
                  description: A person matched a conversion goal attributed to an SMS.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                      properties:
                        recipient:
                          type: string
                          description: The MSISDN (phone number) of the SMS recipient.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - sms
                  description: The event relates to an SMS message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - bounced
                  description: The delivery provider was unable to deliver an SMS message.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
                        recipient:
                          type: string
                          description: The MSISDN (phone number) of the SMS recipient.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - sms
                  description: The event relates to an SMS message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - failed
                  description: An SMS couldn't be sent to the delivery provider.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
      discriminator:
        propertyName: metric
        mapping:
          drafted: '#/components/schemas/sms_drafted'
          attempted: '#/components/schemas/sms_attempted'
          sent: '#/components/schemas/sms_sent'
          delivered: '#/components/schemas/sms_delivered'
          clicked: '#/components/schemas/sms_clicked'
          converted: '#/components/schemas/sms_converted'
          bounced: '#/components/schemas/sms_bounced'
          failed: '#/components/schemas/sms_failed'
    sms_event_common:
      type: object
      required:
        - event_id
        - object_type
        - timestamp
      properties:
        event_id:
          type: string
          description: The unique identifier for the event.
          example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
        object_type:
          type: string
          enum:
            - sms
          description: The event relates to an SMS message.
        timestamp:
          type: integer
          format: unix timestamp
          description: The unix timestamp when the event occurred.
          example: 1613063089
    sms_drafted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - sms
              description: The event relates to an SMS message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - drafted
              description: An SMS notification was drafted.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              oneOf:
                - title: API triggered broadcast
                  required:
                    - trigger_id
                    - broadcast_id
                    - delivery_id
                    - action_id
                    - identifiers
                  type: object
                  properties:
                    trigger_id:
                      type: integer
                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                      example: 1
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    broadcast_id:
                      type: integer
                      description: The identifier for a broadcast.
                      example: 2
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    parent_action_id:
                      type: integer
                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                      example: 1
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                    content:
                      type: string
                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                - title: Campaign
                  type: object
                  required:
                    - campaign_id
                    - delivery_id
                    - action_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    campaign_id:
                      description: The identifier for a campaign.
                      type: integer
                      readOnly: true
                      example: 5
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                - title: newsletter
                  type: object
                  required:
                    - newsletter_id
                    - delivery_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    newsletter_id:
                      description: The identifier for a newsletter.
                      type: integer
                      example: 1
                    content_id:
                      description: The identifier for a newsletter variant.
                      type: integer
                      example: 3
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
    sms_attempted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - sms
              description: The event relates to an SMS message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - attempted
              description: An SMS could not be sent to the delivery provider, but will retry.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    sms_sent:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - sms
              description: The event relates to an SMS message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - sent
              description: An SMS notification was sent.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                  properties:
                    recipient:
                      type: string
                      description: The MSISDN (phone number) of the SMS recipient.
    sms_delivered:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - sms
              description: The event relates to an SMS message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - delivered
              description: An SMS notification was delivered to a recipient.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                  properties:
                    recipient:
                      type: string
                      description: The MSISDN (phone number) of the SMS recipient.
    sms_clicked:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - sms
              description: The event relates to an SMS message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - clicked
              description: A recipient tapped a link in an SMS message they received.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - link_id
                    - href
                  properties:
                    recipient:
                      type: string
                      description: The MSISDN (phone number) of the SMS recipient.
                    link_id:
                      type: integer
                      description: The identifier for the tracked link that a person clicked or tapped.
                      example: 1
                    href:
                      type: string
                      description: The URL of the link that a person clicked.
                      example: https://www.customer.io/docs
    sms_converted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - sms
              description: The event relates to an SMS message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - converted
              description: A person matched a conversion goal attributed to an SMS.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                  properties:
                    recipient:
                      type: string
                      description: The MSISDN (phone number) of the SMS recipient.
    sms_bounced:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - sms
              description: The event relates to an SMS message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - bounced
              description: The delivery provider was unable to deliver an SMS message.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
                    recipient:
                      type: string
                      description: The MSISDN (phone number) of the SMS recipient.
    sms_failed:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - sms
              description: The event relates to an SMS message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - failed
              description: An SMS couldn't be sent to the delivery provider.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    slack_event:
      title: Slack
      description: Events pertaining to Slack messages.
      oneOf:
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - slack
                  description: The event relates to a Slack message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - drafted
                  description: A slack message was drafted.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - slack
                  description: The event relates to a Slack message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - attempted
                  description: A slack message failed and will be retried.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - slack
                  description: The event relates to a Slack message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - sent
                  description: A slack message was sent.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                      properties:
                        recipient:
                          type: string
                          description: The channel or person that received the message, i.e. `#general`.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - slack
                  description: The event relates to a Slack message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - clicked
                  description: A person clicked a tracked link in a Slack message.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - href
                        - link_id
                      properties:
                        recipient:
                          type: string
                          description: The channel or person that received the message, i.e. `#general`.
                        href:
                          type: string
                          description: The URL of the link that a person clicked.
                          example: https://www.customer.io/docs
                        link_id:
                          type: integer
                          description: The identifier for the tracked link that a person clicked or tapped.
                          example: 1
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - slack
                  description: The event relates to a Slack message.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - failed
                  description: A slack message failed.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
      discriminator:
        propertyName: metric
        mapping:
          drafted: '#/components/schemas/slack_drafted'
          attempted: '#/components/schemas/slack_attempted'
          sent: '#/components/schemas/slack_sent'
          clicked: '#/components/schemas/slack_clicked'
          failed: '#/components/schemas/slack_failed'
    slack_event_common:
      type: object
      required:
        - event_id
        - object_type
        - timestamp
      properties:
        event_id:
          type: string
          description: The unique identifier for the event.
          example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
        object_type:
          type: string
          enum:
            - slack
          description: The event relates to a Slack message.
        timestamp:
          type: integer
          format: unix timestamp
          description: The unix timestamp when the event occurred.
          example: 1613063089
    slack_drafted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - slack
              description: The event relates to a Slack message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - drafted
              description: A slack message was drafted.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              oneOf:
                - title: API triggered broadcast
                  required:
                    - trigger_id
                    - broadcast_id
                    - delivery_id
                    - action_id
                    - identifiers
                  type: object
                  properties:
                    trigger_id:
                      type: integer
                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                      example: 1
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    broadcast_id:
                      type: integer
                      description: The identifier for a broadcast.
                      example: 2
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    parent_action_id:
                      type: integer
                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                      example: 1
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                    content:
                      type: string
                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                - title: Campaign
                  type: object
                  required:
                    - campaign_id
                    - delivery_id
                    - action_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    campaign_id:
                      description: The identifier for a campaign.
                      type: integer
                      readOnly: true
                      example: 5
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                - title: newsletter
                  type: object
                  required:
                    - newsletter_id
                    - delivery_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    newsletter_id:
                      description: The identifier for a newsletter.
                      type: integer
                      example: 1
                    content_id:
                      description: The identifier for a newsletter variant.
                      type: integer
                      example: 3
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
    slack_attempted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - slack
              description: The event relates to a Slack message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - attempted
              description: A slack message failed and will be retried.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    slack_sent:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - slack
              description: The event relates to a Slack message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - sent
              description: A slack message was sent.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                  properties:
                    recipient:
                      type: string
                      description: The channel or person that received the message, i.e. `#general`.
    slack_clicked:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - slack
              description: The event relates to a Slack message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - clicked
              description: A person clicked a tracked link in a Slack message.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - href
                    - link_id
                  properties:
                    recipient:
                      type: string
                      description: The channel or person that received the message, i.e. `#general`.
                    href:
                      type: string
                      description: The URL of the link that a person clicked.
                      example: https://www.customer.io/docs
                    link_id:
                      type: integer
                      description: The identifier for the tracked link that a person clicked or tapped.
                      example: 1
    slack_failed:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - slack
              description: The event relates to a Slack message.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - failed
              description: A slack message failed.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    webhook_event:
      title: Webhook
      description: Events pertaining to webhooks.
      oneOf:
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - webhook
                  description: The event relates to a webhook.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - drafted
                  description: A webhook draft was created.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - webhook
                  description: The event relates to a webhook.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - attempted
                  description: A webhook failed to send, but will be retried.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - webhook
                  description: The event relates to a webhook.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - sent
                  description: A webhook was sent from Customer.io.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                      properties:
                        recipient:
                          type: string
                          description: The URL the webhook was sent to.
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - webhook
                  description: The event relates to a webhook.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - clicked
                  description: The webhook recipient opened a tracked link in the webhook payload.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - recipient
                        - link_id
                        - href
                      properties:
                        recipient:
                          type: string
                          description: The URL the webhook was sent to.
                        href:
                          type: string
                          description: The URL of the link that a person clicked.
                          example: https://www.customer.io/docs
                        link_id:
                          type: integer
                          description: The identifier for the tracked link that a person clicked or tapped.
                          example: 1
        - allOf:
            - type: object
              required:
                - event_id
                - object_type
                - timestamp
              properties:
                event_id:
                  type: string
                  description: The unique identifier for the event.
                  example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                object_type:
                  type: string
                  enum:
                    - webhook
                  description: The event relates to a webhook.
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
            - type: object
              required:
                - metric
                - data
              properties:
                metric:
                  type: string
                  enum:
                    - failed
                  description: A webhook failed to send.
                data:
                  description: Contains information about the event, specific to the `object_type` and `metric`.
                  allOf:
                    - description: Contains information about the event, specific to the `object_type` and `metric`.
                      oneOf:
                        - title: API triggered broadcast
                          required:
                            - trigger_id
                            - broadcast_id
                            - delivery_id
                            - action_id
                            - identifiers
                          type: object
                          properties:
                            trigger_id:
                              type: integer
                              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                              example: 1
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            broadcast_id:
                              type: integer
                              description: The identifier for a broadcast.
                              example: 2
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                            content:
                              type: string
                              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                        - title: Campaign
                          type: object
                          required:
                            - campaign_id
                            - delivery_id
                            - action_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            action_id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            journey_id:
                              type: integer
                              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                              example: 5
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                        - title: newsletter
                          type: object
                          required:
                            - newsletter_id
                            - delivery_id
                            - identifiers
                          properties:
                            customer_id:
                              type: string
                              deprecated: true
                              description: |
                                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                              example: '42'
                            delivery_id:
                              type: string
                              description: The instance of a message sent to a person.
                              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                            newsletter_id:
                              description: The identifier for a newsletter.
                              type: integer
                              example: 1
                            content_id:
                              description: The identifier for a newsletter variant.
                              type: integer
                              example: 3
                            identifiers:
                              type: object
                              description: |
                                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                  example: d9c106000001
                    - type: object
                      required:
                        - failure_message
                      properties:
                        failure_message:
                          type: string
                          description: Indicates the reason that an attempted message failed.
                          example: Something went wrong!
      discriminator:
        propertyName: metric
        mapping:
          drafted: '#/components/schemas/webhook_drafted'
          attempted: '#/components/schemas/webhook_attempted'
          sent: '#/components/schemas/webhook_sent'
          clicked: '#/components/schemas/webhook_clicked'
          failed: '#/components/schemas/webhook_failed'
    webhook_event_common:
      type: object
      required:
        - event_id
        - object_type
        - timestamp
      properties:
        event_id:
          type: string
          description: The unique identifier for the event.
          example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
        object_type:
          type: string
          enum:
            - webhook
          description: The event relates to a webhook.
        timestamp:
          type: integer
          format: unix timestamp
          description: The unix timestamp when the event occurred.
          example: 1613063089
    webhook_drafted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - webhook
              description: The event relates to a webhook.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - drafted
              description: A webhook draft was created.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              oneOf:
                - title: API triggered broadcast
                  required:
                    - trigger_id
                    - broadcast_id
                    - delivery_id
                    - action_id
                    - identifiers
                  type: object
                  properties:
                    trigger_id:
                      type: integer
                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                      example: 1
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    broadcast_id:
                      type: integer
                      description: The identifier for a broadcast.
                      example: 2
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    parent_action_id:
                      type: integer
                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                      example: 1
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                    content:
                      type: string
                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                - title: Campaign
                  type: object
                  required:
                    - campaign_id
                    - delivery_id
                    - action_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    action_id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    campaign_id:
                      description: The identifier for a campaign.
                      type: integer
                      readOnly: true
                      example: 5
                      nullable: true
                    journey_id:
                      type: integer
                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                      example: 5
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
                - title: newsletter
                  type: object
                  required:
                    - newsletter_id
                    - delivery_id
                    - identifiers
                  properties:
                    customer_id:
                      type: string
                      deprecated: true
                      description: |
                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                      example: '42'
                    delivery_id:
                      type: string
                      description: The instance of a message sent to a person.
                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                    newsletter_id:
                      description: The identifier for a newsletter.
                      type: integer
                      example: 1
                    content_id:
                      description: The identifier for a newsletter variant.
                      type: integer
                      example: 3
                    identifiers:
                      type: object
                      description: |
                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                      required:
                        - id
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        cio_id:
                          type: string
                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                          example: d9c106000001
    webhook_attempted:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - webhook
              description: The event relates to a webhook.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - attempted
              description: A webhook failed to send, but will be retried.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    webhook_sent:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - webhook
              description: The event relates to a webhook.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - sent
              description: A webhook was sent from Customer.io.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                  properties:
                    recipient:
                      type: string
                      description: The URL the webhook was sent to.
    webhook_clicked:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - webhook
              description: The event relates to a webhook.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - clicked
              description: The webhook recipient opened a tracked link in the webhook payload.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - recipient
                    - link_id
                    - href
                  properties:
                    recipient:
                      type: string
                      description: The URL the webhook was sent to.
                    href:
                      type: string
                      description: The URL of the link that a person clicked.
                      example: https://www.customer.io/docs
                    link_id:
                      type: integer
                      description: The identifier for the tracked link that a person clicked or tapped.
                      example: 1
    webhook_failed:
      allOf:
        - type: object
          required:
            - event_id
            - object_type
            - timestamp
          properties:
            event_id:
              type: string
              description: The unique identifier for the event.
              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
            object_type:
              type: string
              enum:
                - webhook
              description: The event relates to a webhook.
            timestamp:
              type: integer
              format: unix timestamp
              description: The unix timestamp when the event occurred.
              example: 1613063089
        - type: object
          required:
            - metric
            - data
          properties:
            metric:
              type: string
              enum:
                - failed
              description: A webhook failed to send.
            data:
              description: Contains information about the event, specific to the `object_type` and `metric`.
              allOf:
                - description: Contains information about the event, specific to the `object_type` and `metric`.
                  oneOf:
                    - title: API triggered broadcast
                      required:
                        - trigger_id
                        - broadcast_id
                        - delivery_id
                        - action_id
                        - identifiers
                      type: object
                      properties:
                        trigger_id:
                          type: integer
                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                          example: 1
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        parent_action_id:
                          type: integer
                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                          example: 1
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                        content:
                          type: string
                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                    - title: Campaign
                      type: object
                      required:
                        - campaign_id
                        - delivery_id
                        - action_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        journey_id:
                          type: integer
                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                          example: 5
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                    - title: newsletter
                      type: object
                      required:
                        - newsletter_id
                        - delivery_id
                        - identifiers
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        delivery_id:
                          type: string
                          description: The instance of a message sent to a person.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          example: 1
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          example: 3
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - type: object
                  required:
                    - failure_message
                  properties:
                    failure_message:
                      type: string
                      description: Indicates the reason that an attempted message failed.
                      example: Something went wrong!
    event_common_data:
      description: Contains information about the event, specific to the `object_type` and `metric`.
      oneOf:
        - title: API triggered broadcast
          required:
            - trigger_id
            - broadcast_id
            - delivery_id
            - action_id
            - identifiers
          type: object
          properties:
            trigger_id:
              type: integer
              description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
              example: 1
            customer_id:
              type: string
              deprecated: true
              description: |
                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
              example: '42'
            delivery_id:
              type: string
              description: The instance of a message sent to a person.
              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
            action_id:
              description: The identifier for an action.
              type: integer
              readOnly: true
              example: 96
              nullable: true
            broadcast_id:
              type: integer
              description: The identifier for a broadcast.
              example: 2
              nullable: true
            journey_id:
              type: integer
              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
              example: 5
            parent_action_id:
              type: integer
              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
              example: 1
            identifiers:
              type: object
              description: |
                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
              required:
                - id
              properties:
                id:
                  type: string
                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                  nullable: true
                  example: '42'
                email:
                  type: string
                  description: The email address of the customer.
                  nullable: true
                  example: test@example.com
                cio_id:
                  type: string
                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                  example: d9c106000001
            content:
              type: string
              description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
        - title: Campaign
          type: object
          required:
            - campaign_id
            - delivery_id
            - action_id
            - identifiers
          properties:
            customer_id:
              type: string
              deprecated: true
              description: |
                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
              example: '42'
            delivery_id:
              type: string
              description: The instance of a message sent to a person.
              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
            action_id:
              description: The identifier for an action.
              type: integer
              readOnly: true
              example: 96
              nullable: true
            campaign_id:
              description: The identifier for a campaign.
              type: integer
              readOnly: true
              example: 5
              nullable: true
            journey_id:
              type: integer
              description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
              example: 5
            identifiers:
              type: object
              description: |
                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
              required:
                - id
              properties:
                id:
                  type: string
                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                  nullable: true
                  example: '42'
                email:
                  type: string
                  description: The email address of the customer.
                  nullable: true
                  example: test@example.com
                cio_id:
                  type: string
                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                  example: d9c106000001
        - title: newsletter
          type: object
          required:
            - newsletter_id
            - delivery_id
            - identifiers
          properties:
            customer_id:
              type: string
              deprecated: true
              description: |
                The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
              example: '42'
            delivery_id:
              type: string
              description: The instance of a message sent to a person.
              example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
            newsletter_id:
              description: The identifier for a newsletter.
              type: integer
              example: 1
            content_id:
              description: The identifier for a newsletter variant.
              type: integer
              example: 3
            identifiers:
              type: object
              description: |
                The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
              required:
                - id
              properties:
                id:
                  type: string
                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                  nullable: true
                  example: '42'
                email:
                  type: string
                  description: The email address of the customer.
                  nullable: true
                  example: test@example.com
                cio_id:
                  type: string
                  description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                  example: d9c106000001
    event_id:
      type: string
      description: The unique identifier for the event.
      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
    email_address:
      type: string
      description: The email address of the customer.
      nullable: true
      example: test@example.com
    webhook_timestamp:
      type: integer
      format: unix timestamp
      description: The unix timestamp when the event occurred.
      example: 1613063089
    failure_message:
      type: string
      description: Indicates the reason that an attempted message failed.
      example: Something went wrong!
    link_id:
      type: integer
      description: The identifier for the tracked link that a person clicked or tapped.
      example: 1
    href:
      type: string
      description: The URL of the link that a person clicked.
      example: https://www.customer.io/docs
    device_platform:
      type: string
      enum:
        - android
        - ios
      description: The device's operating system.
      example: ios
    newsletter_id_event:
      description: The identifier for a newsletter.
      type: integer
      example: 1
    content_id_event:
      description: The identifier for a newsletter variant.
      type: integer
      example: 3
    journey_id:
      type: integer
      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
      example: 5
    trigger_id:
      type: integer
      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
      example: 1
    webhook_customer_id:
      type: string
      deprecated: true
      description: |
        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
      example: '42'
    webhook_identifiers_id:
      type: string
      description: The ID of the person the webhook event represents. If your workspace uses `email` as a unique key, this value was automatically generated by Customer.io.
      example: '0200102'
    webhook_identifiers:
      type: object
      description: |
        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
      required:
        - id
      properties:
        id:
          type: string
          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
          nullable: true
          example: '42'
        email:
          type: string
          description: The email address of the customer.
          nullable: true
          example: test@example.com
        cio_id:
          type: string
          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
          example: d9c106000001
paths:
  /v1/campaigns/{broadcast_id}/triggers:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The ID of the broadcast that you want to trigger.
        schema:
          type: integer
    post:
      operationId: triggerBroadcast
      tags:
        - Broadcasts
      summary: Trigger a broadcast
      security:
        - Bearer-Auth-(App-API-Key): []
      description: |
        Manually trigger a broadcast, and provide data to populate messages in your trigger. The shape of the request changes based on the type of audience you broadcast to: a segment, a list of emails, a list of customer IDs, a map of users, or a data file. You can reference properties in the `data` object from this request using liquid—`{{trigger.undefined<property_in_data_obj>}}`.

        If your broadcast produces a `422` error, you can [get more information about the errors](#operation/broadcastErrors) to see what went wrong.

        **This endpoint is rate-limited to one request every 10 seconds.** Broadcasts are optimized to send messages to a large audience and not for one-to-one interactions. Use our [transactional API](#send-email) or event-triggered campaigns to respond to your audience on an individual, one-to-one basis. Reach out to win@customer.io if you have a use case that exceeds this limit.
      requestBody:
        content:
          application/json:
            x-rate-limit: 10
            schema:
              oneOf:
                - title: Audience Filter
                  description: The segment you want to send your broadcast to.
                  allOf:
                    - type: object
                      required:
                        - recipients
                      properties:
                        recipients:
                          description: A filter defining the group of people that you want send the broadcast to.
                          title: Audience Filter
                          oneOf:
                            - title: and
                              type: object
                              properties:
                                and:
                                  type: array
                                  description: Match *all* conditions to return results.
                                  items:
                                    title: People Filter
                                    type: object
                                    description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                                    properties:
                                      and:
                                        type: array
                                        description: Returns results matching *all* conditions.
                                        items:
                                          type: object
                                          properties:
                                            segment:
                                              title: segment
                                              type: object
                                              description: Provide the `id` of a segment containing people you want to search for.
                                              properties:
                                                id:
                                                  type: integer
                                                  description: The ID of the segment you want to return people from.
                                                  example: 4
                                            attribute:
                                              title: attribute
                                              description: Filter your audience by attribute.
                                              type: object
                                              properties:
                                                field:
                                                  type: string
                                                  description: The name of the attribute you want to filter against.
                                                  example: first_name
                                                operator:
                                                  type: string
                                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                  enum:
                                                    - eq
                                                    - exists
                                                value:
                                                  type: string
                                                  description: The value you want to match for this attribute.
                                              example:
                                                field: unsubscribed
                                                operator: eq
                                                value: true
                                      or:
                                        type: array
                                        description: Returns results matching *any* conditions.
                                        items:
                                          type: object
                                          properties:
                                            segment:
                                              title: segment
                                              type: object
                                              description: Provide the `id` of a segment containing people you want to search for.
                                              properties:
                                                id:
                                                  type: integer
                                                  description: The ID of the segment you want to return people from.
                                                  example: 4
                                            attribute:
                                              title: attribute
                                              description: Filter your audience by attribute.
                                              type: object
                                              properties:
                                                field:
                                                  type: string
                                                  description: The name of the attribute you want to filter against.
                                                  example: first_name
                                                operator:
                                                  type: string
                                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                  enum:
                                                    - eq
                                                    - exists
                                                value:
                                                  type: string
                                                  description: The value you want to match for this attribute.
                                              example:
                                                field: unsubscribed
                                                operator: eq
                                                value: true
                                      not:
                                        description: Returns results if a condition is false.
                                        type: object
                                        properties:
                                          and:
                                            type: array
                                            description: Match *all* conditions to return results.
                                            items:
                                              type: object
                                              properties:
                                                segment:
                                                  title: segment
                                                  type: object
                                                  description: Provide the `id` of a segment containing people you want to search for.
                                                  properties:
                                                    id:
                                                      type: integer
                                                      description: The ID of the segment you want to return people from.
                                                      example: 4
                                                attribute:
                                                  title: attribute
                                                  description: Filter your audience by attribute.
                                                  type: object
                                                  properties:
                                                    field:
                                                      type: string
                                                      description: The name of the attribute you want to filter against.
                                                      example: first_name
                                                    operator:
                                                      type: string
                                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                      enum:
                                                        - eq
                                                        - exists
                                                    value:
                                                      type: string
                                                      description: The value you want to match for this attribute.
                                                  example:
                                                    field: unsubscribed
                                                    operator: eq
                                                    value: true
                                          or:
                                            type: array
                                            description: Match *any* condition to return results.
                                            items:
                                              type: object
                                              properties:
                                                segment:
                                                  title: segment
                                                  type: object
                                                  description: Provide the `id` of a segment containing people you want to search for.
                                                  properties:
                                                    id:
                                                      type: integer
                                                      description: The ID of the segment you want to return people from.
                                                      example: 4
                                                attribute:
                                                  title: attribute
                                                  description: Filter your audience by attribute.
                                                  type: object
                                                  properties:
                                                    field:
                                                      type: string
                                                      description: The name of the attribute you want to filter against.
                                                      example: first_name
                                                    operator:
                                                      type: string
                                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                      enum:
                                                        - eq
                                                        - exists
                                                    value:
                                                      type: string
                                                      description: The value you want to match for this attribute.
                                                  example:
                                                    field: unsubscribed
                                                    operator: eq
                                                    value: true
                                          segment:
                                            title: segment
                                            type: object
                                            description: Provide the `id` of a segment containing people you want to search for.
                                            properties:
                                              id:
                                                type: integer
                                                description: The ID of the segment you want to return people from.
                                                example: 4
                                          attribute:
                                            title: attribute
                                            description: Filter your audience by attribute.
                                            type: object
                                            properties:
                                              field:
                                                type: string
                                                description: The name of the attribute you want to filter against.
                                                example: first_name
                                              operator:
                                                type: string
                                                description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                enum:
                                                  - eq
                                                  - exists
                                              value:
                                                type: string
                                                description: The value you want to match for this attribute.
                                            example:
                                              field: unsubscribed
                                              operator: eq
                                              value: true
                                      segment:
                                        title: segment
                                        type: object
                                        description: Provide the `id` of a segment containing people you want to search for.
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the segment you want to return people from.
                                            example: 4
                                      attribute:
                                        title: attribute
                                        description: Filter your audience by attribute.
                                        type: object
                                        properties:
                                          field:
                                            type: string
                                            description: The name of the attribute you want to filter against.
                                            example: first_name
                                          operator:
                                            type: string
                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                            enum:
                                              - eq
                                              - exists
                                          value:
                                            type: string
                                            description: The value you want to match for this attribute.
                                        example:
                                          field: unsubscribed
                                          operator: eq
                                          value: true
                            - title: or
                              type: object
                              properties:
                                or:
                                  type: array
                                  description: Match *any* condition to return results.
                                  items:
                                    title: People Filter
                                    type: object
                                    description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                                    properties:
                                      and:
                                        type: array
                                        description: Returns results matching *all* conditions.
                                        items:
                                          type: object
                                          properties:
                                            segment:
                                              title: segment
                                              type: object
                                              description: Provide the `id` of a segment containing people you want to search for.
                                              properties:
                                                id:
                                                  type: integer
                                                  description: The ID of the segment you want to return people from.
                                                  example: 4
                                            attribute:
                                              title: attribute
                                              description: Filter your audience by attribute.
                                              type: object
                                              properties:
                                                field:
                                                  type: string
                                                  description: The name of the attribute you want to filter against.
                                                  example: first_name
                                                operator:
                                                  type: string
                                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                  enum:
                                                    - eq
                                                    - exists
                                                value:
                                                  type: string
                                                  description: The value you want to match for this attribute.
                                              example:
                                                field: unsubscribed
                                                operator: eq
                                                value: true
                                      or:
                                        type: array
                                        description: Returns results matching *any* conditions.
                                        items:
                                          type: object
                                          properties:
                                            segment:
                                              title: segment
                                              type: object
                                              description: Provide the `id` of a segment containing people you want to search for.
                                              properties:
                                                id:
                                                  type: integer
                                                  description: The ID of the segment you want to return people from.
                                                  example: 4
                                            attribute:
                                              title: attribute
                                              description: Filter your audience by attribute.
                                              type: object
                                              properties:
                                                field:
                                                  type: string
                                                  description: The name of the attribute you want to filter against.
                                                  example: first_name
                                                operator:
                                                  type: string
                                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                  enum:
                                                    - eq
                                                    - exists
                                                value:
                                                  type: string
                                                  description: The value you want to match for this attribute.
                                              example:
                                                field: unsubscribed
                                                operator: eq
                                                value: true
                                      not:
                                        description: Returns results if a condition is false.
                                        type: object
                                        properties:
                                          and:
                                            type: array
                                            description: Match *all* conditions to return results.
                                            items:
                                              type: object
                                              properties:
                                                segment:
                                                  title: segment
                                                  type: object
                                                  description: Provide the `id` of a segment containing people you want to search for.
                                                  properties:
                                                    id:
                                                      type: integer
                                                      description: The ID of the segment you want to return people from.
                                                      example: 4
                                                attribute:
                                                  title: attribute
                                                  description: Filter your audience by attribute.
                                                  type: object
                                                  properties:
                                                    field:
                                                      type: string
                                                      description: The name of the attribute you want to filter against.
                                                      example: first_name
                                                    operator:
                                                      type: string
                                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                      enum:
                                                        - eq
                                                        - exists
                                                    value:
                                                      type: string
                                                      description: The value you want to match for this attribute.
                                                  example:
                                                    field: unsubscribed
                                                    operator: eq
                                                    value: true
                                          or:
                                            type: array
                                            description: Match *any* condition to return results.
                                            items:
                                              type: object
                                              properties:
                                                segment:
                                                  title: segment
                                                  type: object
                                                  description: Provide the `id` of a segment containing people you want to search for.
                                                  properties:
                                                    id:
                                                      type: integer
                                                      description: The ID of the segment you want to return people from.
                                                      example: 4
                                                attribute:
                                                  title: attribute
                                                  description: Filter your audience by attribute.
                                                  type: object
                                                  properties:
                                                    field:
                                                      type: string
                                                      description: The name of the attribute you want to filter against.
                                                      example: first_name
                                                    operator:
                                                      type: string
                                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                      enum:
                                                        - eq
                                                        - exists
                                                    value:
                                                      type: string
                                                      description: The value you want to match for this attribute.
                                                  example:
                                                    field: unsubscribed
                                                    operator: eq
                                                    value: true
                                          segment:
                                            title: segment
                                            type: object
                                            description: Provide the `id` of a segment containing people you want to search for.
                                            properties:
                                              id:
                                                type: integer
                                                description: The ID of the segment you want to return people from.
                                                example: 4
                                          attribute:
                                            title: attribute
                                            description: Filter your audience by attribute.
                                            type: object
                                            properties:
                                              field:
                                                type: string
                                                description: The name of the attribute you want to filter against.
                                                example: first_name
                                              operator:
                                                type: string
                                                description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                enum:
                                                  - eq
                                                  - exists
                                              value:
                                                type: string
                                                description: The value you want to match for this attribute.
                                            example:
                                              field: unsubscribed
                                              operator: eq
                                              value: true
                                      segment:
                                        title: segment
                                        type: object
                                        description: Provide the `id` of a segment containing people you want to search for.
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the segment you want to return people from.
                                            example: 4
                                      attribute:
                                        title: attribute
                                        description: Filter your audience by attribute.
                                        type: object
                                        properties:
                                          field:
                                            type: string
                                            description: The name of the attribute you want to filter against.
                                            example: first_name
                                          operator:
                                            type: string
                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                            enum:
                                              - eq
                                              - exists
                                          value:
                                            type: string
                                            description: The value you want to match for this attribute.
                                        example:
                                          field: unsubscribed
                                          operator: eq
                                          value: true
                            - title: not
                              type: object
                              description: Match if a condition is false.
                              properties:
                                not:
                                  title: People Filter
                                  type: object
                                  description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                                  properties:
                                    and:
                                      type: array
                                      description: Returns results matching *all* conditions.
                                      items:
                                        type: object
                                        properties:
                                          segment:
                                            title: segment
                                            type: object
                                            description: Provide the `id` of a segment containing people you want to search for.
                                            properties:
                                              id:
                                                type: integer
                                                description: The ID of the segment you want to return people from.
                                                example: 4
                                          attribute:
                                            title: attribute
                                            description: Filter your audience by attribute.
                                            type: object
                                            properties:
                                              field:
                                                type: string
                                                description: The name of the attribute you want to filter against.
                                                example: first_name
                                              operator:
                                                type: string
                                                description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                enum:
                                                  - eq
                                                  - exists
                                              value:
                                                type: string
                                                description: The value you want to match for this attribute.
                                            example:
                                              field: unsubscribed
                                              operator: eq
                                              value: true
                                    or:
                                      type: array
                                      description: Returns results matching *any* conditions.
                                      items:
                                        type: object
                                        properties:
                                          segment:
                                            title: segment
                                            type: object
                                            description: Provide the `id` of a segment containing people you want to search for.
                                            properties:
                                              id:
                                                type: integer
                                                description: The ID of the segment you want to return people from.
                                                example: 4
                                          attribute:
                                            title: attribute
                                            description: Filter your audience by attribute.
                                            type: object
                                            properties:
                                              field:
                                                type: string
                                                description: The name of the attribute you want to filter against.
                                                example: first_name
                                              operator:
                                                type: string
                                                description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                enum:
                                                  - eq
                                                  - exists
                                              value:
                                                type: string
                                                description: The value you want to match for this attribute.
                                            example:
                                              field: unsubscribed
                                              operator: eq
                                              value: true
                                    not:
                                      description: Returns results if a condition is false.
                                      type: object
                                      properties:
                                        and:
                                          type: array
                                          description: Match *all* conditions to return results.
                                          items:
                                            type: object
                                            properties:
                                              segment:
                                                title: segment
                                                type: object
                                                description: Provide the `id` of a segment containing people you want to search for.
                                                properties:
                                                  id:
                                                    type: integer
                                                    description: The ID of the segment you want to return people from.
                                                    example: 4
                                              attribute:
                                                title: attribute
                                                description: Filter your audience by attribute.
                                                type: object
                                                properties:
                                                  field:
                                                    type: string
                                                    description: The name of the attribute you want to filter against.
                                                    example: first_name
                                                  operator:
                                                    type: string
                                                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                    enum:
                                                      - eq
                                                      - exists
                                                  value:
                                                    type: string
                                                    description: The value you want to match for this attribute.
                                                example:
                                                  field: unsubscribed
                                                  operator: eq
                                                  value: true
                                        or:
                                          type: array
                                          description: Match *any* condition to return results.
                                          items:
                                            type: object
                                            properties:
                                              segment:
                                                title: segment
                                                type: object
                                                description: Provide the `id` of a segment containing people you want to search for.
                                                properties:
                                                  id:
                                                    type: integer
                                                    description: The ID of the segment you want to return people from.
                                                    example: 4
                                              attribute:
                                                title: attribute
                                                description: Filter your audience by attribute.
                                                type: object
                                                properties:
                                                  field:
                                                    type: string
                                                    description: The name of the attribute you want to filter against.
                                                    example: first_name
                                                  operator:
                                                    type: string
                                                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                    enum:
                                                      - eq
                                                      - exists
                                                  value:
                                                    type: string
                                                    description: The value you want to match for this attribute.
                                                example:
                                                  field: unsubscribed
                                                  operator: eq
                                                  value: true
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                            - title: segment
                              type: object
                              description: Provide the `id` of a segment containing people you want to search for.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the segment you want to return people from.
                                  example: 4
                            - title: attribute
                              description: Filter your audience by attribute.
                              type: object
                              properties:
                                field:
                                  type: string
                                  description: The name of the attribute you want to filter against.
                                  example: first_name
                                operator:
                                  type: string
                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                  enum:
                                    - eq
                                    - exists
                                value:
                                  type: string
                                  description: The value you want to match for this attribute.
                              example:
                                field: unsubscribed
                                operator: eq
                                value: true
                    - type: object
                      properties:
                        data:
                          type: object
                          description: Contains information you want to use to populate your broadcast.
                          additionalProperties:
                            x-additionalPropertiesName: Broadcast liquid data
                            description: Insert key-values that you want to reference in your message here.
                          example:
                            headline: Roadrunner spotted in Albuquerque!
                            date: 1511315635
                            text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                        email_add_duplicates:
                          type: boolean
                          default: false
                          description: an email address associated with more than one profile id is an error.
                        email_ignore_missing:
                          type: boolean
                          default: false
                          description: If false a missing email address is an error.
                        id_ignore_missing:
                          type: boolean
                          default: false
                          description: If false, a missing customer ID is an error.
                  example:
                    recipients:
                      and:
                        - segment:
                            id: 3
                        - or:
                            - attribute:
                                field: interest
                                operator: eq
                                value: roadrunners
                            - attribute:
                                field: state
                                operator: eq
                                value: NM
                            - not:
                                attribute:
                                  field: species
                                  operator: eq
                                  value: roadrunners
                    data:
                      headline: Roadrunner spotted in Albuquerque!
                      date: 1511315635
                      text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                - title: Emails
                  description: An array of emails you want to send the broadcast to. These addresses must already exist; your request cannot create a new person.
                  allOf:
                    - type: object
                      required:
                        - emails
                      properties:
                        emails:
                          description: An array of email addresses you want to send the broadcast to. These addresses must already exist; your request cannot create a new person.
                          type: array
                          items:
                            type: string
                            format: email
                          example:
                            - recipient1@example.com
                            - anotherRecipient@example.com
                    - type: object
                      properties:
                        data:
                          type: object
                          description: Contains information you want to use to populate your broadcast.
                          additionalProperties:
                            x-additionalPropertiesName: Broadcast liquid data
                            description: Insert key-values that you want to reference in your message here.
                          example:
                            headline: Roadrunner spotted in Albuquerque!
                            date: 1511315635
                            text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                        email_add_duplicates:
                          type: boolean
                          default: false
                          description: an email address associated with more than one profile id is an error.
                        email_ignore_missing:
                          type: boolean
                          default: false
                          description: If false a missing email address is an error.
                        id_ignore_missing:
                          type: boolean
                          default: false
                          description: If false, a missing customer ID is an error.
                - title: IDs
                  description: An array of customer ids that you want to send the broadcast to. These IDs must already exist; your request cannot create a new person.
                  allOf:
                    - type: object
                      required:
                        - ids
                      properties:
                        ids:
                          description: |
                            An array of IDs you want to send a broadcast to. **NOTE**: If your workspace identifies people by `email`, don't use this option. Identify your audience by `emails` instead.
                          type: array
                          maxItems: 10000
                          items:
                            type: string
                          example:
                            - id1
                            - id4
                    - type: object
                      properties:
                        data:
                          type: object
                          description: Contains information you want to use to populate your broadcast.
                          additionalProperties:
                            x-additionalPropertiesName: Broadcast liquid data
                            description: Insert key-values that you want to reference in your message here.
                          example:
                            headline: Roadrunner spotted in Albuquerque!
                            date: 1511315635
                            text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                        email_add_duplicates:
                          type: boolean
                          default: false
                          description: an email address associated with more than one profile id is an error.
                        email_ignore_missing:
                          type: boolean
                          default: false
                          description: If false a missing email address is an error.
                        id_ignore_missing:
                          type: boolean
                          default: false
                          description: If false, a missing customer ID is an error.
                - title: User Maps
                  description: An array of JSON objects containing `id` or `email` keys and a `data` key. Each object represents a person you want to send the broadcast to and data you want to personalize their message with using liquid.
                  allOf:
                    - type: object
                      required:
                        - per_user_data
                      properties:
                        per_user_data:
                          description: |
                            An array of people you want to send a broadcast to and custom data for each person. Each object in the array represents a person, with additional data you want to use to personalize their message. **When you trigger a broadcast, the people in your request must already exist in your workspace.** Requests to trigger a broadcast cannot create new people. 

                            **Remove line-breaks from `per_user_data`**. We've added line breaks in examples to make the code easy to read, but you must remove line breaks (collapsing/uglifying your payload) to prevent errors.
                          type: array
                          maxItems: 10000
                          items:
                            oneOf:
                              - title: ids
                                type: object
                                required:
                                  - id
                                properties:
                                  id:
                                    type: string
                                    description: The ID of the recipient.
                                    example: 1
                                  data:
                                    type: object
                                    description: Merge data associated with the recipient.
                                    additionalProperties:
                                      x-additionalPropertiesName: Liquid merge data
                                      description: Insert key-values that you want to reference in your message here.
                                    example:
                                      firstName: Hugh
                                      lastName: Mann
                                      purchase: shoes
                              - title: emails
                                type: object
                                required:
                                  - email
                                properties:
                                  email:
                                    type: string
                                    description: The email address of the recipient. This address must be unique in your workspace. If more than one person has the same `email` attribute, your request will produce an error.
                                    example: recipient1@example.com
                                  data:
                                    description: Merge data associated with the recipient.
                                    type: object
                                    additionalProperties:
                                      x-additionalPropertiesName: Liquid merge data
                                      description: Insert key-values that you want to reference in your message here.
                                    example:
                                      firstName: Hugh
                                      lastName: Mann
                                      purchase: shoes
                          example:
                            - id: wiley_coyote
                              data:
                                voucher_code: FESwYm
                            - email: road@runner.net
                              data:
                                voucher_code: cYm6XJ
                    - type: object
                      properties:
                        data:
                          type: object
                          description: Contains information you want to use to populate your broadcast.
                          additionalProperties:
                            x-additionalPropertiesName: Broadcast liquid data
                            description: Insert key-values that you want to reference in your message here.
                          example:
                            headline: Roadrunner spotted in Albuquerque!
                            date: 1511315635
                            text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                        email_add_duplicates:
                          type: boolean
                          default: false
                          description: an email address associated with more than one profile id is an error.
                        email_ignore_missing:
                          type: boolean
                          default: false
                          description: If false a missing email address is an error.
                        id_ignore_missing:
                          type: boolean
                          default: false
                          description: If false, a missing customer ID is an error.
                - title: Data file URL
                  description: |
                    The URL of a data file containing per-user data, each line containing a json map with either `id` and `data` or `email` and `data` keys. **When you trigger a broadcast, the people represented by `id` and `email` must already exist in your workspace.** Requests to trigger a broadcast cannot create new people.
                  allOf:
                    - type: object
                      required:
                        - data_file_url
                      properties:
                        data_file_url:
                          description: |
                            The URL of a data file containing per-user data, each line containing a json map with either `id` and `data` or `email` and `data` keys.
                          type: string
                          format: url
                          example: https://myFile.example.com
                    - type: object
                      properties:
                        data:
                          type: object
                          description: Contains information you want to use to populate your broadcast.
                          additionalProperties:
                            x-additionalPropertiesName: Broadcast liquid data
                            description: Insert key-values that you want to reference in your message here.
                          example:
                            headline: Roadrunner spotted in Albuquerque!
                            date: 1511315635
                            text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                        email_add_duplicates:
                          type: boolean
                          default: false
                          description: an email address associated with more than one profile id is an error.
                        email_ignore_missing:
                          type: boolean
                          default: false
                          description: If false a missing email address is an error.
                        id_ignore_missing:
                          type: boolean
                          default: false
                          description: If false, a missing customer ID is an error.
      responses:
        '200':
          description: A successful request returns the trigger ID.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    description: The `trigger_id` for this operation. You can use this ID to get the status of your broadcast or [check for errors](#operation/broadcastErrors).
                    example: 3
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
        '404':
          description: The `broadcast_id` does not exist.
        '422':
          description: The broadcast has one or more validation errors. You can learn more by [checking your broadcast for errors](#operation/broadcastErrors) using the `trigger_id` found in the error `detail`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    description: Contains one or more validation errors found in your request payload.
                    type: array
                    items:
                      type: object
                      properties:
                        detail:
                          type: string
                          description: Describes the error and provides the trigger ID you can use to look up more information.
                          example: Errors were found while processing per user data (ids, emails or json data). More detail available from the errors endpoint for trigger 12"
                        source:
                          type: object
                          properties:
                            pointer:
                              type: string
                              description: Points to the key in your payload that contained validation errors.
                              example: /data/attributes/per_user_data
                        status:
                          type: string
                          description: The error code.
                          enum:
                            - '422'
                          example: '422'
        '429':
          description: Your request is over the 1 per 10 second limit for this endpoint.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://api.customer.io/v1/campaigns/{broadcast_id}/triggers \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"recipients":{"and":[{"segment":{"id":3}},{"or":[{"attribute":{"field":"interest","operator":"eq","value":"roadrunners"}},{"attribute":{"field":"state","operator":"eq","value":"NM"}},{"not":{"attribute":{"field":"species","operator":"eq","value":"roadrunners"}}}]}]},"data":{"headline":"Roadrunner spotted in Albuquerque!","date":1511315635,"text":"We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!"}}'
        - lang: Node + Native
          source: |
            const { APIClient, RegionUS } = require('customerio-node');
            const api = new APIClient('bearer-app-key', { region: RegionUS });

            const data = {
              headline: 'Roadrunner spotted in Albuquerque!',
              date: 1511315635,
              text:
                "We've received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!",
            };

            api.triggerBroadcast(campaignId, data, { segment: { id: 7 } });
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{broadcast_id}/triggers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"recipients\":{\"and\":[{\"segment\":{\"id\":3}},{\"or\":[{\"attribute\":{\"field\":\"interest\",\"operator\":\"eq\",\"value\":\"roadrunners\"}},{\"attribute\":{\"field\":\"state\",\"operator\":\"eq\",\"value\":\"NM\"}},{\"not\":{\"attribute\":{\"field\":\"species\",\"operator\":\"eq\",\"value\":\"roadrunners\"}}}]}]},\"data\":{\"headline\":\"Roadrunner spotted in Albuquerque!\",\"date\":1511315635,\"text\":\"We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!\"}}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"recipients\":{\"and\":[{\"segment\":{\"id\":3}},{\"or\":[{\"attribute\":{\"field\":\"interest\",\"operator\":\"eq\",\"value\":\"roadrunners\"}},{\"attribute\":{\"field\":\"state\",\"operator\":\"eq\",\"value\":\"NM\"}},{\"not\":{\"attribute\":{\"field\":\"species\",\"operator\":\"eq\",\"value\":\"roadrunners\"}}}]}]},\"data\":{\"headline\":\"Roadrunner spotted in Albuquerque!\",\"date\":1511315635,\"text\":\"We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!\"}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("POST", "/v1/campaigns/{broadcast_id}/triggers", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{broadcast_id}/triggers\"\n\n\tpayload := strings.NewReader(\"{\\\"recipients\\\":{\\\"and\\\":[{\\\"segment\\\":{\\\"id\\\":3}},{\\\"or\\\":[{\\\"attribute\\\":{\\\"field\\\":\\\"interest\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":\\\"roadrunners\\\"}},{\\\"attribute\\\":{\\\"field\\\":\\\"state\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":\\\"NM\\\"}},{\\\"not\\\":{\\\"attribute\\\":{\\\"field\\\":\\\"species\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":\\\"roadrunners\\\"}}}]}]},\\\"data\\\":{\\\"headline\\\":\\\"Roadrunner spotted in Albuquerque!\\\",\\\"date\\\":1511315635,\\\"text\\\":\\\"We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{broadcast_id}/triggers/{trigger_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The ID of the broadcast that you want to return information about.
        schema:
          type: integer
      - name: trigger_id
        in: path
        required: true
        description: The ID of the campaign trigger that you want to return information for.
        schema:
          type: integer
          example: 3
    get:
      operationId: broadcastStatus
      security:
        - Bearer-Auth-(App-API-Key): []
      tags:
        - Broadcasts
      summary: Get the status of a broadcast
      description: |
        After triggering a broadcast you can retrieve the status of that broadcast using a GET of the trigger_id resource.
      responses:
        '200':
          description: Returns the status of your broadcast.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: The ID of the trigger.
                  broadcast_id:
                    type: integer
                    description: The ID of the campaign that the trigger sent.
                  created_at:
                    type: integer
                    format: unix epoch
                    description: The date-time when you issued this campaign trigger.
                  processed_at:
                    type: integer
                    format: unix epoch
                    description: The date-time when Customer.io processed the trigger.
                  recipients_count:
                    type: integer
                    description: The number of people in your workspace Customer.io sent your message to.
                  workflow_action_ids:
                    description: The `id` for each action contained by your broadcast.
                    type: array
                    items:
                      type: integer
                  data_file_position:
                    description: Indicates something about a data file if the trigger used a data file for recipients?
                    type: integer
                  data_file_processed:
                    type: boolean
                    description: If true, Customer.io processed the data file that you uploaded as a part of your trigger.
                  data_file_error_count:
                    type: integer
                    description: The number of errors in your data file. Typically, each error represents a member of your audience who will not receive your broadcast.
                  recipients_filter:
                    oneOf:
                      - title: Audience Filter
                        description: The segment you want to send your broadcast to.
                        allOf:
                          - type: object
                            required:
                              - recipients
                            properties:
                              recipients:
                                description: A filter defining the group of people that you want send the broadcast to.
                                title: Audience Filter
                                oneOf:
                                  - title: and
                                    type: object
                                    properties:
                                      and:
                                        type: array
                                        description: Match *all* conditions to return results.
                                        items:
                                          title: People Filter
                                          type: object
                                          description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                                          properties:
                                            and:
                                              type: array
                                              description: Returns results matching *all* conditions.
                                              items:
                                                type: object
                                                properties:
                                                  segment:
                                                    title: segment
                                                    type: object
                                                    description: Provide the `id` of a segment containing people you want to search for.
                                                    properties:
                                                      id:
                                                        type: integer
                                                        description: The ID of the segment you want to return people from.
                                                        example: 4
                                                  attribute:
                                                    title: attribute
                                                    description: Filter your audience by attribute.
                                                    type: object
                                                    properties:
                                                      field:
                                                        type: string
                                                        description: The name of the attribute you want to filter against.
                                                        example: first_name
                                                      operator:
                                                        type: string
                                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                        enum:
                                                          - eq
                                                          - exists
                                                      value:
                                                        type: string
                                                        description: The value you want to match for this attribute.
                                                    example:
                                                      field: unsubscribed
                                                      operator: eq
                                                      value: true
                                            or:
                                              type: array
                                              description: Returns results matching *any* conditions.
                                              items:
                                                type: object
                                                properties:
                                                  segment:
                                                    title: segment
                                                    type: object
                                                    description: Provide the `id` of a segment containing people you want to search for.
                                                    properties:
                                                      id:
                                                        type: integer
                                                        description: The ID of the segment you want to return people from.
                                                        example: 4
                                                  attribute:
                                                    title: attribute
                                                    description: Filter your audience by attribute.
                                                    type: object
                                                    properties:
                                                      field:
                                                        type: string
                                                        description: The name of the attribute you want to filter against.
                                                        example: first_name
                                                      operator:
                                                        type: string
                                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                        enum:
                                                          - eq
                                                          - exists
                                                      value:
                                                        type: string
                                                        description: The value you want to match for this attribute.
                                                    example:
                                                      field: unsubscribed
                                                      operator: eq
                                                      value: true
                                            not:
                                              description: Returns results if a condition is false.
                                              type: object
                                              properties:
                                                and:
                                                  type: array
                                                  description: Match *all* conditions to return results.
                                                  items:
                                                    type: object
                                                    properties:
                                                      segment:
                                                        title: segment
                                                        type: object
                                                        description: Provide the `id` of a segment containing people you want to search for.
                                                        properties:
                                                          id:
                                                            type: integer
                                                            description: The ID of the segment you want to return people from.
                                                            example: 4
                                                      attribute:
                                                        title: attribute
                                                        description: Filter your audience by attribute.
                                                        type: object
                                                        properties:
                                                          field:
                                                            type: string
                                                            description: The name of the attribute you want to filter against.
                                                            example: first_name
                                                          operator:
                                                            type: string
                                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                            enum:
                                                              - eq
                                                              - exists
                                                          value:
                                                            type: string
                                                            description: The value you want to match for this attribute.
                                                        example:
                                                          field: unsubscribed
                                                          operator: eq
                                                          value: true
                                                or:
                                                  type: array
                                                  description: Match *any* condition to return results.
                                                  items:
                                                    type: object
                                                    properties:
                                                      segment:
                                                        title: segment
                                                        type: object
                                                        description: Provide the `id` of a segment containing people you want to search for.
                                                        properties:
                                                          id:
                                                            type: integer
                                                            description: The ID of the segment you want to return people from.
                                                            example: 4
                                                      attribute:
                                                        title: attribute
                                                        description: Filter your audience by attribute.
                                                        type: object
                                                        properties:
                                                          field:
                                                            type: string
                                                            description: The name of the attribute you want to filter against.
                                                            example: first_name
                                                          operator:
                                                            type: string
                                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                            enum:
                                                              - eq
                                                              - exists
                                                          value:
                                                            type: string
                                                            description: The value you want to match for this attribute.
                                                        example:
                                                          field: unsubscribed
                                                          operator: eq
                                                          value: true
                                                segment:
                                                  title: segment
                                                  type: object
                                                  description: Provide the `id` of a segment containing people you want to search for.
                                                  properties:
                                                    id:
                                                      type: integer
                                                      description: The ID of the segment you want to return people from.
                                                      example: 4
                                                attribute:
                                                  title: attribute
                                                  description: Filter your audience by attribute.
                                                  type: object
                                                  properties:
                                                    field:
                                                      type: string
                                                      description: The name of the attribute you want to filter against.
                                                      example: first_name
                                                    operator:
                                                      type: string
                                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                      enum:
                                                        - eq
                                                        - exists
                                                    value:
                                                      type: string
                                                      description: The value you want to match for this attribute.
                                                  example:
                                                    field: unsubscribed
                                                    operator: eq
                                                    value: true
                                            segment:
                                              title: segment
                                              type: object
                                              description: Provide the `id` of a segment containing people you want to search for.
                                              properties:
                                                id:
                                                  type: integer
                                                  description: The ID of the segment you want to return people from.
                                                  example: 4
                                            attribute:
                                              title: attribute
                                              description: Filter your audience by attribute.
                                              type: object
                                              properties:
                                                field:
                                                  type: string
                                                  description: The name of the attribute you want to filter against.
                                                  example: first_name
                                                operator:
                                                  type: string
                                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                  enum:
                                                    - eq
                                                    - exists
                                                value:
                                                  type: string
                                                  description: The value you want to match for this attribute.
                                              example:
                                                field: unsubscribed
                                                operator: eq
                                                value: true
                                  - title: or
                                    type: object
                                    properties:
                                      or:
                                        type: array
                                        description: Match *any* condition to return results.
                                        items:
                                          title: People Filter
                                          type: object
                                          description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                                          properties:
                                            and:
                                              type: array
                                              description: Returns results matching *all* conditions.
                                              items:
                                                type: object
                                                properties:
                                                  segment:
                                                    title: segment
                                                    type: object
                                                    description: Provide the `id` of a segment containing people you want to search for.
                                                    properties:
                                                      id:
                                                        type: integer
                                                        description: The ID of the segment you want to return people from.
                                                        example: 4
                                                  attribute:
                                                    title: attribute
                                                    description: Filter your audience by attribute.
                                                    type: object
                                                    properties:
                                                      field:
                                                        type: string
                                                        description: The name of the attribute you want to filter against.
                                                        example: first_name
                                                      operator:
                                                        type: string
                                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                        enum:
                                                          - eq
                                                          - exists
                                                      value:
                                                        type: string
                                                        description: The value you want to match for this attribute.
                                                    example:
                                                      field: unsubscribed
                                                      operator: eq
                                                      value: true
                                            or:
                                              type: array
                                              description: Returns results matching *any* conditions.
                                              items:
                                                type: object
                                                properties:
                                                  segment:
                                                    title: segment
                                                    type: object
                                                    description: Provide the `id` of a segment containing people you want to search for.
                                                    properties:
                                                      id:
                                                        type: integer
                                                        description: The ID of the segment you want to return people from.
                                                        example: 4
                                                  attribute:
                                                    title: attribute
                                                    description: Filter your audience by attribute.
                                                    type: object
                                                    properties:
                                                      field:
                                                        type: string
                                                        description: The name of the attribute you want to filter against.
                                                        example: first_name
                                                      operator:
                                                        type: string
                                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                        enum:
                                                          - eq
                                                          - exists
                                                      value:
                                                        type: string
                                                        description: The value you want to match for this attribute.
                                                    example:
                                                      field: unsubscribed
                                                      operator: eq
                                                      value: true
                                            not:
                                              description: Returns results if a condition is false.
                                              type: object
                                              properties:
                                                and:
                                                  type: array
                                                  description: Match *all* conditions to return results.
                                                  items:
                                                    type: object
                                                    properties:
                                                      segment:
                                                        title: segment
                                                        type: object
                                                        description: Provide the `id` of a segment containing people you want to search for.
                                                        properties:
                                                          id:
                                                            type: integer
                                                            description: The ID of the segment you want to return people from.
                                                            example: 4
                                                      attribute:
                                                        title: attribute
                                                        description: Filter your audience by attribute.
                                                        type: object
                                                        properties:
                                                          field:
                                                            type: string
                                                            description: The name of the attribute you want to filter against.
                                                            example: first_name
                                                          operator:
                                                            type: string
                                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                            enum:
                                                              - eq
                                                              - exists
                                                          value:
                                                            type: string
                                                            description: The value you want to match for this attribute.
                                                        example:
                                                          field: unsubscribed
                                                          operator: eq
                                                          value: true
                                                or:
                                                  type: array
                                                  description: Match *any* condition to return results.
                                                  items:
                                                    type: object
                                                    properties:
                                                      segment:
                                                        title: segment
                                                        type: object
                                                        description: Provide the `id` of a segment containing people you want to search for.
                                                        properties:
                                                          id:
                                                            type: integer
                                                            description: The ID of the segment you want to return people from.
                                                            example: 4
                                                      attribute:
                                                        title: attribute
                                                        description: Filter your audience by attribute.
                                                        type: object
                                                        properties:
                                                          field:
                                                            type: string
                                                            description: The name of the attribute you want to filter against.
                                                            example: first_name
                                                          operator:
                                                            type: string
                                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                            enum:
                                                              - eq
                                                              - exists
                                                          value:
                                                            type: string
                                                            description: The value you want to match for this attribute.
                                                        example:
                                                          field: unsubscribed
                                                          operator: eq
                                                          value: true
                                                segment:
                                                  title: segment
                                                  type: object
                                                  description: Provide the `id` of a segment containing people you want to search for.
                                                  properties:
                                                    id:
                                                      type: integer
                                                      description: The ID of the segment you want to return people from.
                                                      example: 4
                                                attribute:
                                                  title: attribute
                                                  description: Filter your audience by attribute.
                                                  type: object
                                                  properties:
                                                    field:
                                                      type: string
                                                      description: The name of the attribute you want to filter against.
                                                      example: first_name
                                                    operator:
                                                      type: string
                                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                      enum:
                                                        - eq
                                                        - exists
                                                    value:
                                                      type: string
                                                      description: The value you want to match for this attribute.
                                                  example:
                                                    field: unsubscribed
                                                    operator: eq
                                                    value: true
                                            segment:
                                              title: segment
                                              type: object
                                              description: Provide the `id` of a segment containing people you want to search for.
                                              properties:
                                                id:
                                                  type: integer
                                                  description: The ID of the segment you want to return people from.
                                                  example: 4
                                            attribute:
                                              title: attribute
                                              description: Filter your audience by attribute.
                                              type: object
                                              properties:
                                                field:
                                                  type: string
                                                  description: The name of the attribute you want to filter against.
                                                  example: first_name
                                                operator:
                                                  type: string
                                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                  enum:
                                                    - eq
                                                    - exists
                                                value:
                                                  type: string
                                                  description: The value you want to match for this attribute.
                                              example:
                                                field: unsubscribed
                                                operator: eq
                                                value: true
                                  - title: not
                                    type: object
                                    description: Match if a condition is false.
                                    properties:
                                      not:
                                        title: People Filter
                                        type: object
                                        description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                                        properties:
                                          and:
                                            type: array
                                            description: Returns results matching *all* conditions.
                                            items:
                                              type: object
                                              properties:
                                                segment:
                                                  title: segment
                                                  type: object
                                                  description: Provide the `id` of a segment containing people you want to search for.
                                                  properties:
                                                    id:
                                                      type: integer
                                                      description: The ID of the segment you want to return people from.
                                                      example: 4
                                                attribute:
                                                  title: attribute
                                                  description: Filter your audience by attribute.
                                                  type: object
                                                  properties:
                                                    field:
                                                      type: string
                                                      description: The name of the attribute you want to filter against.
                                                      example: first_name
                                                    operator:
                                                      type: string
                                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                      enum:
                                                        - eq
                                                        - exists
                                                    value:
                                                      type: string
                                                      description: The value you want to match for this attribute.
                                                  example:
                                                    field: unsubscribed
                                                    operator: eq
                                                    value: true
                                          or:
                                            type: array
                                            description: Returns results matching *any* conditions.
                                            items:
                                              type: object
                                              properties:
                                                segment:
                                                  title: segment
                                                  type: object
                                                  description: Provide the `id` of a segment containing people you want to search for.
                                                  properties:
                                                    id:
                                                      type: integer
                                                      description: The ID of the segment you want to return people from.
                                                      example: 4
                                                attribute:
                                                  title: attribute
                                                  description: Filter your audience by attribute.
                                                  type: object
                                                  properties:
                                                    field:
                                                      type: string
                                                      description: The name of the attribute you want to filter against.
                                                      example: first_name
                                                    operator:
                                                      type: string
                                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                      enum:
                                                        - eq
                                                        - exists
                                                    value:
                                                      type: string
                                                      description: The value you want to match for this attribute.
                                                  example:
                                                    field: unsubscribed
                                                    operator: eq
                                                    value: true
                                          not:
                                            description: Returns results if a condition is false.
                                            type: object
                                            properties:
                                              and:
                                                type: array
                                                description: Match *all* conditions to return results.
                                                items:
                                                  type: object
                                                  properties:
                                                    segment:
                                                      title: segment
                                                      type: object
                                                      description: Provide the `id` of a segment containing people you want to search for.
                                                      properties:
                                                        id:
                                                          type: integer
                                                          description: The ID of the segment you want to return people from.
                                                          example: 4
                                                    attribute:
                                                      title: attribute
                                                      description: Filter your audience by attribute.
                                                      type: object
                                                      properties:
                                                        field:
                                                          type: string
                                                          description: The name of the attribute you want to filter against.
                                                          example: first_name
                                                        operator:
                                                          type: string
                                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                          enum:
                                                            - eq
                                                            - exists
                                                        value:
                                                          type: string
                                                          description: The value you want to match for this attribute.
                                                      example:
                                                        field: unsubscribed
                                                        operator: eq
                                                        value: true
                                              or:
                                                type: array
                                                description: Match *any* condition to return results.
                                                items:
                                                  type: object
                                                  properties:
                                                    segment:
                                                      title: segment
                                                      type: object
                                                      description: Provide the `id` of a segment containing people you want to search for.
                                                      properties:
                                                        id:
                                                          type: integer
                                                          description: The ID of the segment you want to return people from.
                                                          example: 4
                                                    attribute:
                                                      title: attribute
                                                      description: Filter your audience by attribute.
                                                      type: object
                                                      properties:
                                                        field:
                                                          type: string
                                                          description: The name of the attribute you want to filter against.
                                                          example: first_name
                                                        operator:
                                                          type: string
                                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                          enum:
                                                            - eq
                                                            - exists
                                                        value:
                                                          type: string
                                                          description: The value you want to match for this attribute.
                                                      example:
                                                        field: unsubscribed
                                                        operator: eq
                                                        value: true
                                              segment:
                                                title: segment
                                                type: object
                                                description: Provide the `id` of a segment containing people you want to search for.
                                                properties:
                                                  id:
                                                    type: integer
                                                    description: The ID of the segment you want to return people from.
                                                    example: 4
                                              attribute:
                                                title: attribute
                                                description: Filter your audience by attribute.
                                                type: object
                                                properties:
                                                  field:
                                                    type: string
                                                    description: The name of the attribute you want to filter against.
                                                    example: first_name
                                                  operator:
                                                    type: string
                                                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                    enum:
                                                      - eq
                                                      - exists
                                                  value:
                                                    type: string
                                                    description: The value you want to match for this attribute.
                                                example:
                                                  field: unsubscribed
                                                  operator: eq
                                                  value: true
                                          segment:
                                            title: segment
                                            type: object
                                            description: Provide the `id` of a segment containing people you want to search for.
                                            properties:
                                              id:
                                                type: integer
                                                description: The ID of the segment you want to return people from.
                                                example: 4
                                          attribute:
                                            title: attribute
                                            description: Filter your audience by attribute.
                                            type: object
                                            properties:
                                              field:
                                                type: string
                                                description: The name of the attribute you want to filter against.
                                                example: first_name
                                              operator:
                                                type: string
                                                description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                                enum:
                                                  - eq
                                                  - exists
                                              value:
                                                type: string
                                                description: The value you want to match for this attribute.
                                            example:
                                              field: unsubscribed
                                              operator: eq
                                              value: true
                                  - title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  - title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                          - type: object
                            properties:
                              data:
                                type: object
                                description: Contains information you want to use to populate your broadcast.
                                additionalProperties:
                                  x-additionalPropertiesName: Broadcast liquid data
                                  description: Insert key-values that you want to reference in your message here.
                                example:
                                  headline: Roadrunner spotted in Albuquerque!
                                  date: 1511315635
                                  text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                              email_add_duplicates:
                                type: boolean
                                default: false
                                description: an email address associated with more than one profile id is an error.
                              email_ignore_missing:
                                type: boolean
                                default: false
                                description: If false a missing email address is an error.
                              id_ignore_missing:
                                type: boolean
                                default: false
                                description: If false, a missing customer ID is an error.
                        example:
                          recipients:
                            and:
                              - segment:
                                  id: 3
                              - or:
                                  - attribute:
                                      field: interest
                                      operator: eq
                                      value: roadrunners
                                  - attribute:
                                      field: state
                                      operator: eq
                                      value: NM
                                  - not:
                                      attribute:
                                        field: species
                                        operator: eq
                                        value: roadrunners
                          data:
                            headline: Roadrunner spotted in Albuquerque!
                            date: 1511315635
                            text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                      - title: Emails
                        description: An array of emails you want to send the broadcast to. These addresses must already exist; your request cannot create a new person.
                        allOf:
                          - type: object
                            required:
                              - emails
                            properties:
                              emails:
                                description: An array of email addresses you want to send the broadcast to. These addresses must already exist; your request cannot create a new person.
                                type: array
                                items:
                                  type: string
                                  format: email
                                example:
                                  - recipient1@example.com
                                  - anotherRecipient@example.com
                          - type: object
                            properties:
                              data:
                                type: object
                                description: Contains information you want to use to populate your broadcast.
                                additionalProperties:
                                  x-additionalPropertiesName: Broadcast liquid data
                                  description: Insert key-values that you want to reference in your message here.
                                example:
                                  headline: Roadrunner spotted in Albuquerque!
                                  date: 1511315635
                                  text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                              email_add_duplicates:
                                type: boolean
                                default: false
                                description: an email address associated with more than one profile id is an error.
                              email_ignore_missing:
                                type: boolean
                                default: false
                                description: If false a missing email address is an error.
                              id_ignore_missing:
                                type: boolean
                                default: false
                                description: If false, a missing customer ID is an error.
                      - title: IDs
                        description: An array of customer ids that you want to send the broadcast to. These IDs must already exist; your request cannot create a new person.
                        allOf:
                          - type: object
                            required:
                              - ids
                            properties:
                              ids:
                                description: |
                                  An array of IDs you want to send a broadcast to. **NOTE**: If your workspace identifies people by `email`, don't use this option. Identify your audience by `emails` instead.
                                type: array
                                maxItems: 10000
                                items:
                                  type: string
                                example:
                                  - id1
                                  - id4
                          - type: object
                            properties:
                              data:
                                type: object
                                description: Contains information you want to use to populate your broadcast.
                                additionalProperties:
                                  x-additionalPropertiesName: Broadcast liquid data
                                  description: Insert key-values that you want to reference in your message here.
                                example:
                                  headline: Roadrunner spotted in Albuquerque!
                                  date: 1511315635
                                  text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                              email_add_duplicates:
                                type: boolean
                                default: false
                                description: an email address associated with more than one profile id is an error.
                              email_ignore_missing:
                                type: boolean
                                default: false
                                description: If false a missing email address is an error.
                              id_ignore_missing:
                                type: boolean
                                default: false
                                description: If false, a missing customer ID is an error.
                      - title: User Maps
                        description: An array of JSON objects containing `id` or `email` keys and a `data` key. Each object represents a person you want to send the broadcast to and data you want to personalize their message with using liquid.
                        allOf:
                          - type: object
                            required:
                              - per_user_data
                            properties:
                              per_user_data:
                                description: |
                                  An array of people you want to send a broadcast to and custom data for each person. Each object in the array represents a person, with additional data you want to use to personalize their message. **When you trigger a broadcast, the people in your request must already exist in your workspace.** Requests to trigger a broadcast cannot create new people. 

                                  **Remove line-breaks from `per_user_data`**. We've added line breaks in examples to make the code easy to read, but you must remove line breaks (collapsing/uglifying your payload) to prevent errors.
                                type: array
                                maxItems: 10000
                                items:
                                  oneOf:
                                    - title: ids
                                      type: object
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of the recipient.
                                          example: 1
                                        data:
                                          type: object
                                          description: Merge data associated with the recipient.
                                          additionalProperties:
                                            x-additionalPropertiesName: Liquid merge data
                                            description: Insert key-values that you want to reference in your message here.
                                          example:
                                            firstName: Hugh
                                            lastName: Mann
                                            purchase: shoes
                                    - title: emails
                                      type: object
                                      required:
                                        - email
                                      properties:
                                        email:
                                          type: string
                                          description: The email address of the recipient. This address must be unique in your workspace. If more than one person has the same `email` attribute, your request will produce an error.
                                          example: recipient1@example.com
                                        data:
                                          description: Merge data associated with the recipient.
                                          type: object
                                          additionalProperties:
                                            x-additionalPropertiesName: Liquid merge data
                                            description: Insert key-values that you want to reference in your message here.
                                          example:
                                            firstName: Hugh
                                            lastName: Mann
                                            purchase: shoes
                                example:
                                  - id: wiley_coyote
                                    data:
                                      voucher_code: FESwYm
                                  - email: road@runner.net
                                    data:
                                      voucher_code: cYm6XJ
                          - type: object
                            properties:
                              data:
                                type: object
                                description: Contains information you want to use to populate your broadcast.
                                additionalProperties:
                                  x-additionalPropertiesName: Broadcast liquid data
                                  description: Insert key-values that you want to reference in your message here.
                                example:
                                  headline: Roadrunner spotted in Albuquerque!
                                  date: 1511315635
                                  text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                              email_add_duplicates:
                                type: boolean
                                default: false
                                description: an email address associated with more than one profile id is an error.
                              email_ignore_missing:
                                type: boolean
                                default: false
                                description: If false a missing email address is an error.
                              id_ignore_missing:
                                type: boolean
                                default: false
                                description: If false, a missing customer ID is an error.
                      - title: Data file URL
                        description: |
                          The URL of a data file containing per-user data, each line containing a json map with either `id` and `data` or `email` and `data` keys. **When you trigger a broadcast, the people represented by `id` and `email` must already exist in your workspace.** Requests to trigger a broadcast cannot create new people.
                        allOf:
                          - type: object
                            required:
                              - data_file_url
                            properties:
                              data_file_url:
                                description: |
                                  The URL of a data file containing per-user data, each line containing a json map with either `id` and `data` or `email` and `data` keys.
                                type: string
                                format: url
                                example: https://myFile.example.com
                          - type: object
                            properties:
                              data:
                                type: object
                                description: Contains information you want to use to populate your broadcast.
                                additionalProperties:
                                  x-additionalPropertiesName: Broadcast liquid data
                                  description: Insert key-values that you want to reference in your message here.
                                example:
                                  headline: Roadrunner spotted in Albuquerque!
                                  date: 1511315635
                                  text: We received reports of a roadrunner in your immediate area! Head to your dashboard to view more information!
                              email_add_duplicates:
                                type: boolean
                                default: false
                                description: an email address associated with more than one profile id is an error.
                              email_ignore_missing:
                                type: boolean
                                default: false
                                description: If false a missing email address is an error.
                              id_ignore_missing:
                                type: boolean
                                default: false
                                description: If false, a missing customer ID is an error.
                    description: Contains information about the audience for the campaign and additional audience data contained in the trigger.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{broadcast_id}/triggers/{trigger_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{broadcast_id}/triggers/{trigger_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{broadcast_id}/triggers/{trigger_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{broadcast_id}/triggers/{trigger_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{broadcast_id}/triggers/{trigger_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{broadcast_id}/triggers/{trigger_id}/errors:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The ID of the broadcast that you want to return information about.
        schema:
          type: integer
      - name: trigger_id
        in: path
        required: true
        description: The ID of the campaign trigger that you want to return information for.
        schema:
          type: integer
          example: 3
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
    get:
      operationId: broadcastErrors
      security:
        - Bearer-Auth-(App-API-Key): []
      tags:
        - Broadcasts
      summary: Get broadcast error descriptions
      description: |
        If your broadcast produced validation errors, this endpoint can help you better understand what went wrong. Broadcast errors are generally issues in your broadcast audience and associated.
      responses:
        '200':
          description: Returns an array of errors.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    description: 'A list of errors in the format `line undefined<x>: undefined<error text>` to help you troubleshoot errors associated with your audience or data file.'
                    type: array
                    items:
                      type: string
                  next:
                    type: integer
                    description: Indicates the next page of results. Add `?start=undefined<next_value>` to the request to get the next page of results.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
        '404':
          description: The campaign ID or trigger ID from your request do not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{broadcast_id}/triggers/{trigger_id}/errors \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{broadcast_id}/triggers/{trigger_id}/errors",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{broadcast_id}/triggers/{trigger_id}/errors")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{broadcast_id}/triggers/{trigger_id}/errors", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{broadcast_id}/triggers/{trigger_id}/errors\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/send/email:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    post:
      summary: Send a transactional email
      operationId: sendEmail
      security:
        - Bearer-Auth-(App-API-Key): []
      description: |
        Send a transactional email. You can send a with a template using a `transactional_message_id` or send your own `body`, `subject`, and `from` values at send time.

        If you want to send your own body, subject, and from values to populate your message at send time, we recommend that you pass a `transactional_message_id` anyway, in which case your body, subject, and from values will override the template. 

        You can find your `transactional_message_id` from the code sample in the **Overview** tab for your transactional message in the user interface, or you can look up a list of your transactional messages through the [App API](#tag/Transactional).

        Customer.io attributes metrics to a `transactional_message_id`; if you don't provide a `transactional_message_id`, we attribute metrics to `"transactional_message_id": 1`. You can create empty transactional messages in the UI and override the `body`, `subject`, and `from` values for at send time. This provides flexibility in your integration and lets you organize metrics (rather than gathering metrics for all of your transactional messages against a single ID).
      tags:
        - Transactional
      requestBody:
        content:
          application/json:
            schema:
              description: The payload of a transactional message.
              oneOf:
                - title: With template
                  description: Send a transactional message that you set up in the Customer.io dashboard.
                  allOf:
                    - type: object
                      required:
                        - transactional_message_id
                      properties:
                        transactional_message_id:
                          type: integer
                          description: The transactional message that you want to send. When you set up a transactional message in Customer.io, it functions as a template that you call by ID.
                          example: 44
                    - type: object
                      properties:
                        body:
                          type: string
                          description: The body of your message. This overrides the body of the transactional template (referenced by `transactional_message_id`).
                        subject:
                          type: string
                          description: The subject line for your message. This overrides the subject of the transactional template (referenced by `transactional_message_id`).
                        from:
                          type: string
                          description: The address that your email is from. This address must be verified by Customer.io. This overrides the from address set within the transactional template (referenced by `transactional_message_id`). You can include a display/friendly name in your from address in the format `Person undefined<person@example.com>`.
                          example: support@example.com
                    - type: object
                      required:
                        - to
                        - identifiers
                      properties:
                        to:
                          type: string
                          description: The message recipient(s). Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
                          example: cool.person@example.com
                        identifiers:
                          description: Identifies the person represented by your transactional message by one of, and only one of, `id`, `email`, or `cio_id`.
                          oneOf:
                            - title: id
                              type: object
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: |
                                    The identifier for the person represented by the transactional message. **NOTE**: If your workspace identifies people by email, use the `email` identifier instead.
                                  example: 12345
                            - title: email
                              type: object
                              required:
                                - email
                              properties:
                                email:
                                  type: string
                                  description: The identifier for the person represented by the transactional message. Use this option if your workspace identifies people by email rather than by `id`.
                                  example: cool.person@example.com
                            - title: cio_id
                              type: object
                              required:
                                - cio_id
                              properties:
                                cio_id:
                                  type: string
                                  description: A unique, immutable identifier for a person, set by Customer.io when you add a person.
                                  example: 3000001
                        message_data:
                          type: object
                          description: An object containing the key-value pairs referenced using liquid in your message.
                          additionalProperties:
                            x-additionalPropertiesName: Liquid Data
                            description: Insert key-values that you want to reference in your message here.
                          example:
                            password_reset_token: abcde-12345-fghij-d888
                            account_id: 123dj
                        send_at:
                          type: integer
                          description: A unix timestamp determining when the message will be sent. The timestamp can be up to 90 days in the future. If this value is in the past, your message is sent immediately.
                        bcc:
                          type: string
                          description: Blind copy message recipients. Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
                          example: bcc@example.com
                        fake_bcc:
                          type: boolean
                          description: |
                            If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                        reply_to:
                          type: string
                          description: The address that recipients can reply to, if different from the `from` address.
                          example: replyto@example.com
                        preheader:
                          type: string
                          description: Also known as "preview text", this is the block block of text that users see next to, or underneath, the subject line in their inbox.
                        plaintext_body:
                          type: string
                          description: By default, we generate a plaintext version of your message body for each delivery. Use this key to override the default plain text body.
                        attachments:
                          type: array
                          description: |
                            A dictionary of attachments where the filename is the key and the value is the base64-encoded contents. The total size of all attachments must be less than 2 MB. Some filetype extensions are restricted.
                          items:
                            type: object
                            additionalProperties:
                              type: string
                              format: base64
                              x-additionalPropertiesName: Attachment Names
                              x-doNotRender: true
                        headers:
                          type: array
                          description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                          items:
                            type: object
                            additionalProperties:
                              type: string
                              x-additionalPropertiesName: Header Names
                              x-doNotRender: true
                        disable_message_retention:
                          type: boolean
                          default: false
                          description: If true, the message body is not retained in delivery history. Setting this value overrides the value set in the settings of your `transactional_message_id`.
                        send_to_unsubscribed:
                          type: boolean
                          default: true
                          description: If false, your message is not sent to unsubscribed recipients. Setting this value overrides the value set in the settings of your `transactional_message_id`.
                        tracked:
                          type: boolean
                          description: If true, Customer.io tracks opens and link clicks in your message.
                          default: true
                        queue_draft:
                          type: boolean
                          description: If true, your transactional message is held as a draft in Customer.io and not sent directly to your audience. You must go to the Deliveries and Drafts page to send your message.
                          default: false
                        disable_css_preprocessing:
                          type: boolean
                          description: Set to `true` to disable CSS preprocessing. This setting overrides the CSS preprocessing setting on the `transactional_message_id` as set in the user interface. Transactional emails have CSS preprocessing enabled by default.
                          example: false
                          default: false
                  example:
                    transactional_message_id: 44
                    to: cool.person@example.com
                    identifiers:
                      id: 12345
                    message_data:
                      password_reset_token: abcde-12345-fghij-d888
                      account_id: 123dj
                    bcc: bcc@example.com
                    disable_message_retention: false
                    send_to_unsubscribed: true
                    tracked: true
                    queue_draft: false
                    disable_css_preprocessing: true
                - title: Without template
                  description: Create your own message from scratch.
                  allOf:
                    - type: object
                      required:
                        - body
                        - subject
                        - from
                      properties:
                        body:
                          type: string
                          description: The body of your message.
                          example: Your temporary password is {{message_data.password_reset_token}}
                        subject:
                          type: string
                          description: The subject line for your message.
                          example: Reset your password!
                        from:
                          type: string
                          description: The address that your email is from. This address must be verified by Customer.io. You can include a display/friendly name in your from address in the format `Person undefined<person@example.com>`.
                          example: support@example.com
                    - type: object
                      required:
                        - to
                        - identifiers
                      properties:
                        to:
                          type: string
                          description: The message recipient(s). Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
                          example: cool.person@example.com
                        identifiers:
                          description: Identifies the person represented by your transactional message by one of, and only one of, `id`, `email`, or `cio_id`.
                          oneOf:
                            - title: id
                              type: object
                              required:
                                - id
                              properties:
                                id:
                                  type: string
                                  description: |
                                    The identifier for the person represented by the transactional message. **NOTE**: If your workspace identifies people by email, use the `email` identifier instead.
                                  example: 12345
                            - title: email
                              type: object
                              required:
                                - email
                              properties:
                                email:
                                  type: string
                                  description: The identifier for the person represented by the transactional message. Use this option if your workspace identifies people by email rather than by `id`.
                                  example: cool.person@example.com
                            - title: cio_id
                              type: object
                              required:
                                - cio_id
                              properties:
                                cio_id:
                                  type: string
                                  description: A unique, immutable identifier for a person, set by Customer.io when you add a person.
                                  example: 3000001
                        message_data:
                          type: object
                          description: An object containing the key-value pairs referenced using liquid in your message.
                          additionalProperties:
                            x-additionalPropertiesName: Liquid Data
                            description: Insert key-values that you want to reference in your message here.
                          example:
                            password_reset_token: abcde-12345-fghij-d888
                            account_id: 123dj
                        send_at:
                          type: integer
                          description: A unix timestamp determining when the message will be sent. The timestamp can be up to 90 days in the future. If this value is in the past, your message is sent immediately.
                        bcc:
                          type: string
                          description: Blind copy message recipients. Supports multiple addresses separated by commas. Your request can contain up to 15 total recipients between the `to` and `bcc` keys.
                          example: bcc@example.com
                        fake_bcc:
                          type: boolean
                          description: |
                            If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                        reply_to:
                          type: string
                          description: The address that recipients can reply to, if different from the `from` address.
                          example: replyto@example.com
                        preheader:
                          type: string
                          description: Also known as "preview text", this is the block block of text that users see next to, or underneath, the subject line in their inbox.
                        plaintext_body:
                          type: string
                          description: By default, we generate a plaintext version of your message body for each delivery. Use this key to override the default plain text body.
                        attachments:
                          type: array
                          description: |
                            A dictionary of attachments where the filename is the key and the value is the base64-encoded contents. The total size of all attachments must be less than 2 MB. Some filetype extensions are restricted.
                          items:
                            type: object
                            additionalProperties:
                              type: string
                              format: base64
                              x-additionalPropertiesName: Attachment Names
                              x-doNotRender: true
                        headers:
                          type: array
                          description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                          items:
                            type: object
                            additionalProperties:
                              type: string
                              x-additionalPropertiesName: Header Names
                              x-doNotRender: true
                        disable_message_retention:
                          type: boolean
                          default: false
                          description: If true, the message body is not retained in delivery history. Setting this value overrides the value set in the settings of your `transactional_message_id`.
                        send_to_unsubscribed:
                          type: boolean
                          default: true
                          description: If false, your message is not sent to unsubscribed recipients. Setting this value overrides the value set in the settings of your `transactional_message_id`.
                        tracked:
                          type: boolean
                          description: If true, Customer.io tracks opens and link clicks in your message.
                          default: true
                        queue_draft:
                          type: boolean
                          description: If true, your transactional message is held as a draft in Customer.io and not sent directly to your audience. You must go to the Deliveries and Drafts page to send your message.
                          default: false
                        disable_css_preprocessing:
                          type: boolean
                          description: Set to `true` to disable CSS preprocessing. This setting overrides the CSS preprocessing setting on the `transactional_message_id` as set in the user interface. Transactional emails have CSS preprocessing enabled by default.
                          example: false
                          default: false
                  example:
                    from: Support undefined<support@example.com>
                    subject: Your password reset request!
                    body: Your temporary password is {{message_data.password_reset_token}}
                    to: cool.person@example.com
                    identifiers:
                      id: 12345
                    message_data:
                      password_reset_token: abcde-12345-fghij-d888
                      account_id: 123dj
                    bcc: bcc@example.com
                    disable_message_retention: false
                    send_to_unsubscribed: true
                    tracked: true
                    queue_draft: false
                    disable_css_preprocessing: true
      responses:
        '200':
          description: Returns a unique ID for the delivery.
          content:
            application/json:
              schema:
                type: object
                properties:
                  delivery_id:
                    type: string
                    description: A unique identifier for the message.
                  queued_at:
                    type: integer
                    format: unix timestamp
                    description: The date-time when the message is sent.
        '400':
          description: The request was malformed.
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    description: Contains errors.
                    properties:
                      error:
                        type: string
                        description: Describes the error that caused your request to fail.
        '429':
          description: Your request is over the 100-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://api.customer.io/v1/send/email \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"transactional_message_id":44,"to":"cool.person@example.com","identifiers":{"id":12345},"message_data":{"password_reset_token":"abcde-12345-fghij-d888","account_id":"123dj"},"bcc":"bcc@example.com","disable_message_retention":false,"send_to_unsubscribed":true,"tracked":true,"queue_draft":false,"disable_css_preprocessing":true}'
        - lang: Node + Native
          source: |
            const { APIClient, SendEmailRequest, RegionUS } = require("customerio-node");
            let api = new APIClient('app-key', { region: RegionUS });

            const request = new SendEmailRequest({
              to: "person@example.com",
              transactional_message_id: "3",
              message_data: {
                name: "Person",
                items: {
                  name: "shoes",
                  price: "59.99",
                },
                products: [],
              },
              identifiers: {
                id: "2",
              },
            });

            // (optional) attach a file to your message.
            request.attach("receipt.pdf", fs.readFileSync("receipt.pdf"));

            api.sendEmail(request)
              .then(res => console.log(res))
              .catch(err => console.log(err.statusCode, err.message))
        - lang: Ruby + Native
          source: |
            require "customerio"

            client = Customerio::APIClient.new("your API key", region: Customerio::Regions::US)

            request = Customerio::SendEmailRequest.new(
              to: "person@example.com",
              transactional_message_id: "3",
              message_data: {
                name: "Person",
                items: {
                  name: "shoes",
                  price: "59.99",
                },
                products: [],
              },
              identifiers: {
                id: "2",
              },
            )

            file = File.open('undefined<file-path>', 'r')
            request.attach("filename", file.read)

            begin
              response = client.send_email(request)
              puts response
            rescue Customerio::InvalidResponse => e
              puts e.code, e.message
            end
        - lang: Python + Python3
          source: |
            from customerio import APIClient, Regions, SendEmailRequest
            client = APIClient("your API key", region=Regions.US)

            request = SendEmailRequest(
              to="person@example.com",
              transactional_message_id="3",
              message_data={
                "name": "person",
                "items": [
                  {
                    "name": "shoes",
                    "price": "59.99",
                  },
                ]
              },
              identifiers={
                "id": "2",
              }
            )

            with open("path to file", "rb") as f:
              request.attach('receipt.pdf', f.read())

            response = client.send_email(request)
            print(response)
        - lang: Go + Native
          source: |
            import "github.com/customerio/go-customerio/v2"

            client := customerio.NewAPIClient("your API key", customerio.WithRegion(customerio.RegionUS));

            request := customerio.SendEmailRequest{
              To: "person@example.com",
              TransactionalMessageID: "3",
              MessageData: map[string]interface{}{
                "name": "Person",
                "items": map[string]interface{}{
                  "name": "shoes",
                  "price": "59.99",
                },
                "products": []interface{}{},
              },
              Identifiers: map[string]string{
                "id": "example1",
              },
            }

            // (optional) attach a file to your message.
            f, err := os.Open("receipt.pdf")
            if err != nil {
              fmt.Println(err)
            }
            request.Attach("receipt.pdf", f)

            body, err := client.SendEmail(context.Background(), &request)
            if err != nil {
              fmt.Println(err)
            }

            fmt.Println(body)
  /v1/activities:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      operationId: listActivities
      parameters:
        - name: start
          in: query
          required: false
          description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
          schema:
            type: string
        - name: type
          description: The type of activity you want to search for.
          in: query
          required: false
          schema:
            description: The activity type.
            type: string
            enum:
              - page
              - event
              - attribute_change
              - failed_attribute_change
              - stripe_event
              - drafted_email
              - failed_email
              - dropped_email
              - sent_email
              - spammed_email
              - bounced_email
              - delivered_email
              - triggered_email
              - opened_email
              - clicked_email
              - converted_email
              - unsubscribed_email
              - attempted_email
              - undeliverable_email
              - device_change
              - attempted_action
              - drafted_action
              - sent_action
              - delivered_action
              - bounced_action
              - failed_action
              - converted_action
              - undeliverable_action
              - opened_action
              - secondary:dropped_email
              - secondary:spammed_email
              - secondary:bounced_email
              - secondary:delivered_email
              - secondary:opened_email
              - secondary:clicked_email
              - secondary:failed_email
            example: sent_email
        - name: name
          in: query
          description: The name of the event or attribute you want to return.
          required: false
          schema:
            type: string
            example: something_happened
        - name: deleted
          in: query
          description: If true, return results for deleted people.
          required: false
          schema:
            type: boolean
            default: false
        - name: customer_id
          required: false
          in: query
          description: |
            The `identifier` of the person you want to look up. By default, this is a person's `id`. You can use the `id_type` parameter to look up a person by `email` or `cio_id`.

            If you use a person's `cio_id`, you must prefix the value value with `cio_` when using it to find or reference a person (i.e. `cio_03000010` for a `cio_id` value of 03000010).
          schema:
            type: string
        - name: id_type
          required: false
          in: query
          description: The type of `customer_id` you want to use to reference a person. If you don't provide this parameter, we assume that the `customer_id` in your request is a person's `id`.
          schema:
            type: string
            enum:
              - id
              - email
              - cio_id
        - name: limit
          in: query
          required: false
          description: The maximum number of results you want to retrieve per page.
          schema:
            type: integer
            default: 10
            maximum: 100
      summary: List activities
      security:
        - Bearer-Auth-(App-API-Key): []
      description: This endpoint returns a list of "activities" for people, similar to your workspace's Activity Logs. This endpoint is guaranteed to return activity history within the past 30 days. It _might_ return data older than 30 days in some circumstances, but activites older than 30 days are not guaranteed.
      tags:
        - Activities
      responses:
        '200':
          description: Returns an array of `activities`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  activities:
                    type: array
                    items:
                      type: object
                      properties:
                        customer_id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        customer_identifiers:
                          type: object
                          description: |
                            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                            We recommend that you use this object rather than the less descriptive `customer_id`.
                          required:
                            - email
                            - id
                            - cio_id
                          properties:
                            email:
                              type: string
                              nullable: true
                              format: email
                              description: A person's email address, if set.
                              example: cool.person@example.com
                            id:
                              type: string
                              nullable: true
                              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                              example: 2
                            cio_id:
                              type: string
                              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                              example: 786433
                        data:
                          oneOf:
                            - title: Message delivery
                              type: object
                              properties:
                                delivered:
                                  type: integer
                                  format: unix timestamp
                                  description: The date-time when the message was delivered, if applicable.
                                  nullable: true
                                delivery_id:
                                  type: string
                                  description: The message ID.
                                opened:
                                  type: boolean
                                  nullable: true
                                  description: Indicates whether or not a customer opened a message, if the message was delivered.
                              example:
                                delivery_id: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                opened: null
                                delivered: null
                            - title: Attribute change
                              description: The name of the object is the attribute that changed.
                              type: object
                              additionalProperties:
                                x-additionalPropertyName: Attribute Name
                                type: object
                                properties:
                                  from:
                                    type: string
                                    description: The old attribute value. If empty, the customer probably didn't bear the attribute before this action.
                                  to:
                                    type: string
                                    description: The new attribute value.
                              example:
                                email:
                                  from: newPerson@example.com
                                  to: newPerson@customer.io
                        delivery_id:
                          type: string
                          description: The message ID.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        delivery_type:
                          type: string
                          description: The recipient device, if applicable.
                          enum:
                            - ios
                            - android
                            - email
                            - phone
                          example: email
                        id:
                          description: The identifier for the action.
                          type: string
                          example: 01AK4N8V8G8KVA4HN8Y50CCZ59
                        timestamp:
                          type: integer
                          format: unix timestamp
                          description: The date and time when the action occurred.
                          example: 1397566226
                        type:
                          description: The activity type.
                          type: string
                          enum:
                            - page
                            - event
                            - attribute_change
                            - failed_attribute_change
                            - stripe_event
                            - drafted_email
                            - failed_email
                            - dropped_email
                            - sent_email
                            - spammed_email
                            - bounced_email
                            - delivered_email
                            - triggered_email
                            - opened_email
                            - clicked_email
                            - converted_email
                            - unsubscribed_email
                            - attempted_email
                            - undeliverable_email
                            - device_change
                            - attempted_action
                            - drafted_action
                            - sent_action
                            - delivered_action
                            - bounced_action
                            - failed_action
                            - converted_action
                            - undeliverable_action
                            - opened_action
                            - secondary:dropped_email
                            - secondary:spammed_email
                            - secondary:bounced_email
                            - secondary:delivered_email
                            - secondary:opened_email
                            - secondary:clicked_email
                            - secondary:failed_email
                          example: sent_email
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url 'https://api.customer.io/v1/activities?start=SOME_STRING_VALUE&type=sent_email&name=something_happened&deleted=SOME_BOOLEAN_VALUE&customer_id=SOME_STRING_VALUE&id_type=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE' \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/activities?start=SOME_STRING_VALUE&type=sent_email&name=something_happened&deleted=SOME_BOOLEAN_VALUE&customer_id=SOME_STRING_VALUE&id_type=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/activities?start=SOME_STRING_VALUE&type=sent_email&name=something_happened&deleted=SOME_BOOLEAN_VALUE&customer_id=SOME_STRING_VALUE&id_type=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/activities?start=SOME_STRING_VALUE&type=sent_email&name=something_happened&deleted=SOME_BOOLEAN_VALUE&customer_id=SOME_STRING_VALUE&id_type=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/activities?start=SOME_STRING_VALUE&type=sent_email&name=something_happened&deleted=SOME_BOOLEAN_VALUE&customer_id=SOME_STRING_VALUE&id_type=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/broadcasts:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      summary: List broadcasts
      operationId: listBroadcasts
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of your broadcasts and associated metadata.
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns an array of broadcasts.
          content:
            application/json:
              schema:
                type: object
                properties:
                  broadcasts:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        name:
                          type: string
                          description: The name of the broadcast.
                          readOnly: true
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        updated:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was last updated.
                          example: 1552341937
                        active:
                          type: boolean
                          description: If true, the broadcast is active.
                        msg_template_ids:
                          type: array
                          deprecated: true
                          description: Indicates the message template(s) used in this broadcast.
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The identifier for the template.
                              type:
                                type: string
                                description: The type of template.
                                enum:
                                  - email
                                  - webhook
                                  - push
                                  - sms
                                  - slack
                        actions:
                          type: array
                          description: A list of actions used by the broadcast.
                          items:
                            type: object
                            properties:
                              id:
                                type: integer
                                description: The identifier for the action.
                              type:
                                type: string
                                description: The type of action.
                                enum:
                                  - email
                                  - webhook
                                  - push
                                  - sms
                                  - slack
                        tags:
                          type: array
                          description: An array of tags you set on this broadcast.
                          items:
                            type: string
                      example:
                        id: 2
                        deduplicate_id: '2:1520467200'
                        created: 1520467200
                        type: triggered_broadcast
                        updated: 1520467200
                        name: basic
                        active: true
                        actions:
                          - id: 3
                            type: email
                          - id: 4
                          - type: webhook
                        tags: nil
                        first_started: 1520467200
                        created_by: ExamplePerson
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/broadcasts \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/broadcasts", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/broadcasts/{broadcast_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The identifier of a broadcast.
        schema:
          type: integer
    get:
      operationId: getBroadcast
      summary: Get a broadcast
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metadata for an individual broadcast.
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns metadata for the broadcast.
          content:
            application/json:
              schema:
                type: object
                properties:
                  broadcast:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The identifier for a broadcast.
                        example: 2
                        nullable: true
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the broadcast.
                        readOnly: true
                      created:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      active:
                        type: boolean
                        description: If true, the broadcast is active.
                      msg_template_ids:
                        type: array
                        deprecated: true
                        description: Indicates the message template(s) used in this broadcast.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The identifier for the template.
                            type:
                              type: string
                              description: The type of template.
                              enum:
                                - email
                                - webhook
                                - push
                                - sms
                                - slack
                      actions:
                        type: array
                        description: A list of actions used by the broadcast.
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The identifier for the action.
                            type:
                              type: string
                              description: The type of action.
                              enum:
                                - email
                                - webhook
                                - push
                                - sms
                                - slack
                      tags:
                        type: array
                        description: An array of tags you set on this broadcast.
                        items:
                          type: string
                    example:
                      id: 2
                      deduplicate_id: '2:1520467200'
                      created: 1520467200
                      type: triggered_broadcast
                      updated: 1520467200
                      name: basic
                      active: true
                      actions:
                        - id: 3
                          type: email
                        - id: 4
                        - type: webhook
                      tags: nil
                      first_started: 1520467200
                      created_by: ExamplePerson
        '404':
          description: The broadcast you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/broadcasts/{broadcast_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts/{broadcast_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts/{broadcast_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/broadcasts/{broadcast_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts/{broadcast_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/broadcasts/{broadcast_id}/metrics:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The identifier of a broadcast.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      operationId: broadcastMetrics
      summary: Get metrics for a broadcast
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of metrics for an individual broadcast in `steps` (days, weeks, etc). We return metrics from oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns broadcast metrics by `series` (with increments are based on the `period` and `step` in your request) for the broadcast.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    type: object
                    properties:
                      series:
                        allOf:
                          - type: object
                            description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            properties:
                              2xx:
                                type: array
                                items:
                                  type: integer
                                description: 2xx responses by period, representative of webhook performance.
                              3xx:
                                type: array
                                items:
                                  type: integer
                                description: 3xx responses by period, representative of webhook performance.
                              4xx:
                                type: array
                                items:
                                  type: integer
                                description: 4xx responses by period, representative of webhook performance.
                              5xx:
                                type: array
                                items:
                                  type: integer
                                description: 5xx responses by period, representative of webhook performance.
                          - description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            type: object
                            properties:
                              attempted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `attempted` messages.
                              bounced:
                                type: array
                                items:
                                  type: integer
                                description: The number of `bounced` messages.
                              clicked:
                                type: array
                                items:
                                  type: integer
                                description: The number of `clicked` messages.
                              converted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `converted` messages.
                              created:
                                type: array
                                items:
                                  type: integer
                                description: The number of `created` messages.
                              delivered:
                                type: array
                                items:
                                  type: integer
                                description: The number of `delivered` messages.
                              drafted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `drafted` messages.
                              dropped:
                                type: array
                                items:
                                  type: integer
                                description: The number of `dropped` messages.
                              failed:
                                type: array
                                items:
                                  type: integer
                                description: The number of `failed` messages.
                              opened:
                                type: array
                                items:
                                  type: integer
                                description: The number of `opened` messages.
                              sent:
                                type: array
                                items:
                                  type: integer
                                description: The number of sent messages.
                              spammed:
                                type: array
                                items:
                                  type: integer
                                description: The number of spam complaints.
                              undeliverable:
                                type: array
                                items:
                                  type: integer
                                description: The number of `undeliverable` messages.
                              unsubscribed:
                                type: array
                                items:
                                  type: integer
                                description: The number of unsubscribes attributed to the campaign or message.
        '404':
          description: The broadcast you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/broadcasts/{broadcast_id}/metrics \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts/{broadcast_id}/metrics",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts/{broadcast_id}/metrics")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/broadcasts/{broadcast_id}/metrics", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts/{broadcast_id}/metrics\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/broadcasts/{broadcast_id}/metrics/links:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The identifier of a broadcast.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: unique
        in: query
        required: false
        description: If true, the response contains only unique customer results, i.e. a customer who clicks a link twice is only counted once. If false, the response contains the total number of results without regard to uniqueness.
        schema:
          type: boolean
          default: false
    get:
      operationId: broadcastLinks
      summary: Get broadcast link metrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metrics for link clicks within a broadcast, both in total and in `series` periods (days, weeks, etc). `series` metrics are ordered oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns an array of link objects. Each object represents a different link in your broadcast and contains independent metrics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        link:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the link.
                              example: 1234
                            href:
                              type: string
                              description: The link destination—a URL, mailto, etc.
                              example: https://customer.io/docs
                        metric:
                          type: object
                          description: Contains metrics for the link.
                          properties:
                            series:
                              type: object
                              properties:
                                clicked:
                                  type: array
                                  description: An array of results from oldest to newest, where each result indicates a period.
                                  items:
                                    type: integer
                                  example:
                                    - 1
                                    - 3
                                    - 5
                                    - 7
        '404':
          description: The broadcast you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/broadcasts/{broadcast_id}/metrics/links \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts/{broadcast_id}/metrics/links",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts/{broadcast_id}/metrics/links")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/broadcasts/{broadcast_id}/metrics/links", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts/{broadcast_id}/metrics/links\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/broadcasts/{broadcast_id}/actions:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The identifier of a broadcast.
        schema:
          type: integer
    get:
      operationId: broadcastActions
      summary: List broadcast actions
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns the actions that occur as a part of a broadcast.
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns broadcast `actions`. Each object represents an individual variant for this broadcast.
          content:
            application/json:
              schema:
                type: object
                properties:
                  actions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        name:
                          type: string
                          description: The name of the action, if it exists.
                          readOnly: true
                          example: Opening Message
                        layout:
                          type: string
                          description: The layout used for the action, if it exists.
                          readOnly: true
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        updated:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was last updated.
                          example: 1552341937
                        body:
                          type: string
                          description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
                        type:
                          type: string
                          description: The type of action.
                          enum:
                            - email
                            - twilio
                            - urban_airship
                            - slack
                            - push
                          readOnly: true
                        sending_state:
                          type: string
                          enum:
                            - automatic
                            - draft
                            - 'off'
                          description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
                        from:
                          type: string
                          description: The address that the message is from, relevant if the action `type` is `email`.
                          readOnly: true
                          example: sentFrom@example.com
                        from_id:
                          type: integer
                          description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                          example: 1
                        reply_to:
                          type: string
                          description: The address that receives replies for the message, if applicable.
                          readOnly: true
                          example: replyto@example.com
                        reply_to_id:
                          type: integer
                          description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                          nullable: true
                          example: 38
                        preprocessor:
                          type: string
                          description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                          enum:
                            - premailer
                          readOnly: true
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: '{{customer.email}}'
                        subject:
                          type: string
                          description: The subject line for an `email` action.
                          example: Did you get that thing I sent you?
                        bcc:
                          readOnly: true
                          description: The blind-copy address(es) for this action.
                          type: string
                        fake_bcc:
                          readOnly: true
                          type: boolean
                          description: |
                            If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                        preheader_text:
                          type: string
                          description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                          readOnly: true
                        headers:
                          type: array
                          description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                          items:
                            type: object
                            additionalProperties:
                              type: string
                              x-additionalPropertiesName: Header Names
                              x-doNotRender: true
        '404':
          description: The broadcast you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/broadcasts/{broadcast_id}/actions \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts/{broadcast_id}/actions",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts/{broadcast_id}/actions")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/broadcasts/{broadcast_id}/actions", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts/{broadcast_id}/actions\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/broadcasts/{broadcast_id}/messages:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The identifier of a broadcast.
        schema:
          type: integer
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
      - name: metric
        in: query
        required: false
        description: Determines the metric(s) you want to return.
        schema:
          type: string
          enum:
            - created
            - attempted
            - sent
            - delivered
            - opened
            - clicked
            - converted
            - bounced
            - spammed
            - unsubscribed
            - dropped
            - failed
            - undeliverable
      - name: state
        in: query
        required: false
        description: The state of a broadcast.
        schema:
          type: string
          enum:
            - failed
            - sent
            - drafted
            - attempted
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      operationId: broadcastMessages
      summary: Get message metadata for a broadcast
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metadata for the messages sent by broadcast. Provide query parameters to refine the metrics you want to return.
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns an array of `messages`. Each object represents a different message in your broadcast.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      description: Describes an individual message delivery. The object contains keys for all possible parents of the message (`newsletter_id`, `broadcast_id`, etc) but only the parents of the delivery are populated. Other parent IDs are null.
                      properties:
                        id:
                          description: The identifier for a delivery—the instance of a message intended for an individual recipient.
                          type: string
                          readOnly: true
                          example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        message_template_id:
                          description: The identifier of the message template used to create a message.
                          type: integer
                          readOnly: true
                          deprecated: true
                        customer_id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        customer_identifiers:
                          type: object
                          description: |
                            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                            We recommend that you use this object rather than the less descriptive `customer_id`.
                          required:
                            - email
                            - id
                            - cio_id
                          properties:
                            email:
                              type: string
                              nullable: true
                              format: email
                              description: A person's email address, if set.
                              example: cool.person@example.com
                            id:
                              type: string
                              nullable: true
                              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                              example: 2
                            cio_id:
                              type: string
                              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                              example: 786433
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: '{{customer.email}}'
                        subject:
                          type: string
                          description: The subject line for an `email` action.
                          example: Did you get that thing I sent you?
                        metrics:
                          type: object
                          description: Metrics for an individual instance of a message; each item in the object represents the timestamp when a message achieved a particular metric. This object only contains metrics that have been recorded.
                          properties:
                            bounced:
                              type: integer
                              description: The timestamp when the message `bounced`.
                            clicked:
                              type: integer
                              description: The timestamp when the message was `clicked`.
                            converted:
                              type: integer
                              description: The timestamp when the message was `converted`.
                            created:
                              type: integer
                              description: The timestamp when the message was `created`.
                            delivered:
                              type: integer
                              description: The timestamp when the message was `delivered`.
                            drafted:
                              type: integer
                              description: The timestamp when the message was `drafted`.
                            dropped:
                              type: integer
                              description: The timestamp when the message was `dropped`.
                            failed:
                              type: integer
                              description: The timestamp when the message `failed`.
                            opened:
                              type: integer
                              description: The timestamp when the message was `opened`.
                            sent:
                              type: integer
                              description: The timestamp when the message was `sent`.
                            spammed:
                              type: integer
                              description: The timestamp when the message was marked as spam.
                            undeliverable:
                              type: integer
                              description: The timestamp when the message became `undeliverable`.
                            unsubscribed:
                              type: integer
                              description: The timestamp when a person unsubscribed based on this message.
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        failure_message:
                          type: string
                          description: Explains why a message failed, if applicable.
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          readOnly: true
                          nullable: true
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          readOnly: true
                          example: 1
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        type:
                          description: The type of message/action.
                          type: string
                          enum:
                            - email
                            - webhook
                            - twilio
                            - urban_airship
                            - slack
                            - push
                          readOnly: true
                          example: email
                        forgotten:
                          type: boolean
                          description: If true message contents are not retained by Customer.io.
                      example:
                        id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=:1619137768
                        msg_template_id: 43
                        action_id: 215
                        customer_id: null
                        recipient: person@example.com
                        subject: Did you get that thing I sent you?
                        metrics:
                          delivered: 1619137768
                          sent: 1619137768
                        created: 1619137767
                        failure_message: null
                        newsletter_id: null
                        content_id: null
                        campaign_id: 23
                        broadcast_id: null
                        type: email
                        forgotten: false
                    example:
                      - id: dgOq6QWq6QUDAAF22PaOyFVqVxHY3rI5fsg=
                        deduplicate_id: dgOq6QWq6QUDAAF22PaOyFVqVxHY3rI5fsg=:1609957872
                        msg_template_id: 0
                        action_id: 196
                        customer_id: 1a55d8d1-b13d-4f1f-858f-a93ef21e3a7d
                        customer_identifiers:
                          id: 1a55d8d1-b13d-4f1f-858f-a93ef21e3a7d
                          email: person@example.com
                          cio_id: 786433
                        recipient: person@example.com
                        subject: Did you get that thing I sent you?
                        metrics:
                          delivered: 1609957872
                          sent: 1609957832
                        created: 1609957805
                        failure_message: null
                        newsletter_id: null
                        content_id: null
                        campaign_id: null
                        broadcast_id: 94
                        type: email
                        forgotten: false
        '404':
          description: The broadcast you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/broadcasts/{broadcast_id}/messages \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts/{broadcast_id}/messages",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts/{broadcast_id}/messages")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/broadcasts/{broadcast_id}/messages", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts/{broadcast_id}/messages\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/broadcasts/{broadcast_id}/actions/{action_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The identifier of a broadcast.
        schema:
          type: integer
      - name: action_id
        in: path
        required: true
        description: The action you want to lookup or act on.
        schema:
          type: integer
    get:
      operationId: getBroadcastAction
      summary: Get a broadcast action
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns information about a specific action within a broadcast.
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns the requested broadcast `action`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    type: object
                    properties:
                      id:
                        description: The identifier for an action.
                        type: integer
                        readOnly: true
                        example: 96
                        nullable: true
                      broadcast_id:
                        type: integer
                        description: The identifier for a broadcast.
                        example: 2
                        nullable: true
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the action, if it exists.
                        readOnly: true
                        example: Opening Message
                      layout:
                        type: string
                        description: The layout used for the action, if it exists.
                        readOnly: true
                      created:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      body:
                        type: string
                        description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
                      type:
                        type: string
                        description: The type of action.
                        enum:
                          - email
                          - twilio
                          - urban_airship
                          - slack
                          - push
                        readOnly: true
                      sending_state:
                        type: string
                        enum:
                          - automatic
                          - draft
                          - 'off'
                        description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
                      from:
                        type: string
                        description: The address that the message is from, relevant if the action `type` is `email`.
                        readOnly: true
                        example: sentFrom@example.com
                      from_id:
                        type: integer
                        description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                        example: 1
                      reply_to:
                        type: string
                        description: The address that receives replies for the message, if applicable.
                        readOnly: true
                        example: replyto@example.com
                      reply_to_id:
                        type: integer
                        description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                        nullable: true
                        example: 38
                      preprocessor:
                        type: string
                        description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                        enum:
                          - premailer
                        readOnly: true
                      recipient:
                        description: The recipient address for an action.
                        type: string
                        example: '{{customer.email}}'
                      subject:
                        type: string
                        description: The subject line for an `email` action.
                        example: Did you get that thing I sent you?
                      bcc:
                        readOnly: true
                        description: The blind-copy address(es) for this action.
                        type: string
                      fake_bcc:
                        readOnly: true
                        type: boolean
                        description: |
                          If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                      preheader_text:
                        type: string
                        description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                        readOnly: true
                      headers:
                        type: array
                        description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                        items:
                          type: object
                          additionalProperties:
                            type: string
                            x-additionalPropertiesName: Header Names
                            x-doNotRender: true
        '404':
          description: The broadcast or action does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/broadcasts/{broadcast_id}/actions/{action_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts/{broadcast_id}/actions/{action_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts/{broadcast_id}/actions/{action_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/broadcasts/{broadcast_id}/actions/{action_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts/{broadcast_id}/actions/{action_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    put:
      operationId: updateBroadcastAction
      summary: Update a broadcast action
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Update the contents of a broadcast action, including the body of messages or HTTP requests.
      tags:
        - Broadcasts
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: Email / message
                  type: object
                  properties:
                    id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    campaign_id:
                      description: The identifier for a campaign.
                      type: integer
                      readOnly: true
                      example: 5
                      nullable: true
                    parent_action_id:
                      type: integer
                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                      example: 1
                    deduplicate_id:
                      type: string
                      readOnly: true
                      description: A completely unique CIO identifier.
                      example: '15:1492548073'
                    name:
                      type: string
                      description: The name of the action, if it exists.
                      readOnly: true
                      example: Opening Message
                    layout:
                      type: string
                      description: The layout used for the action, if it exists.
                      readOnly: true
                    created:
                      type: integer
                      format: unix timestamp
                      description: The date time when the referenced ID was created.
                      example: 1552341937
                    updated:
                      type: integer
                      format: unix timestamp
                      description: The date time when the referenced ID was last updated.
                      example: 1552341937
                    body:
                      type: string
                      description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
                    type:
                      type: string
                      description: The type of action.
                      enum:
                        - email
                        - twilio
                        - urban_airship
                        - slack
                        - push
                      readOnly: true
                    sending_state:
                      type: string
                      enum:
                        - automatic
                        - draft
                        - 'off'
                      description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
                    from:
                      type: string
                      description: The address that the message is from, relevant if the action `type` is `email`.
                      readOnly: true
                      example: sentFrom@example.com
                    from_id:
                      type: integer
                      description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                      example: 1
                    reply_to:
                      type: string
                      description: The address that receives replies for the message, if applicable.
                      readOnly: true
                      example: replyto@example.com
                    reply_to_id:
                      type: integer
                      description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                      nullable: true
                      example: 38
                    preprocessor:
                      type: string
                      description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                      enum:
                        - premailer
                      readOnly: true
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: '{{customer.email}}'
                    subject:
                      type: string
                      description: The subject line for an `email` action.
                      example: Did you get that thing I sent you?
                    bcc:
                      readOnly: true
                      description: The blind-copy address(es) for this action.
                      type: string
                    fake_bcc:
                      readOnly: true
                      type: boolean
                      description: |
                        If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                    preheader_text:
                      type: string
                      description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                      readOnly: true
                    headers:
                      type: array
                      description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                      items:
                        type: object
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Header Names
                          x-doNotRender: true
                - title: Webhook
                  type: object
                  properties:
                    id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    campaign_id:
                      description: The identifier for a campaign.
                      type: integer
                      readOnly: true
                      example: 5
                      nullable: true
                    parent_action_id:
                      type: integer
                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                      example: 1
                    deduplicate_id:
                      type: string
                      readOnly: true
                      description: A completely unique CIO identifier.
                      example: '15:1492548073'
                    name:
                      type: string
                      description: The name of the action, if it exists.
                      readOnly: true
                      example: Set attribute
                    layout:
                      type: string
                      description: The layout used for the action, if it exists.
                      readOnly: true
                    created:
                      type: integer
                      format: unix timestamp
                      description: The date time when the referenced ID was created.
                      example: 1552341937
                    updated:
                      type: integer
                      format: unix timestamp
                      description: The date time when the referenced ID was last updated.
                      example: 1552341937
                    body:
                      type: string
                      description: The payload for your webhook.
                      example: '{"attribute":"cool-webhook"}'
                    type:
                      type: string
                      description: The type of action.
                      enum:
                        - webhook
                      readOnly: true
                    url:
                      type: string
                      description: The URL to send a webhook to, applies to `webhook` type actions.
                      example: https://my.example.com/webhook
                    headers:
                      type: array
                      description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                      items:
                        type: object
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Header Names
                          x-doNotRender: true
                    method:
                      description: The HTTP method for your webhook.
                      type: string
                      enum:
                        - get
                        - post
                        - put
                        - delete
                        - patch
                      example: post
                    sending_state:
                      type: string
                      enum:
                        - automatic
                        - draft
                        - 'off'
                      description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
      responses:
        '200':
          description: Returns the updated broadcast action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    oneOf:
                      - title: Email / message
                        type: object
                        properties:
                          id:
                            description: The identifier for an action.
                            type: integer
                            readOnly: true
                            example: 96
                            nullable: true
                          campaign_id:
                            description: The identifier for a campaign.
                            type: integer
                            readOnly: true
                            example: 5
                            nullable: true
                          parent_action_id:
                            type: integer
                            description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                            example: 1
                          deduplicate_id:
                            type: string
                            readOnly: true
                            description: A completely unique CIO identifier.
                            example: '15:1492548073'
                          name:
                            type: string
                            description: The name of the action, if it exists.
                            readOnly: true
                            example: Opening Message
                          layout:
                            type: string
                            description: The layout used for the action, if it exists.
                            readOnly: true
                          created:
                            type: integer
                            format: unix timestamp
                            description: The date time when the referenced ID was created.
                            example: 1552341937
                          updated:
                            type: integer
                            format: unix timestamp
                            description: The date time when the referenced ID was last updated.
                            example: 1552341937
                          body:
                            type: string
                            description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
                          type:
                            type: string
                            description: The type of action.
                            enum:
                              - email
                              - twilio
                              - urban_airship
                              - slack
                              - push
                            readOnly: true
                          sending_state:
                            type: string
                            enum:
                              - automatic
                              - draft
                              - 'off'
                            description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
                          from:
                            type: string
                            description: The address that the message is from, relevant if the action `type` is `email`.
                            readOnly: true
                            example: sentFrom@example.com
                          from_id:
                            type: integer
                            description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                            example: 1
                          reply_to:
                            type: string
                            description: The address that receives replies for the message, if applicable.
                            readOnly: true
                            example: replyto@example.com
                          reply_to_id:
                            type: integer
                            description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                            nullable: true
                            example: 38
                          preprocessor:
                            type: string
                            description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                            enum:
                              - premailer
                            readOnly: true
                          recipient:
                            description: The recipient address for an action.
                            type: string
                            example: '{{customer.email}}'
                          subject:
                            type: string
                            description: The subject line for an `email` action.
                            example: Did you get that thing I sent you?
                          bcc:
                            readOnly: true
                            description: The blind-copy address(es) for this action.
                            type: string
                          fake_bcc:
                            readOnly: true
                            type: boolean
                            description: |
                              If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                          preheader_text:
                            type: string
                            description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                            readOnly: true
                          headers:
                            type: array
                            description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                            items:
                              type: object
                              additionalProperties:
                                type: string
                                x-additionalPropertiesName: Header Names
                                x-doNotRender: true
                      - title: Webhook
                        type: object
                        properties:
                          id:
                            description: The identifier for an action.
                            type: integer
                            readOnly: true
                            example: 96
                            nullable: true
                          campaign_id:
                            description: The identifier for a campaign.
                            type: integer
                            readOnly: true
                            example: 5
                            nullable: true
                          parent_action_id:
                            type: integer
                            description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                            example: 1
                          deduplicate_id:
                            type: string
                            readOnly: true
                            description: A completely unique CIO identifier.
                            example: '15:1492548073'
                          name:
                            type: string
                            description: The name of the action, if it exists.
                            readOnly: true
                            example: Set attribute
                          layout:
                            type: string
                            description: The layout used for the action, if it exists.
                            readOnly: true
                          created:
                            type: integer
                            format: unix timestamp
                            description: The date time when the referenced ID was created.
                            example: 1552341937
                          updated:
                            type: integer
                            format: unix timestamp
                            description: The date time when the referenced ID was last updated.
                            example: 1552341937
                          body:
                            type: string
                            description: The payload for your webhook.
                            example: '{"attribute":"cool-webhook"}'
                          type:
                            type: string
                            description: The type of action.
                            enum:
                              - webhook
                            readOnly: true
                          url:
                            type: string
                            description: The URL to send a webhook to, applies to `webhook` type actions.
                            example: https://my.example.com/webhook
                          headers:
                            type: array
                            description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                            items:
                              type: object
                              additionalProperties:
                                type: string
                                x-additionalPropertiesName: Header Names
                                x-doNotRender: true
                          method:
                            description: The HTTP method for your webhook.
                            type: string
                            enum:
                              - get
                              - post
                              - put
                              - delete
                              - patch
                            example: post
                          sending_state:
                            type: string
                            enum:
                              - automatic
                              - draft
                              - 'off'
                            description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
        '400':
          description: The request is malformed.
        '404':
          description: The broadcast or action does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request PUT \
              --url https://api.customer.io/v1/broadcasts/{broadcast_id}/actions/{action_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"parent_action_id":1,"created":1552341937,"updated":1552341937,"body":"string","sending_state":"automatic","from_id":1,"reply_to_id":38,"recipient":"{{customer.email}}","subject":"Did you get that thing I sent you?","headers":[{"Header Names1":"string","Header Names2":"string"}]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "PUT",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts/{broadcast_id}/actions/{action_id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              parent_action_id: 1,
              created: 1552341937,
              updated: 1552341937,
              body: 'string',
              sending_state: 'automatic',
              from_id: 1,
              reply_to_id: 38,
              recipient: '{{customer.email}}',
              subject: 'Did you get that thing I sent you?',
              headers: [{'Header Names1': 'string', 'Header Names2': 'string'}]
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts/{broadcast_id}/actions/{action_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Put.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"parent_action_id\":1,\"created\":1552341937,\"updated\":1552341937,\"body\":\"string\",\"sending_state\":\"automatic\",\"from_id\":1,\"reply_to_id\":38,\"recipient\":\"{{customer.email}}\",\"subject\":\"Did you get that thing I sent you?\",\"headers\":[{\"Header Names1\":\"string\",\"Header Names2\":\"string\"}]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"parent_action_id\":1,\"created\":1552341937,\"updated\":1552341937,\"body\":\"string\",\"sending_state\":\"automatic\",\"from_id\":1,\"reply_to_id\":38,\"recipient\":\"{{customer.email}}\",\"subject\":\"Did you get that thing I sent you?\",\"headers\":[{\"Header Names1\":\"string\",\"Header Names2\":\"string\"}]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("PUT", "/v1/broadcasts/{broadcast_id}/actions/{action_id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts/{broadcast_id}/actions/{action_id}\"\n\n\tpayload := strings.NewReader(\"{\\\"parent_action_id\\\":1,\\\"created\\\":1552341937,\\\"updated\\\":1552341937,\\\"body\\\":\\\"string\\\",\\\"sending_state\\\":\\\"automatic\\\",\\\"from_id\\\":1,\\\"reply_to_id\\\":38,\\\"recipient\\\":\\\"{{customer.email}}\\\",\\\"subject\\\":\\\"Did you get that thing I sent you?\\\",\\\"headers\\\":[{\\\"Header Names1\\\":\\\"string\\\",\\\"Header Names2\\\":\\\"string\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /broadcast/{broadcast_id}/actions/{action_id}/metrics:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The identifier of a broadcast.
        schema:
          type: integer
      - name: action_id
        in: path
        required: true
        description: The action you want to lookup or act on.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      operationId: broadcastActionMetrics
      summary: Get broadcast action metrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of metrics for an individual action both in total and in `steps` (days, weeks, etc) over a period of time. Stepped `series` metrics return from oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns action metrics by `series` (with increments are based on the `period` and `step` in your request) for the broadcast.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    type: object
                    properties:
                      series:
                        allOf:
                          - type: object
                            description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            properties:
                              2xx:
                                type: array
                                items:
                                  type: integer
                                description: 2xx responses by period, representative of webhook performance.
                              3xx:
                                type: array
                                items:
                                  type: integer
                                description: 3xx responses by period, representative of webhook performance.
                              4xx:
                                type: array
                                items:
                                  type: integer
                                description: 4xx responses by period, representative of webhook performance.
                              5xx:
                                type: array
                                items:
                                  type: integer
                                description: 5xx responses by period, representative of webhook performance.
                          - description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            type: object
                            properties:
                              attempted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `attempted` messages.
                              bounced:
                                type: array
                                items:
                                  type: integer
                                description: The number of `bounced` messages.
                              clicked:
                                type: array
                                items:
                                  type: integer
                                description: The number of `clicked` messages.
                              converted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `converted` messages.
                              created:
                                type: array
                                items:
                                  type: integer
                                description: The number of `created` messages.
                              delivered:
                                type: array
                                items:
                                  type: integer
                                description: The number of `delivered` messages.
                              drafted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `drafted` messages.
                              dropped:
                                type: array
                                items:
                                  type: integer
                                description: The number of `dropped` messages.
                              failed:
                                type: array
                                items:
                                  type: integer
                                description: The number of `failed` messages.
                              opened:
                                type: array
                                items:
                                  type: integer
                                description: The number of `opened` messages.
                              sent:
                                type: array
                                items:
                                  type: integer
                                description: The number of sent messages.
                              spammed:
                                type: array
                                items:
                                  type: integer
                                description: The number of spam complaints.
                              undeliverable:
                                type: array
                                items:
                                  type: integer
                                description: The number of `undeliverable` messages.
                              unsubscribed:
                                type: array
                                items:
                                  type: integer
                                description: The number of unsubscribes attributed to the campaign or message.
        '404':
          description: The broadcast and/or action does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/broadcast/{broadcast_id}/actions/{action_id}/metrics \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/broadcast/{broadcast_id}/actions/{action_id}/metrics",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/broadcast/{broadcast_id}/actions/{action_id}/metrics")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/broadcast/{broadcast_id}/actions/{action_id}/metrics", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/broadcast/{broadcast_id}/actions/{action_id}/metrics\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/broadcasts/{broadcast_id}/actions/{action_id}/metrics/links:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The identifier of a broadcast.
        schema:
          type: integer
      - name: action_id
        in: path
        required: true
        description: The action you want to lookup or act on.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      operationId: broadcastActionLinks
      summary: Get broadcast action link metrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns link click metrics for an individual broadcast action. Unless you specify otherwise, the response contains data for the maximum period by days (45 days).
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns broadcast variant metrics by `series` (with increments are based on the `period` and `step` in your request) for the broadcast.
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    description: Each object in the array represents a link in your broadcast variant.
                    items:
                      type: object
                      properties:
                        link:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the link.
                              example: 1234
                            href:
                              type: string
                              description: The link destination—a URL, mailto, etc.
                              example: https://customer.io/docs
                        metric:
                          type: object
                          description: Contains metrics for the link.
                          properties:
                            series:
                              type: object
                              properties:
                                clicked:
                                  type: array
                                  description: An array of results from oldest to newest, where each result indicates a period.
                                  items:
                                    type: integer
                                  example:
                                    - 1
                                    - 3
                                    - 5
                                    - 7
        '404':
          description: The broadcast and/or variant does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/broadcasts/{broadcast_id}/actions/{action_id}/metrics/links \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts/{broadcast_id}/actions/{action_id}/metrics/links",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts/{broadcast_id}/actions/{action_id}/metrics/links")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/broadcasts/{broadcast_id}/actions/{action_id}/metrics/links", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts/{broadcast_id}/actions/{action_id}/metrics/links\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/broadcasts/{broadcast_id}/triggers:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: broadcast_id
        in: path
        required: true
        description: The identifier of a broadcast.
        schema:
          type: integer
    get:
      operationId: listBroadcastTriggers
      summary: Get broadcast triggers
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of the `triggers` for a broadcast.
      tags:
        - Broadcasts
      responses:
        '200':
          description: Returns an array of `triggers`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  triggers:
                    type: array
                    description: Each object in the array represents a time that your broadcast was triggered/sent.
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The identifier for a broadcast trigger.
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        created_at:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        processed_at:
                          type: integer
                          format: unix timestamp
                          description: The date-time when Customer.io processed the trigger.
        '404':
          description: The broadcast does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/broadcasts/{broadcast_id}/triggers \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/broadcasts/{broadcast_id}/triggers",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/broadcasts/{broadcast_id}/triggers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/broadcasts/{broadcast_id}/triggers", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/broadcasts/{broadcast_id}/triggers\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      summary: List campaigns
      operationId: listCampaigns
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of your campaigns and associated metadata.
      tags:
        - Campaigns
      responses:
        '200':
          description: Returns an array of campaign objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  campaigns:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        name:
                          type: string
                          description: The name of the campaign.
                          readOnly: true
                        type:
                          type: string
                          description: The type of campaign.
                          enum:
                            - segment
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        updated:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was last updated.
                          example: 1552341937
                        filter_segment_ids:
                          description: A list of segments used in the campaign filter, returned if the campaign audience was filtered on one or more segments.
                          type: array
                          items:
                            type: integer
                          example:
                            - 21
                            - 42
                        trigger_segment_ids:
                          description: A list of segments used in the campaign trigger, returned if the campaign trigger included one or more segment conditions.
                          type: array
                          items:
                            type: integer
                          example:
                            - 90
                        active:
                          type: boolean
                          description: If true, the campaign is active and can still send messages.
                        msg_templates:
                          type: array
                          deprecated: true
                          description: Indicates the message templates used in this campaign.
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                description: The message type the template represents.
                                enum:
                                  - email
                                  - sms
                                  - push
                                  - slack
                              id:
                                type: integer
                                description: The identifier for the template.
                        actions:
                          type: array
                          description: An array of actions contained within the campaign.
                          items:
                            type: object
                            properties:
                              type:
                                type: string
                                description: The message type actions resulting from the campaign.
                                enum:
                                  - email
                                  - sms
                                  - push
                                  - slack
                                  - webhook
                              id:
                                type: integer
                                description: The identifier for the action.
                        first_started:
                          type: integer
                          format: unix timestamp
                          description: The date and time when you first started the campaign and it first became eligible to be triggered.
                          example: 1552341937
                        created_by:
                          type: string
                          format: email
                          description: The email address of the person who created the campaign.
                          example: hugh.mann@example.com
                        tags:
                          type: array
                          description: An array of tags you set on this campaign.
                          items:
                            type: string
                          example:
                            - new
                            - welcome
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{campaign_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: campaign_id
        in: path
        required: true
        description: The ID of the campaign that you want to trigger or return information about.
        schema:
          type: integer
          example: 2
    get:
      summary: Get a campaign
      operationId: getCampaigns
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metadata for an individual campaign.
      tags:
        - Campaigns
      responses:
        '200':
          description: Returns metadata for the campaign.
          content:
            application/json:
              schema:
                type: object
                properties:
                  campaign:
                    type: object
                    properties:
                      id:
                        description: The identifier for a campaign.
                        type: integer
                        readOnly: true
                        example: 5
                        nullable: true
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the campaign.
                        readOnly: true
                      type:
                        type: string
                        description: The type of campaign.
                        enum:
                          - segment
                      created:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      filter_segment_ids:
                        description: A list of segments used in the campaign filter, returned if the campaign audience was filtered on one or more segments.
                        type: array
                        items:
                          type: integer
                        example:
                          - 21
                          - 42
                      trigger_segment_ids:
                        description: A list of segments used in the campaign trigger, returned if the campaign trigger included one or more segment conditions.
                        type: array
                        items:
                          type: integer
                        example:
                          - 90
                      active:
                        type: boolean
                        description: If true, the campaign is active and can still send messages.
                      msg_templates:
                        type: array
                        deprecated: true
                        description: Indicates the message templates used in this campaign.
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: The message type the template represents.
                              enum:
                                - email
                                - sms
                                - push
                                - slack
                            id:
                              type: integer
                              description: The identifier for the template.
                      actions:
                        type: array
                        description: An array of actions contained within the campaign.
                        items:
                          type: object
                          properties:
                            type:
                              type: string
                              description: The message type actions resulting from the campaign.
                              enum:
                                - email
                                - sms
                                - push
                                - slack
                                - webhook
                            id:
                              type: integer
                              description: The identifier for the action.
                      first_started:
                        type: integer
                        format: unix timestamp
                        description: The date and time when you first started the campaign and it first became eligible to be triggered.
                        example: 1552341937
                      created_by:
                        type: string
                        format: email
                        description: The email address of the person who created the campaign.
                        example: hugh.mann@example.com
                      tags:
                        type: array
                        description: An array of tags you set on this campaign.
                        items:
                          type: string
                        example:
                          - new
                          - welcome
        '404':
          description: The campaign you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{campaign_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{campaign_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{campaign_id}/metrics:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: campaign_id
        in: path
        required: true
        description: The ID of the campaign that you want to trigger or return information about.
        schema:
          type: integer
          example: 2
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      summary: Get campaign metrics
      operationId: campaignMetrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of metrics for an individual campaign in `steps` (days, weeks, etc). We return metrics from oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Campaigns
      responses:
        '200':
          description: Returns campaign metrics by `series` (using the `period` and `step` in the request) for the campaign.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    type: object
                    properties:
                      series:
                        allOf:
                          - type: object
                            description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            properties:
                              2xx:
                                type: array
                                items:
                                  type: integer
                                description: 2xx responses by period, representative of webhook performance.
                              3xx:
                                type: array
                                items:
                                  type: integer
                                description: 3xx responses by period, representative of webhook performance.
                              4xx:
                                type: array
                                items:
                                  type: integer
                                description: 4xx responses by period, representative of webhook performance.
                              5xx:
                                type: array
                                items:
                                  type: integer
                                description: 5xx responses by period, representative of webhook performance.
                          - description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            type: object
                            properties:
                              attempted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `attempted` messages.
                              bounced:
                                type: array
                                items:
                                  type: integer
                                description: The number of `bounced` messages.
                              clicked:
                                type: array
                                items:
                                  type: integer
                                description: The number of `clicked` messages.
                              converted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `converted` messages.
                              created:
                                type: array
                                items:
                                  type: integer
                                description: The number of `created` messages.
                              delivered:
                                type: array
                                items:
                                  type: integer
                                description: The number of `delivered` messages.
                              drafted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `drafted` messages.
                              dropped:
                                type: array
                                items:
                                  type: integer
                                description: The number of `dropped` messages.
                              failed:
                                type: array
                                items:
                                  type: integer
                                description: The number of `failed` messages.
                              opened:
                                type: array
                                items:
                                  type: integer
                                description: The number of `opened` messages.
                              sent:
                                type: array
                                items:
                                  type: integer
                                description: The number of sent messages.
                              spammed:
                                type: array
                                items:
                                  type: integer
                                description: The number of spam complaints.
                              undeliverable:
                                type: array
                                items:
                                  type: integer
                                description: The number of `undeliverable` messages.
                              unsubscribed:
                                type: array
                                items:
                                  type: integer
                                description: The number of unsubscribes attributed to the campaign or message.
        '404':
          description: The campaign you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{campaign_id}/metrics \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}/metrics",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}/metrics")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{campaign_id}/metrics", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}/metrics\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{campaign_id}/metrics/links:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: campaign_id
        in: path
        required: true
        description: The ID of the campaign that you want to trigger or return information about.
        schema:
          type: integer
          example: 2
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: unique
        in: query
        required: false
        description: If true, the response contains only unique customer results, i.e. a customer who clicks a link twice is only counted once. If false, the response contains the total number of results without regard to uniqueness.
        schema:
          type: boolean
          default: false
    get:
      summary: Get campaign link metrics
      operationId: campaignLinkMetrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metrics for link clicks within a campaign, both in total and in `series` periods (days, weeks, etc). `series` metrics are ordered oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Campaigns
      responses:
        '200':
          description: Returns an array of link objects. Each object represents a different link in your campaign and contains independent metrics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        link:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the link.
                              example: 1234
                            href:
                              type: string
                              description: The link destination—a URL, mailto, etc.
                              example: https://customer.io/docs
                        metric:
                          type: object
                          description: Contains metrics for the link.
                          properties:
                            series:
                              type: object
                              properties:
                                clicked:
                                  type: array
                                  description: An array of results from oldest to newest, where each result indicates a period.
                                  items:
                                    type: integer
                                  example:
                                    - 1
                                    - 3
                                    - 5
                                    - 7
        '404':
          description: The campaign you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{campaign_id}/metrics/links \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}/metrics/links",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}/metrics/links")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{campaign_id}/metrics/links", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}/metrics/links\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{campaign_id}/actions:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: campaign_id
        in: path
        required: true
        description: The ID of the campaign that you want to trigger or return information about.
        schema:
          type: integer
          example: 2
    get:
      summary: List campaign actions
      operationId: listCampaignActions
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns the operations in a campaign workflow. Each object in the response represents a 'tile' in the campaign builder.
      tags:
        - Campaigns
      responses:
        '200':
          description: Returns campaign `actions`. Each object represents an individual action.
          content:
            application/json:
              schema:
                type: object
                properties:
                  actions:
                    type: array
                    items:
                      oneOf:
                        - title: Email / message
                          type: object
                          properties:
                            id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            deduplicate_id:
                              type: string
                              readOnly: true
                              description: A completely unique CIO identifier.
                              example: '15:1492548073'
                            name:
                              type: string
                              description: The name of the action, if it exists.
                              readOnly: true
                              example: Opening Message
                            layout:
                              type: string
                              description: The layout used for the action, if it exists.
                              readOnly: true
                            created:
                              type: integer
                              format: unix timestamp
                              description: The date time when the referenced ID was created.
                              example: 1552341937
                            updated:
                              type: integer
                              format: unix timestamp
                              description: The date time when the referenced ID was last updated.
                              example: 1552341937
                            body:
                              type: string
                              description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
                            type:
                              type: string
                              description: The type of action.
                              enum:
                                - email
                                - twilio
                                - urban_airship
                                - slack
                                - push
                              readOnly: true
                            sending_state:
                              type: string
                              enum:
                                - automatic
                                - draft
                                - 'off'
                              description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
                            from:
                              type: string
                              description: The address that the message is from, relevant if the action `type` is `email`.
                              readOnly: true
                              example: sentFrom@example.com
                            from_id:
                              type: integer
                              description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                              example: 1
                            reply_to:
                              type: string
                              description: The address that receives replies for the message, if applicable.
                              readOnly: true
                              example: replyto@example.com
                            reply_to_id:
                              type: integer
                              description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                              nullable: true
                              example: 38
                            preprocessor:
                              type: string
                              description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                              enum:
                                - premailer
                              readOnly: true
                            recipient:
                              description: The recipient address for an action.
                              type: string
                              example: '{{customer.email}}'
                            subject:
                              type: string
                              description: The subject line for an `email` action.
                              example: Did you get that thing I sent you?
                            bcc:
                              readOnly: true
                              description: The blind-copy address(es) for this action.
                              type: string
                            fake_bcc:
                              readOnly: true
                              type: boolean
                              description: |
                                If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                            preheader_text:
                              type: string
                              description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                              readOnly: true
                            headers:
                              type: array
                              description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                              items:
                                type: object
                                additionalProperties:
                                  type: string
                                  x-additionalPropertiesName: Header Names
                                  x-doNotRender: true
                        - title: Webhook
                          type: object
                          properties:
                            id:
                              description: The identifier for an action.
                              type: integer
                              readOnly: true
                              example: 96
                              nullable: true
                            campaign_id:
                              description: The identifier for a campaign.
                              type: integer
                              readOnly: true
                              example: 5
                              nullable: true
                            parent_action_id:
                              type: integer
                              description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                              example: 1
                            deduplicate_id:
                              type: string
                              readOnly: true
                              description: A completely unique CIO identifier.
                              example: '15:1492548073'
                            name:
                              type: string
                              description: The name of the action, if it exists.
                              readOnly: true
                              example: Set attribute
                            layout:
                              type: string
                              description: The layout used for the action, if it exists.
                              readOnly: true
                            created:
                              type: integer
                              format: unix timestamp
                              description: The date time when the referenced ID was created.
                              example: 1552341937
                            updated:
                              type: integer
                              format: unix timestamp
                              description: The date time when the referenced ID was last updated.
                              example: 1552341937
                            body:
                              type: string
                              description: The payload for your webhook.
                              example: '{"attribute":"cool-webhook"}'
                            type:
                              type: string
                              description: The type of action.
                              enum:
                                - webhook
                              readOnly: true
                            url:
                              type: string
                              description: The URL to send a webhook to, applies to `webhook` type actions.
                              example: https://my.example.com/webhook
                            headers:
                              type: array
                              description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                              items:
                                type: object
                                additionalProperties:
                                  type: string
                                  x-additionalPropertiesName: Header Names
                                  x-doNotRender: true
                            method:
                              description: The HTTP method for your webhook.
                              type: string
                              enum:
                                - get
                                - post
                                - put
                                - delete
                                - patch
                              example: post
                            sending_state:
                              type: string
                              enum:
                                - automatic
                                - draft
                                - 'off'
                              description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
        '404':
          description: The campaign you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{campaign_id}/actions \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}/actions",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}/actions")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{campaign_id}/actions", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}/actions\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{campaign_id}/messages:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: campaign_id
        in: path
        required: true
        description: The ID of the campaign that you want to trigger or return information about.
        schema:
          type: integer
          example: 2
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
          default: 50
          maximum: 1000
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
      - name: metric
        in: query
        required: false
        description: Determines the metric(s) you want to return.
        schema:
          type: string
          enum:
            - created
            - attempted
            - sent
            - delivered
            - opened
            - clicked
            - converted
            - bounced
            - spammed
            - unsubscribed
            - dropped
            - failed
            - undeliverable
      - name: drafts
        in: query
        required: false
        description: If true, your request returns both drafts and active/sent messages.
        schema:
          type: boolean
    get:
      summary: Get campaign message metadata
      operationId: getCampaignMessages
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metadata for the messages in a campaign. Provide query parameters to refine the metrics you want to return.
      tags:
        - Campaigns
      responses:
        '200':
          description: Returns an array of `messages`. Each object represents a different message in your campaign.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      description: Describes an individual message delivery. The object contains keys for all possible parents of the message (`newsletter_id`, `broadcast_id`, etc) but only the parents of the delivery are populated. Other parent IDs are null.
                      properties:
                        id:
                          description: The identifier for a delivery—the instance of a message intended for an individual recipient.
                          type: string
                          readOnly: true
                          example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        message_template_id:
                          description: The identifier of the message template used to create a message.
                          type: integer
                          readOnly: true
                          deprecated: true
                        customer_id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        customer_identifiers:
                          type: object
                          description: |
                            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                            We recommend that you use this object rather than the less descriptive `customer_id`.
                          required:
                            - email
                            - id
                            - cio_id
                          properties:
                            email:
                              type: string
                              nullable: true
                              format: email
                              description: A person's email address, if set.
                              example: cool.person@example.com
                            id:
                              type: string
                              nullable: true
                              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                              example: 2
                            cio_id:
                              type: string
                              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                              example: 786433
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: '{{customer.email}}'
                        subject:
                          type: string
                          description: The subject line for an `email` action.
                          example: Did you get that thing I sent you?
                        metrics:
                          type: object
                          description: Metrics for an individual instance of a message; each item in the object represents the timestamp when a message achieved a particular metric. This object only contains metrics that have been recorded.
                          properties:
                            bounced:
                              type: integer
                              description: The timestamp when the message `bounced`.
                            clicked:
                              type: integer
                              description: The timestamp when the message was `clicked`.
                            converted:
                              type: integer
                              description: The timestamp when the message was `converted`.
                            created:
                              type: integer
                              description: The timestamp when the message was `created`.
                            delivered:
                              type: integer
                              description: The timestamp when the message was `delivered`.
                            drafted:
                              type: integer
                              description: The timestamp when the message was `drafted`.
                            dropped:
                              type: integer
                              description: The timestamp when the message was `dropped`.
                            failed:
                              type: integer
                              description: The timestamp when the message `failed`.
                            opened:
                              type: integer
                              description: The timestamp when the message was `opened`.
                            sent:
                              type: integer
                              description: The timestamp when the message was `sent`.
                            spammed:
                              type: integer
                              description: The timestamp when the message was marked as spam.
                            undeliverable:
                              type: integer
                              description: The timestamp when the message became `undeliverable`.
                            unsubscribed:
                              type: integer
                              description: The timestamp when a person unsubscribed based on this message.
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        failure_message:
                          type: string
                          description: Explains why a message failed, if applicable.
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          readOnly: true
                          nullable: true
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          readOnly: true
                          example: 1
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        type:
                          description: The type of message/action.
                          type: string
                          enum:
                            - email
                            - webhook
                            - twilio
                            - urban_airship
                            - slack
                            - push
                          readOnly: true
                          example: email
                        forgotten:
                          type: boolean
                          description: If true message contents are not retained by Customer.io.
                      example:
                        id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=:1619137768
                        msg_template_id: 43
                        action_id: 215
                        customer_id: null
                        recipient: person@example.com
                        subject: Did you get that thing I sent you?
                        metrics:
                          delivered: 1619137768
                          sent: 1619137768
                        created: 1619137767
                        failure_message: null
                        newsletter_id: null
                        content_id: null
                        campaign_id: 23
                        broadcast_id: null
                        type: email
                        forgotten: false
                    example:
                      - id: dgOq6QWq6QUDAAF22PaOyFVqVxHY3rI5fsg=
                        deduplicate_id: dgOq6QWq6QUDAAF22PaOyFVqVxHY3rI5fsg=:1609957872
                        msg_template_id: 0
                        action_id: 196
                        customer_id: 1a55d8d1-b13d-4f1f-858f-a93ef21e3a7d
                        customer_identifiers:
                          id: 1a55d8d1-b13d-4f1f-858f-a93ef21e3a7d
                          email: person@example.com
                          cio_id: 786433
                        recipient: person@email.com
                        subject: Did you get that thing I sent you?
                        metrics:
                          delivered: 1609957872
                          sent: 1609957832
                        created: 1609957805
                        failure_message: null
                        newsletter_id: null
                        content_id: null
                        campaign_id: 89
                        broadcast_id: null
                        type: email
                        forgotten: false
        '404':
          description: The campaign you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{campaign_id}/messages \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}/messages",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}/messages")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{campaign_id}/messages", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}/messages\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{campaign_id}/actions/{action_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: campaign_id
        in: path
        required: true
        description: The ID of the campaign that you want to trigger or return information about.
        schema:
          type: integer
          example: 2
      - name: action_id
        in: path
        required: true
        description: The action you want to lookup or act on.
        schema:
          type: integer
    get:
      summary: Get a campaign action
      operationId: getCampaignAction
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns information about a specific action in a campaign.
      tags:
        - Campaigns
      responses:
        '200':
          description: Returns the requested campaign `action`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  action:
                    oneOf:
                      - title: Email / message
                        type: object
                        properties:
                          id:
                            description: The identifier for an action.
                            type: integer
                            readOnly: true
                            example: 96
                            nullable: true
                          campaign_id:
                            description: The identifier for a campaign.
                            type: integer
                            readOnly: true
                            example: 5
                            nullable: true
                          parent_action_id:
                            type: integer
                            description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                            example: 1
                          deduplicate_id:
                            type: string
                            readOnly: true
                            description: A completely unique CIO identifier.
                            example: '15:1492548073'
                          name:
                            type: string
                            description: The name of the action, if it exists.
                            readOnly: true
                            example: Opening Message
                          layout:
                            type: string
                            description: The layout used for the action, if it exists.
                            readOnly: true
                          created:
                            type: integer
                            format: unix timestamp
                            description: The date time when the referenced ID was created.
                            example: 1552341937
                          updated:
                            type: integer
                            format: unix timestamp
                            description: The date time when the referenced ID was last updated.
                            example: 1552341937
                          body:
                            type: string
                            description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
                          type:
                            type: string
                            description: The type of action.
                            enum:
                              - email
                              - twilio
                              - urban_airship
                              - slack
                              - push
                            readOnly: true
                          sending_state:
                            type: string
                            enum:
                              - automatic
                              - draft
                              - 'off'
                            description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
                          from:
                            type: string
                            description: The address that the message is from, relevant if the action `type` is `email`.
                            readOnly: true
                            example: sentFrom@example.com
                          from_id:
                            type: integer
                            description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                            example: 1
                          reply_to:
                            type: string
                            description: The address that receives replies for the message, if applicable.
                            readOnly: true
                            example: replyto@example.com
                          reply_to_id:
                            type: integer
                            description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                            nullable: true
                            example: 38
                          preprocessor:
                            type: string
                            description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                            enum:
                              - premailer
                            readOnly: true
                          recipient:
                            description: The recipient address for an action.
                            type: string
                            example: '{{customer.email}}'
                          subject:
                            type: string
                            description: The subject line for an `email` action.
                            example: Did you get that thing I sent you?
                          bcc:
                            readOnly: true
                            description: The blind-copy address(es) for this action.
                            type: string
                          fake_bcc:
                            readOnly: true
                            type: boolean
                            description: |
                              If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                          preheader_text:
                            type: string
                            description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                            readOnly: true
                          headers:
                            type: array
                            description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                            items:
                              type: object
                              additionalProperties:
                                type: string
                                x-additionalPropertiesName: Header Names
                                x-doNotRender: true
                      - title: Webhook
                        type: object
                        properties:
                          id:
                            description: The identifier for an action.
                            type: integer
                            readOnly: true
                            example: 96
                            nullable: true
                          campaign_id:
                            description: The identifier for a campaign.
                            type: integer
                            readOnly: true
                            example: 5
                            nullable: true
                          parent_action_id:
                            type: integer
                            description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                            example: 1
                          deduplicate_id:
                            type: string
                            readOnly: true
                            description: A completely unique CIO identifier.
                            example: '15:1492548073'
                          name:
                            type: string
                            description: The name of the action, if it exists.
                            readOnly: true
                            example: Set attribute
                          layout:
                            type: string
                            description: The layout used for the action, if it exists.
                            readOnly: true
                          created:
                            type: integer
                            format: unix timestamp
                            description: The date time when the referenced ID was created.
                            example: 1552341937
                          updated:
                            type: integer
                            format: unix timestamp
                            description: The date time when the referenced ID was last updated.
                            example: 1552341937
                          body:
                            type: string
                            description: The payload for your webhook.
                            example: '{"attribute":"cool-webhook"}'
                          type:
                            type: string
                            description: The type of action.
                            enum:
                              - webhook
                            readOnly: true
                          url:
                            type: string
                            description: The URL to send a webhook to, applies to `webhook` type actions.
                            example: https://my.example.com/webhook
                          headers:
                            type: array
                            description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                            items:
                              type: object
                              additionalProperties:
                                type: string
                                x-additionalPropertiesName: Header Names
                                x-doNotRender: true
                          method:
                            description: The HTTP method for your webhook.
                            type: string
                            enum:
                              - get
                              - post
                              - put
                              - delete
                              - patch
                            example: post
                          sending_state:
                            type: string
                            enum:
                              - automatic
                              - draft
                              - 'off'
                            description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
        '404':
          description: The campaign or action does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}/actions/{action_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{campaign_id}/actions/{action_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    put:
      summary: Update a campaign action
      operationId: updateCampaignAction
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Update the contents of a campaign action, including the body of messages and HTTP requests.
      tags:
        - Campaigns
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: Email / message
                  type: object
                  properties:
                    id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    campaign_id:
                      description: The identifier for a campaign.
                      type: integer
                      readOnly: true
                      example: 5
                      nullable: true
                    parent_action_id:
                      type: integer
                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                      example: 1
                    deduplicate_id:
                      type: string
                      readOnly: true
                      description: A completely unique CIO identifier.
                      example: '15:1492548073'
                    name:
                      type: string
                      description: The name of the action, if it exists.
                      readOnly: true
                      example: Opening Message
                    layout:
                      type: string
                      description: The layout used for the action, if it exists.
                      readOnly: true
                    created:
                      type: integer
                      format: unix timestamp
                      description: The date time when the referenced ID was created.
                      example: 1552341937
                    updated:
                      type: integer
                      format: unix timestamp
                      description: The date time when the referenced ID was last updated.
                      example: 1552341937
                    body:
                      type: string
                      description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
                    type:
                      type: string
                      description: The type of action.
                      enum:
                        - email
                        - twilio
                        - urban_airship
                        - slack
                        - push
                      readOnly: true
                    sending_state:
                      type: string
                      enum:
                        - automatic
                        - draft
                        - 'off'
                      description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
                    from:
                      type: string
                      description: The address that the message is from, relevant if the action `type` is `email`.
                      readOnly: true
                      example: sentFrom@example.com
                    from_id:
                      type: integer
                      description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                      example: 1
                    reply_to:
                      type: string
                      description: The address that receives replies for the message, if applicable.
                      readOnly: true
                      example: replyto@example.com
                    reply_to_id:
                      type: integer
                      description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                      nullable: true
                      example: 38
                    preprocessor:
                      type: string
                      description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                      enum:
                        - premailer
                      readOnly: true
                    recipient:
                      description: The recipient address for an action.
                      type: string
                      example: '{{customer.email}}'
                    subject:
                      type: string
                      description: The subject line for an `email` action.
                      example: Did you get that thing I sent you?
                    bcc:
                      readOnly: true
                      description: The blind-copy address(es) for this action.
                      type: string
                    fake_bcc:
                      readOnly: true
                      type: boolean
                      description: |
                        If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                    preheader_text:
                      type: string
                      description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                      readOnly: true
                    headers:
                      type: array
                      description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                      items:
                        type: object
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Header Names
                          x-doNotRender: true
                - title: Webhook
                  type: object
                  properties:
                    id:
                      description: The identifier for an action.
                      type: integer
                      readOnly: true
                      example: 96
                      nullable: true
                    campaign_id:
                      description: The identifier for a campaign.
                      type: integer
                      readOnly: true
                      example: 5
                      nullable: true
                    parent_action_id:
                      type: integer
                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                      example: 1
                    deduplicate_id:
                      type: string
                      readOnly: true
                      description: A completely unique CIO identifier.
                      example: '15:1492548073'
                    name:
                      type: string
                      description: The name of the action, if it exists.
                      readOnly: true
                      example: Set attribute
                    layout:
                      type: string
                      description: The layout used for the action, if it exists.
                      readOnly: true
                    created:
                      type: integer
                      format: unix timestamp
                      description: The date time when the referenced ID was created.
                      example: 1552341937
                    updated:
                      type: integer
                      format: unix timestamp
                      description: The date time when the referenced ID was last updated.
                      example: 1552341937
                    body:
                      type: string
                      description: The payload for your webhook.
                      example: '{"attribute":"cool-webhook"}'
                    type:
                      type: string
                      description: The type of action.
                      enum:
                        - webhook
                      readOnly: true
                    url:
                      type: string
                      description: The URL to send a webhook to, applies to `webhook` type actions.
                      example: https://my.example.com/webhook
                    headers:
                      type: array
                      description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                      items:
                        type: object
                        additionalProperties:
                          type: string
                          x-additionalPropertiesName: Header Names
                          x-doNotRender: true
                    method:
                      description: The HTTP method for your webhook.
                      type: string
                      enum:
                        - get
                        - post
                        - put
                        - delete
                        - patch
                      example: post
                    sending_state:
                      type: string
                      enum:
                        - automatic
                        - draft
                        - 'off'
                      description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
      responses:
        '200':
          description: Returns the updated campaign actions.
          content:
            application/json:
              schema:
                oneOf:
                  - title: Email / message
                    type: object
                    properties:
                      id:
                        description: The identifier for an action.
                        type: integer
                        readOnly: true
                        example: 96
                        nullable: true
                      campaign_id:
                        description: The identifier for a campaign.
                        type: integer
                        readOnly: true
                        example: 5
                        nullable: true
                      parent_action_id:
                        type: integer
                        description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                        example: 1
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the action, if it exists.
                        readOnly: true
                        example: Opening Message
                      layout:
                        type: string
                        description: The layout used for the action, if it exists.
                        readOnly: true
                      created:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      body:
                        type: string
                        description: The body of the action. You cannot modify the body if you created it with our drag-and-drop editor.
                      type:
                        type: string
                        description: The type of action.
                        enum:
                          - email
                          - twilio
                          - urban_airship
                          - slack
                          - push
                        readOnly: true
                      sending_state:
                        type: string
                        enum:
                          - automatic
                          - draft
                          - 'off'
                        description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
                      from:
                        type: string
                        description: The address that the message is from, relevant if the action `type` is `email`.
                        readOnly: true
                        example: sentFrom@example.com
                      from_id:
                        type: integer
                        description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                        example: 1
                      reply_to:
                        type: string
                        description: The address that receives replies for the message, if applicable.
                        readOnly: true
                        example: replyto@example.com
                      reply_to_id:
                        type: integer
                        description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                        nullable: true
                        example: 38
                      preprocessor:
                        type: string
                        description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                        enum:
                          - premailer
                        readOnly: true
                      recipient:
                        description: The recipient address for an action.
                        type: string
                        example: '{{customer.email}}'
                      subject:
                        type: string
                        description: The subject line for an `email` action.
                        example: Did you get that thing I sent you?
                      bcc:
                        readOnly: true
                        description: The blind-copy address(es) for this action.
                        type: string
                      fake_bcc:
                        readOnly: true
                        type: boolean
                        description: |
                          If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                      preheader_text:
                        type: string
                        description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                        readOnly: true
                      headers:
                        type: array
                        description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                        items:
                          type: object
                          additionalProperties:
                            type: string
                            x-additionalPropertiesName: Header Names
                            x-doNotRender: true
                  - title: Webhook
                    type: object
                    properties:
                      id:
                        description: The identifier for an action.
                        type: integer
                        readOnly: true
                        example: 96
                        nullable: true
                      campaign_id:
                        description: The identifier for a campaign.
                        type: integer
                        readOnly: true
                        example: 5
                        nullable: true
                      parent_action_id:
                        type: integer
                        description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                        example: 1
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the action, if it exists.
                        readOnly: true
                        example: Set attribute
                      layout:
                        type: string
                        description: The layout used for the action, if it exists.
                        readOnly: true
                      created:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      body:
                        type: string
                        description: The payload for your webhook.
                        example: '{"attribute":"cool-webhook"}'
                      type:
                        type: string
                        description: The type of action.
                        enum:
                          - webhook
                        readOnly: true
                      url:
                        type: string
                        description: The URL to send a webhook to, applies to `webhook` type actions.
                        example: https://my.example.com/webhook
                      headers:
                        type: array
                        description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                        items:
                          type: object
                          additionalProperties:
                            type: string
                            x-additionalPropertiesName: Header Names
                            x-doNotRender: true
                      method:
                        description: The HTTP method for your webhook.
                        type: string
                        enum:
                          - get
                          - post
                          - put
                          - delete
                          - patch
                        example: post
                      sending_state:
                        type: string
                        enum:
                          - automatic
                          - draft
                          - 'off'
                        description: Determines the sending behavior for the action. `automatic` sends the action automatically when triggered; `draft` queues drafts when the action is triggered; or `off` to disable the action.
        '400':
          description: The request is malformed.
        '404':
          description: The campaign or action does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request PUT \
              --url https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"parent_action_id":1,"created":1552341937,"updated":1552341937,"body":"string","sending_state":"automatic","from_id":1,"reply_to_id":38,"recipient":"{{customer.email}}","subject":"Did you get that thing I sent you?","headers":[{"Header Names1":"string","Header Names2":"string"}]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "PUT",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}/actions/{action_id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              parent_action_id: 1,
              created: 1552341937,
              updated: 1552341937,
              body: 'string',
              sending_state: 'automatic',
              from_id: 1,
              reply_to_id: 38,
              recipient: '{{customer.email}}',
              subject: 'Did you get that thing I sent you?',
              headers: [{'Header Names1': 'string', 'Header Names2': 'string'}]
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Put.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"parent_action_id\":1,\"created\":1552341937,\"updated\":1552341937,\"body\":\"string\",\"sending_state\":\"automatic\",\"from_id\":1,\"reply_to_id\":38,\"recipient\":\"{{customer.email}}\",\"subject\":\"Did you get that thing I sent you?\",\"headers\":[{\"Header Names1\":\"string\",\"Header Names2\":\"string\"}]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"parent_action_id\":1,\"created\":1552341937,\"updated\":1552341937,\"body\":\"string\",\"sending_state\":\"automatic\",\"from_id\":1,\"reply_to_id\":38,\"recipient\":\"{{customer.email}}\",\"subject\":\"Did you get that thing I sent you?\",\"headers\":[{\"Header Names1\":\"string\",\"Header Names2\":\"string\"}]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("PUT", "/v1/campaigns/{campaign_id}/actions/{action_id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}\"\n\n\tpayload := strings.NewReader(\"{\\\"parent_action_id\\\":1,\\\"created\\\":1552341937,\\\"updated\\\":1552341937,\\\"body\\\":\\\"string\\\",\\\"sending_state\\\":\\\"automatic\\\",\\\"from_id\\\":1,\\\"reply_to_id\\\":38,\\\"recipient\\\":\\\"{{customer.email}}\\\",\\\"subject\\\":\\\"Did you get that thing I sent you?\\\",\\\"headers\\\":[{\\\"Header Names1\\\":\\\"string\\\",\\\"Header Names2\\\":\\\"string\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{campaign_id}/actions/{action_id}/metrics:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: campaign_id
        in: path
        required: true
        description: The ID of the campaign that you want to trigger or return information about.
        schema:
          type: integer
          example: 2
      - name: action_id
        in: path
        required: true
        description: The action you want to lookup or act on.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      summary: Get campaign action metrics
      operationId: campaignActionMetrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of metrics for an individual action both in total and in `steps` (days, weeks, etc) over a period of time. Stepped `series` metrics return from oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Campaigns
      responses:
        '200':
          description: Returns action metrics by `series` (with increments are based on the `period` and `step` in your request) for the campaign.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    type: object
                    properties:
                      series:
                        allOf:
                          - type: object
                            description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            properties:
                              2xx:
                                type: array
                                items:
                                  type: integer
                                description: 2xx responses by period, representative of webhook performance.
                              3xx:
                                type: array
                                items:
                                  type: integer
                                description: 3xx responses by period, representative of webhook performance.
                              4xx:
                                type: array
                                items:
                                  type: integer
                                description: 4xx responses by period, representative of webhook performance.
                              5xx:
                                type: array
                                items:
                                  type: integer
                                description: 5xx responses by period, representative of webhook performance.
                          - description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            type: object
                            properties:
                              attempted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `attempted` messages.
                              bounced:
                                type: array
                                items:
                                  type: integer
                                description: The number of `bounced` messages.
                              clicked:
                                type: array
                                items:
                                  type: integer
                                description: The number of `clicked` messages.
                              converted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `converted` messages.
                              created:
                                type: array
                                items:
                                  type: integer
                                description: The number of `created` messages.
                              delivered:
                                type: array
                                items:
                                  type: integer
                                description: The number of `delivered` messages.
                              drafted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `drafted` messages.
                              dropped:
                                type: array
                                items:
                                  type: integer
                                description: The number of `dropped` messages.
                              failed:
                                type: array
                                items:
                                  type: integer
                                description: The number of `failed` messages.
                              opened:
                                type: array
                                items:
                                  type: integer
                                description: The number of `opened` messages.
                              sent:
                                type: array
                                items:
                                  type: integer
                                description: The number of sent messages.
                              spammed:
                                type: array
                                items:
                                  type: integer
                                description: The number of spam complaints.
                              undeliverable:
                                type: array
                                items:
                                  type: integer
                                description: The number of `undeliverable` messages.
                              unsubscribed:
                                type: array
                                items:
                                  type: integer
                                description: The number of unsubscribes attributed to the campaign or message.
        '404':
          description: The campaign and/or action does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}/metrics \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}/actions/{action_id}/metrics",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}/metrics")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{campaign_id}/actions/{action_id}/metrics", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}/metrics\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{campaign_id}/actions/{action_id}/metrics/links:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: campaign_id
        in: path
        required: true
        description: The ID of the campaign that you want to trigger or return information about.
        schema:
          type: integer
          example: 2
      - name: action_id
        in: path
        required: true
        description: The action you want to lookup or act on.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      summary: Get link metrics for an action
      operationId: campaignActionLinks
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns link click metrics for an individual action. Unless you specify otherwise, the response contains data for the maximum period by days (45 days).
      tags:
        - Campaigns
      responses:
        '200':
          description: Returns action metrics by `series` (with increments are based on the `period` and `step` in your request) for the campaign.
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    description: Each object in the array represents a link in your action.
                    items:
                      type: object
                      properties:
                        link:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the link.
                              example: 1234
                            href:
                              type: string
                              description: The link destination—a URL, mailto, etc.
                              example: https://customer.io/docs
                        metric:
                          type: object
                          description: Contains metrics for the link.
                          properties:
                            series:
                              type: object
                              properties:
                                clicked:
                                  type: array
                                  description: An array of results from oldest to newest, where each result indicates a period.
                                  items:
                                    type: integer
                                  example:
                                    - 1
                                    - 3
                                    - 5
                                    - 7
        '404':
          description: The campaign and/or action does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}/metrics/links \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}/actions/{action_id}/metrics/links",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}/metrics/links")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{campaign_id}/actions/{action_id}/metrics/links", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}/actions/{action_id}/metrics/links\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/campaigns/{campaign_id}/journey_metrics:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: campaign_id
        in: path
        required: true
        description: The ID of the campaign that you want to trigger or return information about.
        schema:
          type: integer
          example: 2
      - name: start
        in: query
        description: The unix timestamp for the beginning of your journey metrics report.
        required: true
        schema:
          type: integer
          format: unix timestamp
      - name: end
        in: query
        description: The unix timestamp for the end of your journey metrics report.
        required: true
        schema:
          type: integer
          format: unix timestamp
      - name: resolution
        in: query
        description: The unix timestamp for the beginning of your journey metrics report.
        required: true
        schema:
          type: string
          format: unix timestamp
    get:
      summary: Get campaign journey metrics
      operationId: campaignJourneyMetrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: |
        Returns a list of Journey Metrics for your campaign. These metrics show how many people triggered your campaign, were messaged, etc for the time period and "resolution" you set. You must provide the `start`, `end`, and `resolution` parameters or your request will return `400`.

        Metrics in the response are arrays, and each index in the array corresponds to the `resolution` in your request. If you request metrics in `days`, the first result in each metric array is the first day of results and each successive increment represents another day. 

        Each increment represents the number of journeys that started within a time period and eventually achieved a particular metric. For example, array index 0 for the `converted` metric represents the number of journeys that started on the first day/month of results that achieved a conversion.
      tags:
        - Campaigns
      responses:
        '200':
          description: Each `journey_metric` item in the response is an array. Each item in a metric array represents the number of journeys that started within the time increment ("resolution"—day or month) and eventually achieved that metric.
          content:
            application/json:
              schema:
                type: object
                properties:
                  journey_metric:
                    type: object
                    properties:
                      started:
                        description: The total number of people who meet the trigger criteria for a journey. This count occurs before filters are applied.
                        type: array
                        items:
                          type: integer
                      activated:
                        description: People who started a journey and were not filtered out before they experienced an action.
                        type: array
                        items:
                          type: integer
                      exited_early:
                        description: People who started a journey but stopped meeting the campaign trigger/filter criteria following a delay or grace period.
                        type: array
                        items:
                          type: integer
                      finished:
                        description: People who finished the journey.
                        type: array
                        items:
                          type: integer
                      converted:
                        description: People who met the conversion goal (entered a segment) for the campaign.
                        type: array
                        items:
                          type: integer
                      never_activated:
                        description: People who started a journey but were filtered out before they could experience any of the actions in the journey.
                        type: array
                        items:
                          type: integer
                      messaged:
                        description: People who experienced at least one non-delay action in the journey. This metric typically represents journeys in progress.
                        type: array
                        items:
                          type: integer
        '400':
          description: You may have omitted query parameters or the `start` time occurred after the `end` time.
        '404':
          description: The campaign and/or action does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/campaigns/{campaign_id}/journey_metrics \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/campaigns/{campaign_id}/journey_metrics",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/campaigns/{campaign_id}/journey_metrics")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/campaigns/{campaign_id}/journey_metrics", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/campaigns/{campaign_id}/journey_metrics\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/collections:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    post:
      summary: Create a collection
      description: |
        Create a new collection and provide the `data` that you'll access from the collection or the `url` that you'll download CSV or JSON data from.

        **Note**: A collection cannot be more than 10 MB in size. No individual row in the collection can be more than 10 KB.
      tags:
        - Collections
      operationId: addCollection
      security:
        - Bearer-Auth-(App-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: Local data
                  type: object
                  required:
                    - name
                    - data
                  properties:
                    name:
                      type: string
                      description: The name of the collection. This is how you'll reference your collection in messages—`{{collection_name.data-property}}`.
                    data:
                      type: array
                      description: An array of data objects that you want to reference in this collection.
                      items:
                        type: object
                        additionalProperties:
                          x-additionalPropertiesName: collection data
                - title: Data by URL
                  type: object
                  required:
                    - name
                    - url
                  properties:
                    name:
                      type: string
                      description: The name of the collection. This is how you'll reference your collection in messages—`{{collection_name.data-property}}`.
                    url:
                      type: string
                      format: url
                      description: |
                        The URL for your CSV or JSON data. If your URL does not return a `Content-Type`, we use the file extension; otherwise, Customer.io assumes your data is JSON.
            example:
              name: events
              data:
                - eventName: christmas
                  eventDate: '2021-12-25T12:00:00.000Z'
                  presents:
                    something_you_want: toys
                    something_you_need: socks
                    total: 2
                - eventName: birthday
                  eventDate: '2021-03-15T12:00:00.000Z'
                  presents:
                    something_you_want: video games
                    something_you_need: books
                    total: 2
      responses:
        '200':
          description: The collection was created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection:
                    type: object
                    properties:
                      bytes:
                        type: integer
                        description: The size of the collection in bytes.
                        example: 296
                      created_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      id:
                        type: integer
                        description: The identifier for the collection. This is how you'll reference the collection from the API.
                        example: 1
                      name:
                        type: string
                        description: The name of the collection. This is how you'll reference the collection in liquid, e.g. `{{collection_name.data_property}}`.
                        example: upcoming events
                      rows:
                        type: integer
                        description: Represents the number of objects in the `data` array or CSV rows in your collection schema.
                        example: 2
                      schema:
                        type: array
                        description: Lists the top-level keys that you can reference within this collection. Customer.io does not enforce any of these keys as required from your `data`.
                        items:
                          type: string
                        example:
                          - eventDate
                          - eventName
                          - presents
        '400':
          description: Your request was malformed.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://api.customer.io/v1/collections \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"name":"string","data":[{"collection data1":null,"collection data2":null}]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/collections",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({name: 'string', data: [{'collection data1': null, 'collection data2': null}]}));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/collections")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"name\":\"string\",\"data\":[{\"collection data1\":null,\"collection data2\":null}]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"name\":\"string\",\"data\":[{\"collection data1\":null,\"collection data2\":null}]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("POST", "/v1/collections", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/collections\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"string\\\",\\\"data\\\":[{\\\"collection data1\\\":null,\\\"collection data2\\\":null}]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    get:
      operationId: getCollections
      summary: List your collections
      description: Returns a list of all of your collections, including the `name` and `schema` for each collection.
      tags:
        - Collections
      security:
        - Bearer-Auth-(App-API-Key): []
      responses:
        '200':
          description: Returns metadata about your collection.
          content:
            application/json:
              schema:
                type: object
                properties:
                  collections:
                    type: array
                    items:
                      type: object
                      properties:
                        bytes:
                          type: integer
                          description: The size of the collection in bytes.
                          example: 296
                        created_at:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        updated_at:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was last updated.
                          example: 1552341937
                        id:
                          type: integer
                          description: The identifier for the collection. This is how you'll reference the collection from the API.
                          example: 1
                        name:
                          type: string
                          description: The name of the collection. This is how you'll reference the collection in liquid, e.g. `{{collection_name.data_property}}`.
                          example: upcoming events
                        rows:
                          type: integer
                          description: Represents the number of objects in the `data` array or CSV rows in your collection schema.
                          example: 2
                        schema:
                          type: array
                          description: Lists the top-level keys that you can reference within this collection. Customer.io does not enforce any of these keys as required from your `data`.
                          items:
                            type: string
                          example:
                            - eventDate
                            - eventName
                            - presents
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/collections \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/collections",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/collections")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/collections", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/collections\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/collections/{collection_id}:
    parameters:
      - name: collection_id
        description: The identifier for a collection.
        in: path
        required: true
        schema:
          type: integer
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      summary: Lookup a collection
      description: Retrieves details about a collection, including the `schema` and `name`. This request does not include the `content` of the collection (the values associated with keys in the schema).
      tags:
        - Collections
      operationId: getCollection
      security:
        - Bearer-Auth-(App-API-Key): []
      responses:
        '200':
          description: Returns metadata about your collection.
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection:
                    type: object
                    properties:
                      bytes:
                        type: integer
                        description: The size of the collection in bytes.
                        example: 296
                      created_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      id:
                        type: integer
                        description: The identifier for the collection. This is how you'll reference the collection from the API.
                        example: 1
                      name:
                        type: string
                        description: The name of the collection. This is how you'll reference the collection in liquid, e.g. `{{collection_name.data_property}}`.
                        example: upcoming events
                      rows:
                        type: integer
                        description: Represents the number of objects in the `data` array or CSV rows in your collection schema.
                        example: 2
                      schema:
                        type: array
                        description: Lists the top-level keys that you can reference within this collection. Customer.io does not enforce any of these keys as required from your `data`.
                        items:
                          type: string
                        example:
                          - eventDate
                          - eventName
                          - presents
        '404':
          description: The collection `id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/collections/{collection_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/collections/{collection_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/collections/{collection_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/collections/{collection_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/collections/{collection_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    delete:
      summary: Delete a collection
      description: Remove a collection and associated contents. Before you delete a collection, make sure that you aren't referencing it in active campaign messages or broadcasts; references to a deleted collection will appear empty and may prevent your messages from making sense to your audience.
      tags:
        - Collections
      operationId: deleteCollection
      security:
        - Bearer-Auth-(App-API-Key): []
      responses:
        '204':
          description: The collection is deleted.
        '404':
          description: The collection `id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request DELETE \
              --url https://api.customer.io/v1/collections/{collection_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/collections/{collection_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/collections/{collection_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("DELETE", "/v1/collections/{collection_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/collections/{collection_id}\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    put:
      summary: Update a collection
      description: |
        Update the `name` or replace the contents of a collection. Updating the `data` or `url` for your collection fully replaces the contents of the collection.

        **Note**: 
        * If you reference your collection by name in active campaign messages, changing the name of the collection will cause references to the previous name to return an empty data set.
        * A collection cannot be more than 10 MB in size. No individual row in the collection can be more than 10 KB.
      tags:
        - Collections
      operationId: updateCollection
      security:
        - Bearer-Auth-(App-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: Local data
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the collection. This is how you'll reference your collection in messages—`{{collection_name.data-property}}`.
                    data:
                      type: array
                      description: An array of data objects that you want to reference in this collection.
                      items:
                        type: object
                        additionalProperties:
                          x-additionalPropertiesName: collection data
                - title: Data by URL
                  type: object
                  properties:
                    name:
                      type: string
                      description: The name of the collection. This is how you'll reference your collection in messages—`{{collection_name.data-property}}`.
                    url:
                      type: string
                      format: url
                      description: |
                        The URL for your CSV or JSON data. If your URL does not return a `Content-Type`, we use the file extension; otherwise, Customer.io assumes your data is JSON.
            example:
              name: events
              data:
                - eventName: christmas
                  eventDate: '2021-12-25T12:00:00.000Z'
                  presents:
                    something_you_want: toys
                    something_you_need: socks
                    total: 2
                - eventName: birthday
                  eventDate: '2021-03-15T12:00:00.000Z'
                  presents:
                    something_you_want: video games
                    something_you_need: books
                    total: 2
      responses:
        '200':
          description: The collection was created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection:
                    type: object
                    properties:
                      bytes:
                        type: integer
                        description: The size of the collection in bytes.
                        example: 296
                      created_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      id:
                        type: integer
                        description: The identifier for the collection. This is how you'll reference the collection from the API.
                        example: 1
                      name:
                        type: string
                        description: The name of the collection. This is how you'll reference the collection in liquid, e.g. `{{collection_name.data_property}}`.
                        example: upcoming events
                      rows:
                        type: integer
                        description: Represents the number of objects in the `data` array or CSV rows in your collection schema.
                        example: 2
                      schema:
                        type: array
                        description: Lists the top-level keys that you can reference within this collection. Customer.io does not enforce any of these keys as required from your `data`.
                        items:
                          type: string
                        example:
                          - eventDate
                          - eventName
                          - presents
        '400':
          description: Your request was malformed.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request PUT \
              --url https://api.customer.io/v1/collections/{collection_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"name":"string","data":[{"collection data1":null,"collection data2":null}]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "PUT",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/collections/{collection_id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({name: 'string', data: [{'collection data1': null, 'collection data2': null}]}));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/collections/{collection_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Put.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"name\":\"string\",\"data\":[{\"collection data1\":null,\"collection data2\":null}]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"name\":\"string\",\"data\":[{\"collection data1\":null,\"collection data2\":null}]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("PUT", "/v1/collections/{collection_id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/collections/{collection_id}\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"string\\\",\\\"data\\\":[{\\\"collection data1\\\":null,\\\"collection data2\\\":null}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/collections/{collection_id}/content:
    parameters:
      - name: collection_id
        description: The identifier for a collection.
        in: path
        required: true
        schema:
          type: integer
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      summary: Lookup collection contents
      description: Retrieve the contents of a collection (the `data` from when you created or updated a collection). Each `row` in the collection is represented as a JSON blob in the response.
      tags:
        - Collections
      operationId: getCollectionContents
      security:
        - Bearer-Auth-(App-API-Key): []
      responses:
        '200':
          description: Returns your collection's contents—the `data` (or `url` contents) from your POST or PUT call.
          content:
            application/json:
              schema:
                type: object
                additionalProperties:
                  x-additionalPropertiesName: collection data
              example:
                eventName: christmas
                eventDate: '2021-12-25T12:00:00.000Z'
                presents:
                  something_you_want: toys
                  something_you_need: socks
                  total: 2
        '404':
          description: The collection `id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/collections/{collection_id}/content \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/collections/{collection_id}/content",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/collections/{collection_id}/content")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/collections/{collection_id}/content", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/collections/{collection_id}/content\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    put:
      summary: Update the contents of a collection
      description: |
        Replace the contents of a collection (the `data` from when you created or updated a collection). The request is a free-form object containing the keys you want to reference from the collection and the corresponding values. This request replaces the current contents of the collection entirely.

        If you don't want to update the contents directly—you want to change the `name` or data `url` for your collection, use the [update a collection](#operation/updateCollection) endpoint.

        **Note**: A collection cannot be more than 10 MB in size. No individual row in the collection can be more than 10 KB.
      tags:
        - Collections
      operationId: updateCollectionContents
      security:
        - Bearer-Auth-(App-API-Key): []
      requestBody:
        description: Your request is a free form object representing the contents of your collection. This request replaces the contents of the collection entirely, so include all contents that you want to remain in the collection—whether they change or not.
        content:
          application/json:
            schema:
              type: object
              additionalProperties:
                x-additionalPropertiesName: collection contents
            example:
              eventName: christmas
              eventDate: '2021-12-25T12:00:00.000Z'
              presents:
                something_you_want: toys
                something_you_need: socks
                total: 2
      responses:
        '200':
          description: Returns your collection metadata and the updated schema.
          content:
            application/json:
              schema:
                type: object
                properties:
                  collection:
                    type: object
                    properties:
                      bytes:
                        type: integer
                        description: The size of the collection in bytes.
                        example: 296
                      created_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      id:
                        type: integer
                        description: The identifier for the collection. This is how you'll reference the collection from the API.
                        example: 1
                      name:
                        type: string
                        description: The name of the collection. This is how you'll reference the collection in liquid, e.g. `{{collection_name.data_property}}`.
                        example: upcoming events
                      rows:
                        type: integer
                        description: Represents the number of objects in the `data` array or CSV rows in your collection schema.
                        example: 2
                      schema:
                        type: array
                        description: Lists the top-level keys that you can reference within this collection. Customer.io does not enforce any of these keys as required from your `data`.
                        items:
                          type: string
                        example:
                          - eventDate
                          - eventName
                          - presents
        '404':
          description: The collection `id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request PUT \
              --url https://api.customer.io/v1/collections/{collection_id}/content \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"collection contents1":null,"collection contents2":null}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "PUT",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/collections/{collection_id}/content",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({'collection contents1': null, 'collection contents2': null}));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/collections/{collection_id}/content")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Put.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"collection contents1\":null,\"collection contents2\":null}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"collection contents1\":null,\"collection contents2\":null}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("PUT", "/v1/collections/{collection_id}/content", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/collections/{collection_id}/content\"\n\n\tpayload := strings.NewReader(\"{\\\"collection contents1\\\":null,\\\"collection contents2\\\":null}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/customers:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      parameters:
        - name: email
          description: The email address you want to search for.
          in: query
          required: true
          schema:
            type: string
            format: email
      summary: Get customers by email
      operationId: getPeopleEmail
      security:
        - Bearer-Auth-(App-API-Key): []
      description: |
        Return a list of people in your workspace matching an email address.
      tags:
        - Customers
      responses:
        '200':
          description: Returns an array of `results`; each result represents a person.
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    description: A list of customers matching the email address in your query.
                    items:
                      type: object
                      required:
                        - cio_id
                        - id
                        - email
                      properties:
                        email:
                          type: string
                          nullable: true
                          format: email
                          description: A person's email address, if set.
                          example: hugh.mann@example.com
                        id:
                          type: string
                          nullable: true
                          description: A person's unique ID, if set.
                          example: 2
                        cio_id:
                          type: string
                          description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                          example: 786433
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url 'https://api.customer.io/v1/customers?email=SOME_STRING_VALUE' \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/customers?email=SOME_STRING_VALUE",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/customers?email=SOME_STRING_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/customers?email=SOME_STRING_VALUE", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/customers?email=SOME_STRING_VALUE\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    post:
      parameters:
        - name: start
          in: query
          required: false
          description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
          schema:
            type: string
        - name: limit
          in: query
          required: false
          description: The maximum number of results you want to retrieve per page.
          schema:
            type: integer
            default: 50
            maximum: 1000
      summary: Search for customers
      operationId: getPeopleFilter
      security:
        - Bearer-Auth-(App-API-Key): []
      description: |
        Provide a filter to search for people in your workspace. Returns arrays of `identifiers` and `ids`. In general, you should rely on the newer `identifiers` array, which contains more complete information about each person captured by the filter in your request, than the `ids` array, which only contains `id` values.

        You can return up to 1000 people per request. If you want to return a larger set of people in a single request, you may want to use the [`/exports`](#tag/Exports) API instead.

        Use the `and`, `or`, and `not` arrays to create a complex filter for people. 
      tags:
        - Customers
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - filter
              properties:
                filter:
                  description: Describe the customers you want to return. Use `and`, `or`, and `not` arrays to group and determine the logic for filter criteria. You can nest and, or, and not arrays to produce complex filters.
                  title: Audience Filter
                  oneOf:
                    - title: and
                      type: object
                      properties:
                        and:
                          type: array
                          description: Match *all* conditions to return results.
                          items:
                            title: People Filter
                            type: object
                            description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                            properties:
                              and:
                                type: array
                                description: Returns results matching *all* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              or:
                                type: array
                                description: Returns results matching *any* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              not:
                                description: Returns results if a condition is false.
                                type: object
                                properties:
                                  and:
                                    type: array
                                    description: Match *all* conditions to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  or:
                                    type: array
                                    description: Match *any* condition to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                              segment:
                                title: segment
                                type: object
                                description: Provide the `id` of a segment containing people you want to search for.
                                properties:
                                  id:
                                    type: integer
                                    description: The ID of the segment you want to return people from.
                                    example: 4
                              attribute:
                                title: attribute
                                description: Filter your audience by attribute.
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: The name of the attribute you want to filter against.
                                    example: first_name
                                  operator:
                                    type: string
                                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                    enum:
                                      - eq
                                      - exists
                                  value:
                                    type: string
                                    description: The value you want to match for this attribute.
                                example:
                                  field: unsubscribed
                                  operator: eq
                                  value: true
                    - title: or
                      type: object
                      properties:
                        or:
                          type: array
                          description: Match *any* condition to return results.
                          items:
                            title: People Filter
                            type: object
                            description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                            properties:
                              and:
                                type: array
                                description: Returns results matching *all* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              or:
                                type: array
                                description: Returns results matching *any* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              not:
                                description: Returns results if a condition is false.
                                type: object
                                properties:
                                  and:
                                    type: array
                                    description: Match *all* conditions to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  or:
                                    type: array
                                    description: Match *any* condition to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                              segment:
                                title: segment
                                type: object
                                description: Provide the `id` of a segment containing people you want to search for.
                                properties:
                                  id:
                                    type: integer
                                    description: The ID of the segment you want to return people from.
                                    example: 4
                              attribute:
                                title: attribute
                                description: Filter your audience by attribute.
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: The name of the attribute you want to filter against.
                                    example: first_name
                                  operator:
                                    type: string
                                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                    enum:
                                      - eq
                                      - exists
                                  value:
                                    type: string
                                    description: The value you want to match for this attribute.
                                example:
                                  field: unsubscribed
                                  operator: eq
                                  value: true
                    - title: not
                      type: object
                      description: Match if a condition is false.
                      properties:
                        not:
                          title: People Filter
                          type: object
                          description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                          properties:
                            and:
                              type: array
                              description: Returns results matching *all* conditions.
                              items:
                                type: object
                                properties:
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                            or:
                              type: array
                              description: Returns results matching *any* conditions.
                              items:
                                type: object
                                properties:
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                            not:
                              description: Returns results if a condition is false.
                              type: object
                              properties:
                                and:
                                  type: array
                                  description: Match *all* conditions to return results.
                                  items:
                                    type: object
                                    properties:
                                      segment:
                                        title: segment
                                        type: object
                                        description: Provide the `id` of a segment containing people you want to search for.
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the segment you want to return people from.
                                            example: 4
                                      attribute:
                                        title: attribute
                                        description: Filter your audience by attribute.
                                        type: object
                                        properties:
                                          field:
                                            type: string
                                            description: The name of the attribute you want to filter against.
                                            example: first_name
                                          operator:
                                            type: string
                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                            enum:
                                              - eq
                                              - exists
                                          value:
                                            type: string
                                            description: The value you want to match for this attribute.
                                        example:
                                          field: unsubscribed
                                          operator: eq
                                          value: true
                                or:
                                  type: array
                                  description: Match *any* condition to return results.
                                  items:
                                    type: object
                                    properties:
                                      segment:
                                        title: segment
                                        type: object
                                        description: Provide the `id` of a segment containing people you want to search for.
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the segment you want to return people from.
                                            example: 4
                                      attribute:
                                        title: attribute
                                        description: Filter your audience by attribute.
                                        type: object
                                        properties:
                                          field:
                                            type: string
                                            description: The name of the attribute you want to filter against.
                                            example: first_name
                                          operator:
                                            type: string
                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                            enum:
                                              - eq
                                              - exists
                                          value:
                                            type: string
                                            description: The value you want to match for this attribute.
                                        example:
                                          field: unsubscribed
                                          operator: eq
                                          value: true
                                segment:
                                  title: segment
                                  type: object
                                  description: Provide the `id` of a segment containing people you want to search for.
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the segment you want to return people from.
                                      example: 4
                                attribute:
                                  title: attribute
                                  description: Filter your audience by attribute.
                                  type: object
                                  properties:
                                    field:
                                      type: string
                                      description: The name of the attribute you want to filter against.
                                      example: first_name
                                    operator:
                                      type: string
                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                      enum:
                                        - eq
                                        - exists
                                    value:
                                      type: string
                                      description: The value you want to match for this attribute.
                                  example:
                                    field: unsubscribed
                                    operator: eq
                                    value: true
                            segment:
                              title: segment
                              type: object
                              description: Provide the `id` of a segment containing people you want to search for.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the segment you want to return people from.
                                  example: 4
                            attribute:
                              title: attribute
                              description: Filter your audience by attribute.
                              type: object
                              properties:
                                field:
                                  type: string
                                  description: The name of the attribute you want to filter against.
                                  example: first_name
                                operator:
                                  type: string
                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                  enum:
                                    - eq
                                    - exists
                                value:
                                  type: string
                                  description: The value you want to match for this attribute.
                              example:
                                field: unsubscribed
                                operator: eq
                                value: true
                    - title: segment
                      type: object
                      description: Provide the `id` of a segment containing people you want to search for.
                      properties:
                        id:
                          type: integer
                          description: The ID of the segment you want to return people from.
                          example: 4
                    - title: attribute
                      description: Filter your audience by attribute.
                      type: object
                      properties:
                        field:
                          type: string
                          description: The name of the attribute you want to filter against.
                          example: first_name
                        operator:
                          type: string
                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                          enum:
                            - eq
                            - exists
                        value:
                          type: string
                          description: The value you want to match for this attribute.
                      example:
                        field: unsubscribed
                        operator: eq
                        value: true
      responses:
        '200':
          description: Returns an array of customers matching your filters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifiers:
                    type: array
                    description: An array of objects, where each object represents a customer. Each object contains identifiers for a customer.
                    items:
                      type: object
                      required:
                        - email
                        - id
                        - cio_id
                      properties:
                        email:
                          type: string
                          nullable: true
                          format: email
                          description: A person's email address, if set.
                          example: hugh.mann@example.com
                        id:
                          type: string
                          nullable: true
                          description: A person's unique ID, if set.
                          example: 2
                        cio_id:
                          type: string
                          description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                          example: 786433
                  ids:
                    type: array
                    description: |
                      In general, you should use the `identifiers` array. This array contains identifiers for people captured in your filter. However, as of June 2021, some workspaces let you add people without an `id`. Entries without an `id` are empty strings in this array, where the `identifiers` array contains more complete information for each person captured in the filter.
                    items:
                      type: string
                  next:
                    type: string
                    description: The `start` value for the next page of results.
                example:
                  identifiers:
                    - id: 1
                      email: person@example.com
                      cio_id: 3000001
                    - id: 2
                      email: second.person@exapmle.com
                      cio_id: 3000002
                  ids:
                    - 1
                    - 2
                  next: MDox
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url 'https://api.customer.io/v1/customers?start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE' \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"filter":{"and":[{"and":[{"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}],"or":[{"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}],"not":{"and":[{"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}],"or":[{"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}],"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}},"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}]}}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/customers?start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              filter: {
                and: [
                  {
                    and: [
                      {
                        segment: {id: 4},
                        attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                      }
                    ],
                    or: [
                      {
                        segment: {id: 4},
                        attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                      }
                    ],
                    not: {
                      and: [
                        {
                          segment: {id: 4},
                          attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                        }
                      ],
                      or: [
                        {
                          segment: {id: 4},
                          attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                        }
                      ],
                      segment: {id: 4},
                      attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                    },
                    segment: {id: 4},
                    attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                  }
                ]
              }
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/customers?start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"filter\":{\"and\":[{\"and\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"or\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"not\":{\"and\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"or\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}},\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}]}}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"filter\":{\"and\":[{\"and\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"or\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"not\":{\"and\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"or\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}},\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}]}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("POST", "/v1/customers?start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/customers?start=SOME_STRING_VALUE&limit=SOME_INTEGER_VALUE\"\n\n\tpayload := strings.NewReader(\"{\\\"filter\\\":{\\\"and\\\":[{\\\"and\\\":[{\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}],\\\"or\\\":[{\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}],\\\"not\\\":{\\\"and\\\":[{\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}],\\\"or\\\":[{\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}],\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}},\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}]}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/customers/{customer_id}/attributes:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: customer_id
        required: true
        in: path
        description: The ID of the customer you want to perform an operation against.
        schema:
          type: string
          example: 12345
      - name: id_type
        required: false
        in: query
        description: The type of `customer_id` you want to use to reference a person. If you don't provide this parameter, we assume that the `customer_id` in your request is a person's `id`.
        schema:
          type: string
          enum:
            - id
            - email
            - cio_id
    get:
      tags:
        - Customers
      summary: Lookup a customer's attributes
      operationId: getPersonAttributes
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return a list of attributes for a customer profile. You can use attributes to fashion segments or as liquid merge fields in your messages.
      responses:
        '200':
          description: Returns the `customer` and associated attributes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  customer:
                    type: object
                    description: The profile you referenced by ID in the request.
                    properties:
                      id:
                        type: string
                        description: The customer ID referenced in the request.
                      identifiers:
                        type: object
                        description: |
                          Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                          We recommend that you use this object rather than the less descriptive `customer_id`.
                        required:
                          - email
                          - id
                          - cio_id
                        properties:
                          email:
                            type: string
                            nullable: true
                            format: email
                            description: A person's email address, if set.
                            example: cool.person@example.com
                          id:
                            type: string
                            nullable: true
                            description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                            example: 2
                          cio_id:
                            type: string
                            description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                            example: 786433
                      attributes:
                        type: object
                        description: Contains attributes assigned to this profile, including your workspace's people-identifiers (by default, these are `id`, `email`, and `cio_id`). Attributes are all stored as strings.
                        properties:
                          id:
                            type: string
                            description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                            nullable: true
                            example: '42'
                          email:
                            type: string
                            description: The email address of the customer.
                            nullable: true
                            example: test@example.com
                          cio_id:
                            type: string
                            description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                            example: 786433
                        additionalProperties:
                          x-additionalPropertiesName: additional attributes
                          description: Non-identifier attributes assigned to this person.
                          type: string
                      timestamps:
                        type: object
                        description: The epoch timestamps when corresponding attributes were set on the customer profile.
                        properties:
                          cio_id:
                            type: integer
                            description: The date-time when `cio_id` was assigned.
                            format: unix timestamp
                          _last_emailed:
                            type: integer
                            description: The date-time when you last emailed a person.
                            format: unix timestamp
                          email:
                            type: integer
                            description: The date-time when the person's email address was added.
                            format: unix timestamp
                          id:
                            type: integer
                            description: The date-time when the person's ID was generated.
                            format: unix timestamp
                          unsubscribed:
                            type: integer
                            description: The date-time when the person unsubscribed.
                            format: unix timestamp
                          additionalProperties:
                            x-additionalPropertiesName: additional attribute timestamps
                            description: Timestamps when attributes assigned to the person were set.
                            format: unix timestamp
                      unsubscribed:
                        type: boolean
                        description: If true, the person is unsubscribed from messages.
                      devices:
                        type: array
                        description: Lists the devices associated with the customer profile.
                        items:
                          description: The properties representing an individual device. [Our SDK's](/docs/sdk/) gather all the properties defined below automatically, unless you disable the `autoTrackDeviceAttributes` setting. You can reference the properties outside the `attributes` object in segments or in Liquid.
                          type: object
                          required:
                            - id
                            - platform
                          properties:
                            id:
                              description: The device token.
                              type: string
                            last_used:
                              type: integer
                              format: unix timestamp
                              description: The `timestamp` when you last identified this device. If you don't pass a timestamp when you add or update a device, we use the time of the request itself. Our SDKs identify a device when a person launches their app.
                            platform:
                              type: string
                              enum:
                                - ios
                                - android
                              description: The device/messaging platform.
                            attributes:
                              type: object
                              description: Attributes that you can reference to segment your audience—like a person's attributes, but specific to a device. These can be either the attributes defined below or custom key-value attributes.
                              properties:
                                device_os:
                                  type: string
                                  description: The operating system, including the version, on the device.
                                device_model:
                                  type: string
                                  description: The model of the device a person uses.
                                app_version:
                                  type: string
                                  description: The version of your app that a customer users. You might target app versions to let people know when they need to update, or expose them to new features when they do.
                                cio_sdk_version:
                                  type: string
                                  description: The version of the Customer.io SDK in the app.
                                _last_status:
                                  type: string
                                  readOnly: true
                                  description: The delivery status of the last message sent to the device—sent, bounced, or suppressed. An empty string indicates that that the device hasn't received a push yet.
                                  enum:
                                    - ''
                                    - bounced
                                    - sent
                                    - suppressed
                                device_locale:
                                  type: string
                                  description: The four-letter [IETF language code](/docs/localization/#supported-languages) for the device. For example, `en-MX` (indicating an app in Spanish formatted for a user in Mexico) or `es-ES` (indicating an app in Spanish formatted for a user in Spain).
                                push_enabled:
                                  type: string
                                  description: If `"true"`, the device is opted-in and can receive push notifications.
                                  enum:
                                    - 'true'
                                    - 'false'
                              additionalProperties:
                                x-additionalPropertiesName: Custom Device Attributes
                                description: Custom properties that you want to associate with the device.
                                type: string
                example:
                  customer:
                    id: '1'
                    attributes:
                      _last_emailed: '1528932553'
                      created_at: '1489014595'
                      email: test@example.com
                      title: tester
                      department: qa
                      id: '1'
                      cio_id: '03000001'
                    timestamps:
                      cio_id: 1489014595
                      _last_emailed: 1528932553
                      created_at: 1489014595
                      email: 1508932553
                      id: 1489014595
                      department: 1508932553
                      title: 1508932553
                    unsubscribed: false
                    devices:
                      - id: my_android_device_id
                        last_used: 1514764800
                        platform: android
                      - id: my_ios_device_id
                        last_used: 1514764800
                        platform: ios
        '404':
          description: The `customer_id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/customers/{customer_id}/attributes \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/customers/{customer_id}/attributes",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/customers/{customer_id}/attributes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/customers/{customer_id}/attributes", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/customers/{customer_id}/attributes\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/customers/attributes:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    post:
      tags:
        - Customers
      summary: List customers, attributes, and devices
      operationId: getPeopleById
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return attributes and devices for up to 100 customers by ID. If an ID in the request does not exist, the response omits it.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - ids
              properties:
                ids:
                  description: An array of up to 100 customer IDs.
                  type: array
                  minItems: 1
                  maxItems: 100
                  items:
                    type: string
      responses:
        '200':
          description: Returns an array of `customers`. Each object represents a customer profile.
          content:
            application/json:
              schema:
                type: object
                properties:
                  customers:
                    type: array
                    items:
                      type: object
                      properties:
                        customer:
                          type: object
                          description: The profile you referenced by ID in the request.
                          properties:
                            id:
                              type: string
                              description: The customer ID referenced in the request.
                            identifiers:
                              type: object
                              description: |
                                Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                                We recommend that you use this object rather than the less descriptive `customer_id`.
                              required:
                                - email
                                - id
                                - cio_id
                              properties:
                                email:
                                  type: string
                                  nullable: true
                                  format: email
                                  description: A person's email address, if set.
                                  example: cool.person@example.com
                                id:
                                  type: string
                                  nullable: true
                                  description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                                  example: 2
                                cio_id:
                                  type: string
                                  description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                                  example: 786433
                            attributes:
                              type: object
                              description: Contains attributes assigned to this profile, including your workspace's people-identifiers (by default, these are `id`, `email`, and `cio_id`). Attributes are all stored as strings.
                              properties:
                                id:
                                  type: string
                                  description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                  nullable: true
                                  example: '42'
                                email:
                                  type: string
                                  description: The email address of the customer.
                                  nullable: true
                                  example: test@example.com
                                cio_id:
                                  type: string
                                  description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                                  example: 786433
                              additionalProperties:
                                x-additionalPropertiesName: additional attributes
                                description: Non-identifier attributes assigned to this person.
                                type: string
                            timestamps:
                              type: object
                              description: The epoch timestamps when corresponding attributes were set on the customer profile.
                              properties:
                                cio_id:
                                  type: integer
                                  description: The date-time when `cio_id` was assigned.
                                  format: unix timestamp
                                _last_emailed:
                                  type: integer
                                  description: The date-time when you last emailed a person.
                                  format: unix timestamp
                                email:
                                  type: integer
                                  description: The date-time when the person's email address was added.
                                  format: unix timestamp
                                id:
                                  type: integer
                                  description: The date-time when the person's ID was generated.
                                  format: unix timestamp
                                unsubscribed:
                                  type: integer
                                  description: The date-time when the person unsubscribed.
                                  format: unix timestamp
                                additionalProperties:
                                  x-additionalPropertiesName: additional attribute timestamps
                                  description: Timestamps when attributes assigned to the person were set.
                                  format: unix timestamp
                            unsubscribed:
                              type: boolean
                              description: If true, the person is unsubscribed from messages.
                            devices:
                              type: array
                              description: Lists the devices associated with the customer profile.
                              items:
                                description: The properties representing an individual device. [Our SDK's](/docs/sdk/) gather all the properties defined below automatically, unless you disable the `autoTrackDeviceAttributes` setting. You can reference the properties outside the `attributes` object in segments or in Liquid.
                                type: object
                                required:
                                  - id
                                  - platform
                                properties:
                                  id:
                                    description: The device token.
                                    type: string
                                  last_used:
                                    type: integer
                                    format: unix timestamp
                                    description: The `timestamp` when you last identified this device. If you don't pass a timestamp when you add or update a device, we use the time of the request itself. Our SDKs identify a device when a person launches their app.
                                  platform:
                                    type: string
                                    enum:
                                      - ios
                                      - android
                                    description: The device/messaging platform.
                                  attributes:
                                    type: object
                                    description: Attributes that you can reference to segment your audience—like a person's attributes, but specific to a device. These can be either the attributes defined below or custom key-value attributes.
                                    properties:
                                      device_os:
                                        type: string
                                        description: The operating system, including the version, on the device.
                                      device_model:
                                        type: string
                                        description: The model of the device a person uses.
                                      app_version:
                                        type: string
                                        description: The version of your app that a customer users. You might target app versions to let people know when they need to update, or expose them to new features when they do.
                                      cio_sdk_version:
                                        type: string
                                        description: The version of the Customer.io SDK in the app.
                                      _last_status:
                                        type: string
                                        readOnly: true
                                        description: The delivery status of the last message sent to the device—sent, bounced, or suppressed. An empty string indicates that that the device hasn't received a push yet.
                                        enum:
                                          - ''
                                          - bounced
                                          - sent
                                          - suppressed
                                      device_locale:
                                        type: string
                                        description: The four-letter [IETF language code](/docs/localization/#supported-languages) for the device. For example, `en-MX` (indicating an app in Spanish formatted for a user in Mexico) or `es-ES` (indicating an app in Spanish formatted for a user in Spain).
                                      push_enabled:
                                        type: string
                                        description: If `"true"`, the device is opted-in and can receive push notifications.
                                        enum:
                                          - 'true'
                                          - 'false'
                                    additionalProperties:
                                      x-additionalPropertiesName: Custom Device Attributes
                                      description: Custom properties that you want to associate with the device.
                                      type: string
                      example:
                        customer:
                          id: '1'
                          attributes:
                            _last_emailed: '1528932553'
                            created_at: '1489014595'
                            email: test@example.com
                            title: tester
                            department: qa
                            id: '1'
                            cio_id: '03000001'
                          timestamps:
                            cio_id: 1489014595
                            _last_emailed: 1528932553
                            created_at: 1489014595
                            email: 1508932553
                            id: 1489014595
                            department: 1508932553
                            title: 1508932553
                          unsubscribed: false
                          devices:
                            - id: my_android_device_id
                              last_used: 1514764800
                              platform: android
                            - id: my_ios_device_id
                              last_used: 1514764800
                              platform: ios
        '400':
          description: The request is malformed.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://api.customer.io/v1/customers/attributes \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"ids":["string"]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/customers/attributes",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ids: ['string']}));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/customers/attributes")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"ids\":[\"string\"]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"ids\":[\"string\"]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("POST", "/v1/customers/attributes", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/customers/attributes\"\n\n\tpayload := strings.NewReader(\"{\\\"ids\\\":[\\\"string\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/customers/{customer_id}/segments:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: customer_id
        required: true
        in: path
        description: The ID of the customer you want to perform an operation against.
        schema:
          type: string
          example: 12345
      - name: id_type
        required: false
        in: query
        description: The type of `customer_id` you want to use to reference a person. If you don't provide this parameter, we assume that the `customer_id` in your request is a person's `id`.
        schema:
          type: string
          enum:
            - id
            - email
            - cio_id
    get:
      tags:
        - Customers
      summary: Lookup a customer's segments
      operationId: getPersonSegments
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of segments that a customer profile belongs to.
      responses:
        '200':
          description: Returns an array of segments that the customer belongs to.
          content:
            application/json:
              schema:
                type: object
                properties:
                  segments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The segment identifier.
                        name:
                          type: string
                          description: The name of the segment.
                        description:
                          type: string
                          description: The description of the segment, as entered in the UI.
        '404':
          description: The `customer_id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/customers/{customer_id}/segments \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/customers/{customer_id}/segments",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/customers/{customer_id}/segments")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/customers/{customer_id}/segments", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/customers/{customer_id}/segments\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/customers/{customer_id}/messages:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: customer_id
        required: true
        in: path
        description: The ID of the customer you want to perform an operation against.
        schema:
          type: string
          example: 12345
      - name: id_type
        required: false
        in: query
        description: The type of `customer_id` you want to use to reference a person. If you don't provide this parameter, we assume that the `customer_id` in your request is a person's `id`.
        schema:
          type: string
          enum:
            - id
            - email
            - cio_id
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
          default: 50
          maximum: 1000
    get:
      tags:
        - Customers
      summary: Lookup messages sent to a customer
      operationId: getPersonMessages
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return metadata for the messages sent to a customer profile.
      responses:
        '200':
          description: Returns an array of message objects. Each object represents a message that you sent a customer.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: The message identifier.
                        deduplicate_id:
                          type: string
                          description: A group identifier to deduplicate messages (useful if a customer may have received multiple messages of the same type).
                        msg_template_id:
                          type: string
                          deprecated: true
                          description: The message template the message was created from.
                        customer_id:
                          type: string
                          description: The customer the message was sent to.
                        campaign_id:
                          type: integer
                          description: The campaign the message belongs to.
                        action_id:
                          type: integer
                          description: The identifier for the message action within the campaign or broadcast the message belonged to.
                        recipient:
                          type: string
                          description: The address of the recipient. May be an email address, MSISDN, or a device UUID.
                        subject:
                          type: string
                          description: The subject line of the message.
                        metrics:
                          type: object
                          description: Contains information about the send and delivery time of the message.
                          properties:
                            delivered:
                              type: integer
                              format: unix timestamp
                              description: The date and time when the customer received the message.
                            sent:
                              type: integer
                              format: unix timestamp
                              description: The date and time when the message was sent.
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date and time when the message was created.
                        failure_message:
                          type: string
                          description: An error, if the message did not make it to the customer.
                          nullable: true
                        newsletter_id:
                          type: integer
                          description: The newsletter that the message was sent as a part of, if applicable.
                          nullable: true
                        content_id:
                          type: integer
                          description: The newsletter variant for the message, if applicable.
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The broadcast the message was sent as a part of, if applicable.
                          nullable: true
                        type:
                          type: string
                          description: The type of message.
                          enum:
                            - email
                            - webhook
                            - twilio
                            - urban_airship
                            - slack
                            - push
                        forgotten:
                          type: boolean
                          description: If true, the message content was forgotten.
        '404':
          description: The `customer_id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/customers/{customer_id}/messages \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/customers/{customer_id}/messages",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/customers/{customer_id}/messages")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/customers/{customer_id}/messages", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/customers/{customer_id}/messages\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/customers/{customer_id}/activities:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: customer_id
        required: true
        in: path
        description: The ID of the customer you want to perform an operation against.
        schema:
          type: string
          example: 12345
      - name: id_type
        required: false
        in: query
        description: The type of `customer_id` you want to use to reference a person. If you don't provide this parameter, we assume that the `customer_id` in your request is a person's `id`.
        schema:
          type: string
          enum:
            - id
            - email
            - cio_id
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
          default: 10
          maximum: 100
      - name: type
        description: The type of activity you want to search for.
        in: query
        required: false
        schema:
          description: The activity type.
          type: string
          enum:
            - page
            - event
            - attribute_change
            - failed_attribute_change
            - stripe_event
            - drafted_email
            - failed_email
            - dropped_email
            - sent_email
            - spammed_email
            - bounced_email
            - delivered_email
            - triggered_email
            - opened_email
            - clicked_email
            - converted_email
            - unsubscribed_email
            - attempted_email
            - undeliverable_email
            - device_change
            - attempted_action
            - drafted_action
            - sent_action
            - delivered_action
            - bounced_action
            - failed_action
            - converted_action
            - undeliverable_action
            - opened_action
            - secondary:dropped_email
            - secondary:spammed_email
            - secondary:bounced_email
            - secondary:delivered_email
            - secondary:opened_email
            - secondary:clicked_email
            - secondary:failed_email
          example: sent_email
      - name: name
        in: query
        description: For `event` and `attribute_update` types, you can search by event or attribute name respectively.
        required: false
        schema:
          type: string
    get:
      tags:
        - Customers
      summary: Lookup a customer's activities
      operationId: getPersonActivities
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return a list of activities performed by, or for, a customer. Activities are things like attribute changes and message sends.
      responses:
        '200':
          description: Returns an array of activity objects. Each object represents an activity that the customer performed, or that you performed on behalf of the customer.
          content:
            application/json:
              schema:
                type: object
                properties:
                  activities:
                    type: array
                    items:
                      type: object
                      properties:
                        customer_id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        customer_identifiers:
                          type: object
                          description: |
                            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                            We recommend that you use this object rather than the less descriptive `customer_id`.
                          required:
                            - email
                            - id
                            - cio_id
                          properties:
                            email:
                              type: string
                              nullable: true
                              format: email
                              description: A person's email address, if set.
                              example: cool.person@example.com
                            id:
                              type: string
                              nullable: true
                              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                              example: 2
                            cio_id:
                              type: string
                              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                              example: 786433
                        data:
                          oneOf:
                            - title: Message delivery
                              type: object
                              properties:
                                delivered:
                                  type: integer
                                  format: unix timestamp
                                  description: The date-time when the message was delivered, if applicable.
                                  nullable: true
                                delivery_id:
                                  type: string
                                  description: The message ID.
                                opened:
                                  type: boolean
                                  nullable: true
                                  description: Indicates whether or not a customer opened a message, if the message was delivered.
                              example:
                                delivery_id: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                opened: null
                                delivered: null
                            - title: Attribute change
                              description: The name of the object is the attribute that changed.
                              type: object
                              additionalProperties:
                                x-additionalPropertyName: Attribute Name
                                type: object
                                properties:
                                  from:
                                    type: string
                                    description: The old attribute value. If empty, the customer probably didn't bear the attribute before this action.
                                  to:
                                    type: string
                                    description: The new attribute value.
                              example:
                                email:
                                  from: newPerson@example.com
                                  to: newPerson@customer.io
                        delivery_id:
                          type: string
                          description: The message ID.
                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                        delivery_type:
                          type: string
                          description: The recipient device, if applicable.
                          enum:
                            - ios
                            - android
                            - email
                            - phone
                          example: email
                        id:
                          description: The identifier for the action.
                          type: string
                          example: 01AK4N8V8G8KVA4HN8Y50CCZ59
                        timestamp:
                          type: integer
                          format: unix timestamp
                          description: The date and time when the action occurred.
                          example: 1397566226
                        type:
                          description: The activity type.
                          type: string
                          enum:
                            - page
                            - event
                            - attribute_change
                            - failed_attribute_change
                            - stripe_event
                            - drafted_email
                            - failed_email
                            - dropped_email
                            - sent_email
                            - spammed_email
                            - bounced_email
                            - delivered_email
                            - triggered_email
                            - opened_email
                            - clicked_email
                            - converted_email
                            - unsubscribed_email
                            - attempted_email
                            - undeliverable_email
                            - device_change
                            - attempted_action
                            - drafted_action
                            - sent_action
                            - delivered_action
                            - bounced_action
                            - failed_action
                            - converted_action
                            - undeliverable_action
                            - opened_action
                            - secondary:dropped_email
                            - secondary:spammed_email
                            - secondary:bounced_email
                            - secondary:delivered_email
                            - secondary:opened_email
                            - secondary:clicked_email
                            - secondary:failed_email
                          example: sent_email
        '400':
          description: The request parameters are malformed.
        '404':
          description: The `customer_id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/customers/{customer_id}/activities \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/customers/{customer_id}/activities",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/customers/{customer_id}/activities")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/customers/{customer_id}/activities", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/customers/{customer_id}/activities\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/esp/search_suppression/{email_address}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: email_address
        in: path
        required: true
        description: The email address of the person you want to look up.
        schema:
          type: string
    get:
      summary: Look up an ESP-suppressed address
      operationId: getSuppression
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Look up an email address to learn if, and why, it was suppressed by the email service provider (ESP).
      tags:
        - ESP Suppression
      responses:
        '200':
          description: Returns an array of suppressed email addresses.
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: string
                    description: The reason the addresses are suppressed.
                    enum:
                      - bounces
                      - blocks
                      - spam
                      - invalid
                    example: bounces
                  suppressions:
                    type: array
                    description: The addresses suppressed in this category.
                    items:
                      type: object
                      properties:
                        created:
                          type: integer
                          format: Unix timestamp
                          description: The timestamp (in seconds), when the ESP suppressed the address.
                          example: 1650895738
                        email:
                          type: string
                          description: The email address that the ESP suppressed.
                          example: bounced.person@example.com
                        reason:
                          type: string
                          description: The reason for the suppression, as [recorded by Mailgun](https://documentation.mailgun.com/en/latest/api-suppressions.html).
                          example: Uploaded manually via api.customer.io
                        status:
                          type: string
                          description: The status code for the suppression, as [recorded by mailgun](https://documentation.mailgun.com/en/latest/api-suppressions.html). This is normally `550`.
                          example: '550'
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/esp/search_suppression/{email_address} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/esp/search_suppression/{email_address}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/esp/search_suppression/{email_address}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/esp/search_suppression/{email_address}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/esp/search_suppression/{email_address}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/esp/suppression/{suppression_type}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: suppression_type
        description: The reason a person's email address was suppressed by the email service provider (ESP).
        in: path
        required: true
        schema:
          type: string
          enum:
            - bounces
            - blocks
            - spam_reports
            - invalid_emails
    get:
      summary: Get ESP-suppressed emails by type
      operationId: getSuppression
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Find addresses suppressed by the Email Service Provider (ESP) for a particular reason—bounces, blocks, spam reports, or invalid email addresses.
      tags:
        - ESP Suppression
      responses:
        '200':
          description: Returns an array of suppressed email addresses.
          content:
            application/json:
              schema:
                type: object
                properties:
                  category:
                    type: string
                    description: The reason the addresses are suppressed.
                    enum:
                      - bounces
                      - blocks
                      - spam
                      - invalid
                    example: bounces
                  suppressions:
                    type: array
                    description: The addresses suppressed in this category.
                    items:
                      type: object
                      properties:
                        created:
                          type: integer
                          format: Unix timestamp
                          description: The timestamp (in seconds), when the ESP suppressed the address.
                          example: 1650895738
                        email:
                          type: string
                          description: The email address that the ESP suppressed.
                          example: bounced.person@example.com
                        reason:
                          type: string
                          description: The reason for the suppression, as [recorded by Mailgun](https://documentation.mailgun.com/en/latest/api-suppressions.html).
                          example: Uploaded manually via api.customer.io
                        status:
                          type: string
                          description: The status code for the suppression, as [recorded by mailgun](https://documentation.mailgun.com/en/latest/api-suppressions.html). This is normally `550`.
                          example: '550'
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/esp/suppression/{suppression_type} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/esp/suppression/{suppression_type}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/esp/suppression/{suppression_type}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/esp/suppression/{suppression_type}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/esp/suppression/{suppression_type}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/esp/suppression/{suppression_type}/{email_address}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: suppression_type
        description: The reason a person's email address was suppressed by the email service provider (ESP).
        in: path
        required: true
        schema:
          type: string
          enum:
            - bounces
            - blocks
            - spam_reports
            - invalid_emails
      - name: email_address
        in: path
        required: true
        description: The email address of the person you want to look up.
        schema:
          type: string
    delete:
      summary: Un-suppress an ESP-suppressed address
      operationId: deleteSuppression
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Remove an address from the ESP's suppression list.
      tags:
        - ESP Suppression
      responses:
        '204':
          description: A successful request produces no content.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request DELETE \
              --url https://api.customer.io/v1/esp/suppression/{suppression_type}/{email_address} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/esp/suppression/{suppression_type}/{email_address}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/esp/suppression/{suppression_type}/{email_address}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("DELETE", "/v1/esp/suppression/{suppression_type}/{email_address}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/esp/suppression/{suppression_type}/{email_address}\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    post:
      summary: Suppress an email at the ESP
      operationId: postSuppression
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Suppress an email address at the email service provider (ESP). Addresses suppressed this way are only suppressed through the ESP; these adresses are _not_ suppressed in Customer.io, so the person can remain in your workspace (though emails to the address would be blocked at the ESP).
      tags:
        - ESP Suppression
      responses:
        '200':
          description: A successful request produces an empty response.
          content:
            application/json:
              schema:
                type: object
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://api.customer.io/v1/esp/suppression/{suppression_type}/{email_address} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/esp/suppression/{suppression_type}/{email_address}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/esp/suppression/{suppression_type}/{email_address}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("POST", "/v1/esp/suppression/{suppression_type}/{email_address}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/esp/suppression/{suppression_type}/{email_address}\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/exports:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      summary: List exports
      operationId: listExports
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return a list of your exports. Exports are point-in-time people or campaign metrics.
      tags:
        - Exports
      responses:
        '200':
          description: Returns an array of exports.
          content:
            application/json:
              schema:
                type: object
                properties:
                  exports:
                    type: array
                    items:
                      type: object
                      description: Metadata about an export.
                      properties:
                        id:
                          type: integer
                          description: The identifier for the export.
                          example: 110
                        user_id:
                          type: integer
                          description: The user who created the export.
                        user_email:
                          type: string
                          description: The email of the user who created the export.
                        total:
                          type: integer
                          description: The number of entries in the export. Exports report 0 until done.
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        type:
                          type: string
                          description: The type of information contained in the export.
                          enum:
                            - customers
                            - deliveries
                          example: customers
                        failed:
                          type: boolean
                          description: If true, the export was unsuccessful.
                          example: false
                        description:
                          type: string
                          description: A description of the export.
                          example: Customers with segment filters—in Purchased Flowers
                        downloads:
                          type: integer
                          description: Counts the total number of times the export has been downloaded.
                          example: 2
                        created_at:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        updated_at:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was last updated.
                          example: 1552341937
                        status:
                          type: string
                          enum:
                            - done
                            - pending
                            - failed
                          description: The state of your export where `done` indicates an export that you can download, `pending`, indicates that your export is not ready to download, and `failed` indicates an export that has failed and will not be downloadable.
                      example:
                        id: 110
                        user_id: 0
                        user_email: person@email.com
                        total: 1234
                        deduplicate_id: '110:1530296738'
                        type: customers
                        failed: false
                        status: done
                        description: Customers with segment filters—in \Purchased Flowers\
                        downloads: 2
                        created_at: 1530296738
                        updated_at: 1530296738
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/exports \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/exports",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/exports")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/exports", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/exports\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/exports/{export_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: export_id
        in: path
        required: true
        description: The export_id you want to access.
        schema:
          type: integer
    get:
      summary: Get an export
      operationId: getExport
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return information about a specific export.
      tags:
        - Exports
      responses:
        '200':
          description: Returns an export.
          content:
            application/json:
              schema:
                type: object
                properties:
                  export:
                    type: object
                    description: Metadata about an export.
                    properties:
                      id:
                        type: integer
                        description: The identifier for the export.
                        example: 110
                      user_id:
                        type: integer
                        description: The user who created the export.
                      user_email:
                        type: string
                        description: The email of the user who created the export.
                      total:
                        type: integer
                        description: The number of entries in the export. Exports report 0 until done.
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      type:
                        type: string
                        description: The type of information contained in the export.
                        enum:
                          - customers
                          - deliveries
                        example: customers
                      failed:
                        type: boolean
                        description: If true, the export was unsuccessful.
                        example: false
                      description:
                        type: string
                        description: A description of the export.
                        example: Customers with segment filters—in Purchased Flowers
                      downloads:
                        type: integer
                        description: Counts the total number of times the export has been downloaded.
                        example: 2
                      created_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      status:
                        type: string
                        enum:
                          - done
                          - pending
                          - failed
                        description: The state of your export where `done` indicates an export that you can download, `pending`, indicates that your export is not ready to download, and `failed` indicates an export that has failed and will not be downloadable.
                    example:
                      id: 110
                      user_id: 0
                      user_email: person@email.com
                      total: 1234
                      deduplicate_id: '110:1530296738'
                      type: customers
                      failed: false
                      status: done
                      description: Customers with segment filters—in \Purchased Flowers\
                      downloads: 2
                      created_at: 1530296738
                      updated_at: 1530296738
        '404':
          description: The export ID does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/exports/{export_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/exports/{export_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/exports/{export_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/exports/{export_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/exports/{export_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/exports/{export_id}/download:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: export_id
        in: path
        required: true
        description: The export_id you want to access.
        schema:
          type: integer
    get:
      summary: Download an export
      operationId: downloadExport
      security:
        - Bearer-Auth-(App-API-Key): []
      description: This endpoint returns a signed link to download an export. The link expires after 15 minutes.
      tags:
        - Exports
      responses:
        '200':
          description: Returns a link to an export.
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    format: url
                    description: A link to download your export. Expires after 15 minutes.
        '404':
          description: The export ID does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/exports/{export_id}/download \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/exports/{export_id}/download",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/exports/{export_id}/download")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/exports/{export_id}/download", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/exports/{export_id}/download\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/exports/customers:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    post:
      summary: Export customer data
      operationId: exportPeopleData
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Provide filters and attributes describing the customers you want to export. This endpoint returns export metadata; use the `/exports/{export_id}/endpoint` to download your export.
      tags:
        - Exports
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - filters
              properties:
                filters:
                  title: Audience Filter
                  description: |
                    When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.

                    The top level of this object can only contain a single property, but you can nest `and` and `or` properties to produce complex filters.
                  oneOf:
                    - title: and
                      type: object
                      properties:
                        and:
                          type: array
                          description: Match *all* conditions to return results.
                          items:
                            title: People Filter
                            type: object
                            description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                            properties:
                              and:
                                type: array
                                description: Returns results matching *all* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              or:
                                type: array
                                description: Returns results matching *any* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              not:
                                description: Returns results if a condition is false.
                                type: object
                                properties:
                                  and:
                                    type: array
                                    description: Match *all* conditions to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  or:
                                    type: array
                                    description: Match *any* condition to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                              segment:
                                title: segment
                                type: object
                                description: Provide the `id` of a segment containing people you want to search for.
                                properties:
                                  id:
                                    type: integer
                                    description: The ID of the segment you want to return people from.
                                    example: 4
                              attribute:
                                title: attribute
                                description: Filter your audience by attribute.
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: The name of the attribute you want to filter against.
                                    example: first_name
                                  operator:
                                    type: string
                                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                    enum:
                                      - eq
                                      - exists
                                  value:
                                    type: string
                                    description: The value you want to match for this attribute.
                                example:
                                  field: unsubscribed
                                  operator: eq
                                  value: true
                    - title: or
                      type: object
                      properties:
                        or:
                          type: array
                          description: Match *any* condition to return results.
                          items:
                            title: People Filter
                            type: object
                            description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                            properties:
                              and:
                                type: array
                                description: Returns results matching *all* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              or:
                                type: array
                                description: Returns results matching *any* conditions.
                                items:
                                  type: object
                                  properties:
                                    segment:
                                      title: segment
                                      type: object
                                      description: Provide the `id` of a segment containing people you want to search for.
                                      properties:
                                        id:
                                          type: integer
                                          description: The ID of the segment you want to return people from.
                                          example: 4
                                    attribute:
                                      title: attribute
                                      description: Filter your audience by attribute.
                                      type: object
                                      properties:
                                        field:
                                          type: string
                                          description: The name of the attribute you want to filter against.
                                          example: first_name
                                        operator:
                                          type: string
                                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                          enum:
                                            - eq
                                            - exists
                                        value:
                                          type: string
                                          description: The value you want to match for this attribute.
                                      example:
                                        field: unsubscribed
                                        operator: eq
                                        value: true
                              not:
                                description: Returns results if a condition is false.
                                type: object
                                properties:
                                  and:
                                    type: array
                                    description: Match *all* conditions to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  or:
                                    type: array
                                    description: Match *any* condition to return results.
                                    items:
                                      type: object
                                      properties:
                                        segment:
                                          title: segment
                                          type: object
                                          description: Provide the `id` of a segment containing people you want to search for.
                                          properties:
                                            id:
                                              type: integer
                                              description: The ID of the segment you want to return people from.
                                              example: 4
                                        attribute:
                                          title: attribute
                                          description: Filter your audience by attribute.
                                          type: object
                                          properties:
                                            field:
                                              type: string
                                              description: The name of the attribute you want to filter against.
                                              example: first_name
                                            operator:
                                              type: string
                                              description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                              enum:
                                                - eq
                                                - exists
                                            value:
                                              type: string
                                              description: The value you want to match for this attribute.
                                          example:
                                            field: unsubscribed
                                            operator: eq
                                            value: true
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                              segment:
                                title: segment
                                type: object
                                description: Provide the `id` of a segment containing people you want to search for.
                                properties:
                                  id:
                                    type: integer
                                    description: The ID of the segment you want to return people from.
                                    example: 4
                              attribute:
                                title: attribute
                                description: Filter your audience by attribute.
                                type: object
                                properties:
                                  field:
                                    type: string
                                    description: The name of the attribute you want to filter against.
                                    example: first_name
                                  operator:
                                    type: string
                                    description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                    enum:
                                      - eq
                                      - exists
                                  value:
                                    type: string
                                    description: The value you want to match for this attribute.
                                example:
                                  field: unsubscribed
                                  operator: eq
                                  value: true
                    - title: not
                      type: object
                      description: Match if a condition is false.
                      properties:
                        not:
                          title: People Filter
                          type: object
                          description: When filtering for people, you can use `and` and `or` arrays to determine the logic for a group of filter conditions. `not` reverses the filter condition and matches when the condition is false. `segment` and `attribute` represent the individual conditions you can filter a group of people for.
                          properties:
                            and:
                              type: array
                              description: Returns results matching *all* conditions.
                              items:
                                type: object
                                properties:
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                            or:
                              type: array
                              description: Returns results matching *any* conditions.
                              items:
                                type: object
                                properties:
                                  segment:
                                    title: segment
                                    type: object
                                    description: Provide the `id` of a segment containing people you want to search for.
                                    properties:
                                      id:
                                        type: integer
                                        description: The ID of the segment you want to return people from.
                                        example: 4
                                  attribute:
                                    title: attribute
                                    description: Filter your audience by attribute.
                                    type: object
                                    properties:
                                      field:
                                        type: string
                                        description: The name of the attribute you want to filter against.
                                        example: first_name
                                      operator:
                                        type: string
                                        description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                        enum:
                                          - eq
                                          - exists
                                      value:
                                        type: string
                                        description: The value you want to match for this attribute.
                                    example:
                                      field: unsubscribed
                                      operator: eq
                                      value: true
                            not:
                              description: Returns results if a condition is false.
                              type: object
                              properties:
                                and:
                                  type: array
                                  description: Match *all* conditions to return results.
                                  items:
                                    type: object
                                    properties:
                                      segment:
                                        title: segment
                                        type: object
                                        description: Provide the `id` of a segment containing people you want to search for.
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the segment you want to return people from.
                                            example: 4
                                      attribute:
                                        title: attribute
                                        description: Filter your audience by attribute.
                                        type: object
                                        properties:
                                          field:
                                            type: string
                                            description: The name of the attribute you want to filter against.
                                            example: first_name
                                          operator:
                                            type: string
                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                            enum:
                                              - eq
                                              - exists
                                          value:
                                            type: string
                                            description: The value you want to match for this attribute.
                                        example:
                                          field: unsubscribed
                                          operator: eq
                                          value: true
                                or:
                                  type: array
                                  description: Match *any* condition to return results.
                                  items:
                                    type: object
                                    properties:
                                      segment:
                                        title: segment
                                        type: object
                                        description: Provide the `id` of a segment containing people you want to search for.
                                        properties:
                                          id:
                                            type: integer
                                            description: The ID of the segment you want to return people from.
                                            example: 4
                                      attribute:
                                        title: attribute
                                        description: Filter your audience by attribute.
                                        type: object
                                        properties:
                                          field:
                                            type: string
                                            description: The name of the attribute you want to filter against.
                                            example: first_name
                                          operator:
                                            type: string
                                            description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                            enum:
                                              - eq
                                              - exists
                                          value:
                                            type: string
                                            description: The value you want to match for this attribute.
                                        example:
                                          field: unsubscribed
                                          operator: eq
                                          value: true
                                segment:
                                  title: segment
                                  type: object
                                  description: Provide the `id` of a segment containing people you want to search for.
                                  properties:
                                    id:
                                      type: integer
                                      description: The ID of the segment you want to return people from.
                                      example: 4
                                attribute:
                                  title: attribute
                                  description: Filter your audience by attribute.
                                  type: object
                                  properties:
                                    field:
                                      type: string
                                      description: The name of the attribute you want to filter against.
                                      example: first_name
                                    operator:
                                      type: string
                                      description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                      enum:
                                        - eq
                                        - exists
                                    value:
                                      type: string
                                      description: The value you want to match for this attribute.
                                  example:
                                    field: unsubscribed
                                    operator: eq
                                    value: true
                            segment:
                              title: segment
                              type: object
                              description: Provide the `id` of a segment containing people you want to search for.
                              properties:
                                id:
                                  type: integer
                                  description: The ID of the segment you want to return people from.
                                  example: 4
                            attribute:
                              title: attribute
                              description: Filter your audience by attribute.
                              type: object
                              properties:
                                field:
                                  type: string
                                  description: The name of the attribute you want to filter against.
                                  example: first_name
                                operator:
                                  type: string
                                  description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                                  enum:
                                    - eq
                                    - exists
                                value:
                                  type: string
                                  description: The value you want to match for this attribute.
                              example:
                                field: unsubscribed
                                operator: eq
                                value: true
                    - title: segment
                      type: object
                      description: Provide the `id` of a segment containing people you want to search for.
                      properties:
                        id:
                          type: integer
                          description: The ID of the segment you want to return people from.
                          example: 4
                    - title: attribute
                      description: Filter your audience by attribute.
                      type: object
                      properties:
                        field:
                          type: string
                          description: The name of the attribute you want to filter against.
                          example: first_name
                        operator:
                          type: string
                          description: Determine how to evaluate criteria against the field—`exists` returns results if a person in the audience has the attribute; `eq` returns results if the audience has the attribute and the attribute has the `value` you specify.
                          enum:
                            - eq
                            - exists
                        value:
                          type: string
                          description: The value you want to match for this attribute.
                      example:
                        field: unsubscribed
                        operator: eq
                        value: true
            example:
              filters:
                and:
                  - segment:
                      id: 3
                  - or:
                      - attribute:
                          field: interest
                          operator: eq
                          value: roadrunners
                      - attribute:
                          field: state
                          operator: eq
                          value: NM
                      - not:
                          attribute:
                            field: species
                            operator: eq
                            value: roadrunners
      responses:
        '200':
          description: Returns an export.
          content:
            application/json:
              schema:
                type: object
                properties:
                  export:
                    type: object
                    description: Metadata about an export.
                    properties:
                      id:
                        type: integer
                        description: The identifier for the export.
                        example: 110
                      user_id:
                        type: integer
                        description: The user who created the export.
                      user_email:
                        type: string
                        description: The email of the user who created the export.
                      total:
                        type: integer
                        description: The number of entries in the export. Exports report 0 until done.
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      type:
                        type: string
                        description: The type of information contained in the export.
                        enum:
                          - customers
                          - deliveries
                        example: customers
                      failed:
                        type: boolean
                        description: If true, the export was unsuccessful.
                        example: false
                      description:
                        type: string
                        description: A description of the export.
                        example: Customers with segment filters—in Purchased Flowers
                      downloads:
                        type: integer
                        description: Counts the total number of times the export has been downloaded.
                        example: 2
                      created_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      status:
                        type: string
                        enum:
                          - done
                          - pending
                          - failed
                        description: The state of your export where `done` indicates an export that you can download, `pending`, indicates that your export is not ready to download, and `failed` indicates an export that has failed and will not be downloadable.
                    example:
                      id: 110
                      user_id: 0
                      user_email: person@email.com
                      total: 1234
                      deduplicate_id: '110:1530296738'
                      type: customers
                      failed: false
                      status: done
                      description: Customers with segment filters—in \Purchased Flowers\
                      downloads: 2
                      created_at: 1530296738
                      updated_at: 1530296738
        '400':
          description: The request is malformed.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://api.customer.io/v1/exports/customers \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"filters":{"and":[{"and":[{"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}],"or":[{"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}],"not":{"and":[{"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}],"or":[{"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}],"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}},"segment":{"id":4},"attribute":{"field":"unsubscribed","operator":"eq","value":true}}]}}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/exports/customers",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              filters: {
                and: [
                  {
                    and: [
                      {
                        segment: {id: 4},
                        attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                      }
                    ],
                    or: [
                      {
                        segment: {id: 4},
                        attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                      }
                    ],
                    not: {
                      and: [
                        {
                          segment: {id: 4},
                          attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                        }
                      ],
                      or: [
                        {
                          segment: {id: 4},
                          attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                        }
                      ],
                      segment: {id: 4},
                      attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                    },
                    segment: {id: 4},
                    attribute: {field: 'unsubscribed', operator: 'eq', value: true}
                  }
                ]
              }
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/exports/customers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"filters\":{\"and\":[{\"and\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"or\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"not\":{\"and\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"or\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}},\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}]}}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"filters\":{\"and\":[{\"and\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"or\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"not\":{\"and\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"or\":[{\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}],\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}},\"segment\":{\"id\":4},\"attribute\":{\"field\":\"unsubscribed\",\"operator\":\"eq\",\"value\":true}}]}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("POST", "/v1/exports/customers", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/exports/customers\"\n\n\tpayload := strings.NewReader(\"{\\\"filters\\\":{\\\"and\\\":[{\\\"and\\\":[{\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}],\\\"or\\\":[{\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}],\\\"not\\\":{\\\"and\\\":[{\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}],\\\"or\\\":[{\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}],\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}},\\\"segment\\\":{\\\"id\\\":4},\\\"attribute\\\":{\\\"field\\\":\\\"unsubscribed\\\",\\\"operator\\\":\\\"eq\\\",\\\"value\\\":true}}]}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/exports/deliveries:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    post:
      summary: Export information about deliveries
      operationId: exportDeliveriesData
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Provide filters for the newsletter, campaign, or action you want to return delivery information from. This endpoint starts an export, but you cannot download your export from this endpoint. Use the `/exports/{export_id}` endpoint to download your export.
      tags:
        - Exports
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: Newsletter
                  allOf:
                    - type: object
                      required:
                        - newsletter_id
                      properties:
                        newsletter_id:
                          type: integer
                          description: The ID of a newsletter you want to export information from.
                          example: 999
                    - description: Contains properties shared by export filters.
                      type: object
                      properties:
                        start:
                          description: The unix timestamp representing the beginning of the export.
                          type: integer
                          format: unix timestamp
                          example: 1517529600
                        end:
                          description: The unix timestamp representing the end of the export.
                          type: integer
                          format: unix timestamp
                          example: 1517702400
                        attributes:
                          description: The names of attributes you want to include in your export; each attribute name is an additional column in the export. If your message included liquid, you may add the attribute names used in your message so you can see the values populated for each delivery.
                          type: array
                          items:
                            type: string
                        metric:
                          description: Determines the metric(s) you want to return.
                          type: string
                          enum:
                            - created
                            - attempted
                            - sent
                            - delivered
                            - opened
                            - clicked
                            - converted
                            - bounced
                            - spammed
                            - unsubscribed
                            - dropped
                            - failed
                            - undeliverable
                        drafts:
                          description: If true, your request returns both drafts and active/sent messages.
                          type: boolean
                - title: Campaign
                  allOf:
                    - type: object
                      required:
                        - campaign_id
                      properties:
                        campaign_id:
                          type: integer
                          description: The ID of a campaign you want to export information from.
                          example: 46
                    - description: Contains properties shared by export filters.
                      type: object
                      properties:
                        start:
                          description: The unix timestamp representing the beginning of the export.
                          type: integer
                          format: unix timestamp
                          example: 1517529600
                        end:
                          description: The unix timestamp representing the end of the export.
                          type: integer
                          format: unix timestamp
                          example: 1517702400
                        attributes:
                          description: The names of attributes you want to include in your export; each attribute name is an additional column in the export. If your message included liquid, you may add the attribute names used in your message so you can see the values populated for each delivery.
                          type: array
                          items:
                            type: string
                        metric:
                          description: Determines the metric(s) you want to return.
                          type: string
                          enum:
                            - created
                            - attempted
                            - sent
                            - delivered
                            - opened
                            - clicked
                            - converted
                            - bounced
                            - spammed
                            - unsubscribed
                            - dropped
                            - failed
                            - undeliverable
                        drafts:
                          description: If true, your request returns both drafts and active/sent messages.
                          type: boolean
                - title: Transactional Message
                  allOf:
                    - type: object
                      required:
                        - transactional_message_id
                      properties:
                        transactional_message_id:
                          example: 22
                          type: integer
                          description: The ID of the transactional message you want to export information for.
                    - description: Contains properties shared by export filters.
                      type: object
                      properties:
                        start:
                          description: The unix timestamp representing the beginning of the export.
                          type: integer
                          format: unix timestamp
                          example: 1517529600
                        end:
                          description: The unix timestamp representing the end of the export.
                          type: integer
                          format: unix timestamp
                          example: 1517702400
                        attributes:
                          description: The names of attributes you want to include in your export; each attribute name is an additional column in the export. If your message included liquid, you may add the attribute names used in your message so you can see the values populated for each delivery.
                          type: array
                          items:
                            type: string
                        metric:
                          description: Determines the metric(s) you want to return.
                          type: string
                          enum:
                            - created
                            - attempted
                            - sent
                            - delivered
                            - opened
                            - clicked
                            - converted
                            - bounced
                            - spammed
                            - unsubscribed
                            - dropped
                            - failed
                            - undeliverable
                        drafts:
                          description: If true, your request returns both drafts and active/sent messages.
                          type: boolean
                - title: Action
                  allOf:
                    - type: object
                      required:
                        - action_id
                      properties:
                        action_id:
                          example: 77
                          type: integer
                          description: The ID of an action you want to export information from.
                    - description: Contains properties shared by export filters.
                      type: object
                      properties:
                        start:
                          description: The unix timestamp representing the beginning of the export.
                          type: integer
                          format: unix timestamp
                          example: 1517529600
                        end:
                          description: The unix timestamp representing the end of the export.
                          type: integer
                          format: unix timestamp
                          example: 1517702400
                        attributes:
                          description: The names of attributes you want to include in your export; each attribute name is an additional column in the export. If your message included liquid, you may add the attribute names used in your message so you can see the values populated for each delivery.
                          type: array
                          items:
                            type: string
                        metric:
                          description: Determines the metric(s) you want to return.
                          type: string
                          enum:
                            - created
                            - attempted
                            - sent
                            - delivered
                            - opened
                            - clicked
                            - converted
                            - bounced
                            - spammed
                            - unsubscribed
                            - dropped
                            - failed
                            - undeliverable
                        drafts:
                          description: If true, your request returns both drafts and active/sent messages.
                          type: boolean
      responses:
        '200':
          description: Returns an export.
          content:
            application/json:
              schema:
                type: object
                properties:
                  export:
                    type: object
                    description: Metadata about an export.
                    properties:
                      id:
                        type: integer
                        description: The identifier for the export.
                        example: 110
                      user_id:
                        type: integer
                        description: The user who created the export.
                      user_email:
                        type: string
                        description: The email of the user who created the export.
                      total:
                        type: integer
                        description: The number of entries in the export. Exports report 0 until done.
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      type:
                        type: string
                        description: The type of information contained in the export.
                        enum:
                          - customers
                          - deliveries
                        example: customers
                      failed:
                        type: boolean
                        description: If true, the export was unsuccessful.
                        example: false
                      description:
                        type: string
                        description: A description of the export.
                        example: Customers with segment filters—in Purchased Flowers
                      downloads:
                        type: integer
                        description: Counts the total number of times the export has been downloaded.
                        example: 2
                      created_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      status:
                        type: string
                        enum:
                          - done
                          - pending
                          - failed
                        description: The state of your export where `done` indicates an export that you can download, `pending`, indicates that your export is not ready to download, and `failed` indicates an export that has failed and will not be downloadable.
                    example:
                      id: 110
                      user_id: 0
                      user_email: person@email.com
                      total: 1234
                      deduplicate_id: '110:1530296738'
                      type: customers
                      failed: false
                      status: done
                      description: Customers with segment filters—in \Purchased Flowers\
                      downloads: 2
                      created_at: 1530296738
                      updated_at: 1530296738
                example:
                  export:
                    id: 111,
                    deduplicate_id: '110:1530296738'
                    type: deliveries
                    failed: false
                    description: Full deliveries export (created via the api)
                    downloads: 0
                    created_at: 1530296742
                    updated_at: 1530296742
        '400':
          description: The request is malformed.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://api.customer.io/v1/exports/deliveries \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"newsletter_id":999,"start":1517529600,"end":1517702400,"attributes":["string"],"metric":"created","drafts":true}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/exports/deliveries",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              newsletter_id: 999,
              start: 1517529600,
              end: 1517702400,
              attributes: ['string'],
              metric: 'created',
              drafts: true
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/exports/deliveries")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"newsletter_id\":999,\"start\":1517529600,\"end\":1517702400,\"attributes\":[\"string\"],\"metric\":\"created\",\"drafts\":true}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"newsletter_id\":999,\"start\":1517529600,\"end\":1517702400,\"attributes\":[\"string\"],\"metric\":\"created\",\"drafts\":true}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("POST", "/v1/exports/deliveries", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/exports/deliveries\"\n\n\tpayload := strings.NewReader(\"{\\\"newsletter_id\\\":999,\\\"start\\\":1517529600,\\\"end\\\":1517702400,\\\"attributes\\\":[\\\"string\\\"],\\\"metric\\\":\\\"created\\\",\\\"drafts\\\":true}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/info/ip_addresses:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      summary: List IP addresses
      operationId: getCioAllowlist
      security:
        - Bearer-Auth-(App-API-Key): []
      description: |
        Returns a list of IP addresses that you need to allowlist if you're using a firewall or [Custom SMTP](https://customer.io/docs/use-your-smtp-server) provider's IP access management settings to deny access to unknown IP addresses.

        These addresses apply to all message types and webhooks, except push notifications.
      tags:
        - Info
      responses:
        '200':
          description: Returns an array of IP addresses.
          content:
            application/json:
              schema:
                type: object
                properties:
                  ip_addresses:
                    type: array
                    items:
                      type: string
                      format: ip address
                    example:
                      - 35.188.196.183
                      - 104.198.177.219
                      - 104.154.232.87
                      - 130.211.229.195
                      - 104.198.221.24
                      - 104.197.27.15
                      - 35.194.9.154
                      - 104.154.144.51
                      - 104.197.210.12
                      - 35.225.6.73
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/info/ip_addresses \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/info/ip_addresses",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/info/ip_addresses")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/info/ip_addresses", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/info/ip_addresses\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/messages:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
          default: 50
          maximum: 1000
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
      - name: metric
        in: query
        required: false
        description: Determines the metric(s) you want to return.
        schema:
          type: string
          enum:
            - created
            - attempted
            - sent
            - delivered
            - opened
            - clicked
            - converted
            - bounced
            - spammed
            - unsubscribed
            - dropped
            - failed
            - undeliverable
      - name: drafts
        in: query
        required: false
        description: If true, your request returns both drafts and active/sent messages.
        schema:
          type: boolean
      - name: campaign_id
        in: query
        required: false
        description: The campaign you want to filter for.
        schema:
          type: integer
      - name: newsletter_id
        in: query
        required: false
        description: The newsletter you want to filter for.
        schema:
          type: integer
      - name: action_id
        in: query
        required: false
        description: The action you want to filter for.
        schema:
          type: integer
    get:
      summary: List messages
      operationId: listMessages
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return a list of deliveries, including metrics for each delivery, for messages in your workspace. The request body contains filters determining the deliveries you want to return information about.
      tags:
        - Messages
      responses:
        '200':
          description: Returns an array of message objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    description: Each object in the array describes an individual message delivery. The object contains keys for all possible parents of the message (`newsletter_id`, `broadcast_id`, etc) but only the parents of the delivery are populated. Other parent IDs are null.
                    items:
                      type: object
                      description: Describes an individual message delivery. The object contains keys for all possible parents of the message (`newsletter_id`, `broadcast_id`, etc) but only the parents of the delivery are populated. Other parent IDs are null.
                      properties:
                        id:
                          description: The identifier for a delivery—the instance of a message intended for an individual recipient.
                          type: string
                          readOnly: true
                          example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        message_template_id:
                          description: The identifier of the message template used to create a message.
                          type: integer
                          readOnly: true
                          deprecated: true
                        customer_id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        customer_identifiers:
                          type: object
                          description: |
                            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                            We recommend that you use this object rather than the less descriptive `customer_id`.
                          required:
                            - email
                            - id
                            - cio_id
                          properties:
                            email:
                              type: string
                              nullable: true
                              format: email
                              description: A person's email address, if set.
                              example: cool.person@example.com
                            id:
                              type: string
                              nullable: true
                              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                              example: 2
                            cio_id:
                              type: string
                              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                              example: 786433
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: '{{customer.email}}'
                        subject:
                          type: string
                          description: The subject line for an `email` action.
                          example: Did you get that thing I sent you?
                        metrics:
                          type: object
                          description: Metrics for an individual instance of a message; each item in the object represents the timestamp when a message achieved a particular metric. This object only contains metrics that have been recorded.
                          properties:
                            bounced:
                              type: integer
                              description: The timestamp when the message `bounced`.
                            clicked:
                              type: integer
                              description: The timestamp when the message was `clicked`.
                            converted:
                              type: integer
                              description: The timestamp when the message was `converted`.
                            created:
                              type: integer
                              description: The timestamp when the message was `created`.
                            delivered:
                              type: integer
                              description: The timestamp when the message was `delivered`.
                            drafted:
                              type: integer
                              description: The timestamp when the message was `drafted`.
                            dropped:
                              type: integer
                              description: The timestamp when the message was `dropped`.
                            failed:
                              type: integer
                              description: The timestamp when the message `failed`.
                            opened:
                              type: integer
                              description: The timestamp when the message was `opened`.
                            sent:
                              type: integer
                              description: The timestamp when the message was `sent`.
                            spammed:
                              type: integer
                              description: The timestamp when the message was marked as spam.
                            undeliverable:
                              type: integer
                              description: The timestamp when the message became `undeliverable`.
                            unsubscribed:
                              type: integer
                              description: The timestamp when a person unsubscribed based on this message.
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        failure_message:
                          type: string
                          description: Explains why a message failed, if applicable.
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          readOnly: true
                          nullable: true
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          readOnly: true
                          example: 1
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        type:
                          description: The type of message/action.
                          type: string
                          enum:
                            - email
                            - webhook
                            - twilio
                            - urban_airship
                            - slack
                            - push
                          readOnly: true
                          example: email
                        forgotten:
                          type: boolean
                          description: If true message contents are not retained by Customer.io.
                      example:
                        id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=:1619137768
                        msg_template_id: 43
                        action_id: 215
                        customer_id: null
                        recipient: person@example.com
                        subject: Did you get that thing I sent you?
                        metrics:
                          delivered: 1619137768
                          sent: 1619137768
                        created: 1619137767
                        failure_message: null
                        newsletter_id: null
                        content_id: null
                        campaign_id: 23
                        broadcast_id: null
                        type: email
                        forgotten: false
        '400':
          description: The request was malformed.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/messages \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/messages",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/messages")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/messages", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/messages\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/messages/{message_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: message_id
        in: path
        required: true
        description: The identifier of a message.
        schema:
          type: string
    get:
      summary: Get a message
      operationId: getMessage
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return a information about, and metrics for, a delivery—the instance of a message intended for an individual recipient person.
      tags:
        - Messages
      responses:
        '200':
          description: Returns a message object.
          content:
            application/json:
              schema:
                type: object
                description: Describes an individual message delivery. The object contains keys for all possible parents of the message (`newsletter_id`, `broadcast_id`, etc) but only the parents of the delivery are populated. Other parent IDs are null.
                properties:
                  message:
                    type: object
                    description: Describes an individual message delivery. The object contains keys for all possible parents of the message (`newsletter_id`, `broadcast_id`, etc) but only the parents of the delivery are populated. Other parent IDs are null.
                    properties:
                      id:
                        description: The identifier for a delivery—the instance of a message intended for an individual recipient.
                        type: string
                        readOnly: true
                        example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      message_template_id:
                        description: The identifier of the message template used to create a message.
                        type: integer
                        readOnly: true
                        deprecated: true
                      customer_id:
                        type: string
                        description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                        nullable: true
                        example: '42'
                      customer_identifiers:
                        type: object
                        description: |
                          Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                          We recommend that you use this object rather than the less descriptive `customer_id`.
                        required:
                          - email
                          - id
                          - cio_id
                        properties:
                          email:
                            type: string
                            nullable: true
                            format: email
                            description: A person's email address, if set.
                            example: cool.person@example.com
                          id:
                            type: string
                            nullable: true
                            description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                            example: 2
                          cio_id:
                            type: string
                            description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                            example: 786433
                      recipient:
                        description: The recipient address for an action.
                        type: string
                        example: '{{customer.email}}'
                      subject:
                        type: string
                        description: The subject line for an `email` action.
                        example: Did you get that thing I sent you?
                      metrics:
                        type: object
                        description: Metrics for an individual instance of a message; each item in the object represents the timestamp when a message achieved a particular metric. This object only contains metrics that have been recorded.
                        properties:
                          bounced:
                            type: integer
                            description: The timestamp when the message `bounced`.
                          clicked:
                            type: integer
                            description: The timestamp when the message was `clicked`.
                          converted:
                            type: integer
                            description: The timestamp when the message was `converted`.
                          created:
                            type: integer
                            description: The timestamp when the message was `created`.
                          delivered:
                            type: integer
                            description: The timestamp when the message was `delivered`.
                          drafted:
                            type: integer
                            description: The timestamp when the message was `drafted`.
                          dropped:
                            type: integer
                            description: The timestamp when the message was `dropped`.
                          failed:
                            type: integer
                            description: The timestamp when the message `failed`.
                          opened:
                            type: integer
                            description: The timestamp when the message was `opened`.
                          sent:
                            type: integer
                            description: The timestamp when the message was `sent`.
                          spammed:
                            type: integer
                            description: The timestamp when the message was marked as spam.
                          undeliverable:
                            type: integer
                            description: The timestamp when the message became `undeliverable`.
                          unsubscribed:
                            type: integer
                            description: The timestamp when a person unsubscribed based on this message.
                      created:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      failure_message:
                        type: string
                        description: Explains why a message failed, if applicable.
                        nullable: true
                      campaign_id:
                        description: The identifier for a campaign.
                        type: integer
                        readOnly: true
                        example: 5
                        nullable: true
                      action_id:
                        description: The identifier for an action.
                        type: integer
                        readOnly: true
                        example: 96
                        nullable: true
                      newsletter_id:
                        description: The identifier for a newsletter.
                        type: integer
                        readOnly: true
                        nullable: true
                      content_id:
                        description: The identifier for a newsletter variant.
                        type: integer
                        readOnly: true
                        example: 1
                        nullable: true
                      broadcast_id:
                        type: integer
                        description: The identifier for a broadcast.
                        example: 2
                        nullable: true
                      type:
                        description: The type of message/action.
                        type: string
                        enum:
                          - email
                          - webhook
                          - twilio
                          - urban_airship
                          - slack
                          - push
                        readOnly: true
                        example: email
                      forgotten:
                        type: boolean
                        description: If true message contents are not retained by Customer.io.
                    example:
                      id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                      deduplicate_id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=:1619137768
                      msg_template_id: 43
                      action_id: 215
                      customer_id: null
                      recipient: person@example.com
                      subject: Did you get that thing I sent you?
                      metrics:
                        delivered: 1619137768
                        sent: 1619137768
                      created: 1619137767
                      failure_message: null
                      newsletter_id: null
                      content_id: null
                      campaign_id: 23
                      broadcast_id: null
                      type: email
                      forgotten: false
        '404':
          description: The message does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/messages/{message_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/messages/{message_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/messages/{message_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/messages/{message_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/messages/{message_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/messages/{message_id}/archived_message:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: message_id
        in: path
        required: true
        description: The identifier of a message.
        schema:
          type: string
    get:
      summary: Get an archived message
      operationId: getArchivedMessage
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns the archived copy of a delivery, including the message body, recipient, and metrics. This endpoint is limited to 100 requests per day. Contact win@customer.io if you need to exceed this limit.
      tags:
        - Messages
      responses:
        '200':
          description: Returns the archived message object.
          content:
            application/json:
              schema:
                type: object
                description: Describes an archived message delivery.
                properties:
                  archived_message:
                    description: |
                      An archived message, including a complete message body.
                    type: object
                    properties:
                      id:
                        description: The identifier for a delivery—the instance of a message intended for an individual recipient.
                        type: string
                        readOnly: true
                        example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                      body:
                        type: string
                        description: The body of the variant. You cannot modify the body if you created it with our drag-and-drop editor.
                        example: undefined<!DOCTYPE html>undefined<html>undefined<head>\nundefined<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\"/>undefined<h1>Hello World</h1>\n\nundefined</body>undefined</html>
                      from:
                        type: string
                        description: The address that the message is from, relevant if the action `type` is `email`.
                        readOnly: true
                        example: sentFrom@example.com
                      reply_to:
                        type: string
                        description: The address that receives replies for the message, if applicable.
                        readOnly: true
                        example: replyto@example.com
                      recipient:
                        description: The recipient address for an action.
                        type: string
                        example: person@example.com
                      subject:
                        type: string
                        description: The subject line for an `email` action.
                        example: Did you get that thing I sent you?
                      bcc:
                        readOnly: true
                        description: The blind-copy address(es) for this action.
                        type: string
                      fake_bcc:
                        readOnly: true
                        type: boolean
                        description: |
                          If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                      preheader_text:
                        type: string
                        description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                        readOnly: true
                      url:
                        type: string
                        description: The URL of a webhook or action.
                        example: http://example.com/webhook
                      request_method:
                        type: string
                        description: The method used in conjunction with a webhook `url`.
                        enum:
                          - GET
                          - POST
                          - PUT
                          - DELETE
                          - PATCH
                        example: POST
                      headers:
                        type: array
                        description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                        items:
                          type: object
                          additionalProperties:
                            type: string
                            x-additionalPropertiesName: Header Names
                            x-doNotRender: true
                      forgotten:
                        type: boolean
                        description: If true, Customer.io does not retain the message content.
                        example: false
        '404':
          description: The message does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/messages/{message_id}/archived_message \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/messages/{message_id}/archived_message",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/messages/{message_id}/archived_message")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/messages/{message_id}/archived_message", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/messages/{message_id}/archived_message\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/newsletters:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      summary: List newsletters
      operationId: listNewsletters
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of your newsletters and associated metadata.
      tags:
        - Newsletters
      responses:
        '200':
          description: Returns an array of newsletter objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  newsletters:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          description: The identifier for a newsletter.
                          type: integer
                          readOnly: true
                          nullable: true
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        name:
                          type: string
                          description: The name of the newsletter.
                          readOnly: true
                        subject:
                          type: string
                          description: The subject line for an `email` action.
                          example: Did you get that thing I sent you?
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        updated:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was last updated.
                          example: 1552341937
                        sent_at:
                          type: integer
                          format: unix timestamp
                          description: The last time the newsletter was sent.
                        recipient_segment_ids:
                          description: A list of segments used in a newsletter's recipient filter, returned if newsletter recipients were filtered by one or more segments.
                          type: array
                          items:
                            type: integer
                        msg_template_ids:
                          type: array
                          deprecated: true
                          description: Indicates the message template(s) used in this newsletter.
                          items:
                            type: integer
                        content_ids:
                          type: array
                          description: A list of languages in a multi-language newsletter and/or A/B test variants for this message. [Look up a newsletter variant](#operation/getNewsletterVariant) to get more information about an individual content ID.
                          items:
                            type: integer
                        tags:
                          type: array
                          description: An array of tags you set on this newsletter.
                          items:
                            type: string
                      example:
                        id: 128275
                        deduplicate_id: '128275:1484870424'
                        msg_template_ids:
                          - 428849
                        content_ids:
                          - 45
                          - 90
                        recipient_filter_ids:
                          - 42
                        name: Example Newsletter
                        subject: Example Newsletter
                        sent_at: null
                        created: 1481653929
                        updated: 1484870424
                        tags:
                          - Example Tag
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/newsletters \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/newsletters", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/newsletters/{newsletter_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: newsletter_id
        in: path
        required: true
        description: The identifier of a newsletter.
        schema:
          type: integer
    get:
      summary: Get a newsletter
      operationId: getNewsletters
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metadata for an individual newsletter.
      tags:
        - Newsletters
      responses:
        '200':
          description: Returns metadata for the newsletter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  newsletter:
                    type: object
                    properties:
                      id:
                        description: The identifier for a newsletter.
                        type: integer
                        readOnly: true
                        nullable: true
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the newsletter.
                        readOnly: true
                      subject:
                        type: string
                        description: The subject line for an `email` action.
                        example: Did you get that thing I sent you?
                      created:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
                      sent_at:
                        type: integer
                        format: unix timestamp
                        description: The last time the newsletter was sent.
                      recipient_segment_ids:
                        description: A list of segments used in a newsletter's recipient filter, returned if newsletter recipients were filtered by one or more segments.
                        type: array
                        items:
                          type: integer
                      msg_template_ids:
                        type: array
                        deprecated: true
                        description: Indicates the message template(s) used in this newsletter.
                        items:
                          type: integer
                      content_ids:
                        type: array
                        description: A list of languages in a multi-language newsletter and/or A/B test variants for this message. [Look up a newsletter variant](#operation/getNewsletterVariant) to get more information about an individual content ID.
                        items:
                          type: integer
                      tags:
                        type: array
                        description: An array of tags you set on this newsletter.
                        items:
                          type: string
                    example:
                      id: 128275
                      deduplicate_id: '128275:1484870424'
                      msg_template_ids:
                        - 428849
                      content_ids:
                        - 45
                        - 90
                      recipient_filter_ids:
                        - 42
                      name: Example Newsletter
                      subject: Example Newsletter
                      sent_at: null
                      created: 1481653929
                      updated: 1484870424
                      tags:
                        - Example Tag
        '404':
          description: The newsletter you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/newsletters/{newsletter_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters/{newsletter_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters/{newsletter_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/newsletters/{newsletter_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters/{newsletter_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/newsletters/{newsletter_id}/metrics:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: newsletter_id
        in: path
        required: true
        description: The identifier of a newsletter.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      summary: Get newsletter metrics
      operationId: getNewsletterMetrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of metrics for an individual newsletter in `steps` (days, weeks, etc). We return metrics from oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Newsletters
      responses:
        '200':
          description: Returns newsletter metrics by `series` (with increments are based on the `period` and `step` in your request) for the newsletter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    type: object
                    properties:
                      series:
                        allOf:
                          - type: object
                            description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            properties:
                              2xx:
                                type: array
                                items:
                                  type: integer
                                description: 2xx responses by period, representative of webhook performance.
                              3xx:
                                type: array
                                items:
                                  type: integer
                                description: 3xx responses by period, representative of webhook performance.
                              4xx:
                                type: array
                                items:
                                  type: integer
                                description: 4xx responses by period, representative of webhook performance.
                              5xx:
                                type: array
                                items:
                                  type: integer
                                description: 5xx responses by period, representative of webhook performance.
                          - description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            type: object
                            properties:
                              attempted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `attempted` messages.
                              bounced:
                                type: array
                                items:
                                  type: integer
                                description: The number of `bounced` messages.
                              clicked:
                                type: array
                                items:
                                  type: integer
                                description: The number of `clicked` messages.
                              converted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `converted` messages.
                              created:
                                type: array
                                items:
                                  type: integer
                                description: The number of `created` messages.
                              delivered:
                                type: array
                                items:
                                  type: integer
                                description: The number of `delivered` messages.
                              drafted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `drafted` messages.
                              dropped:
                                type: array
                                items:
                                  type: integer
                                description: The number of `dropped` messages.
                              failed:
                                type: array
                                items:
                                  type: integer
                                description: The number of `failed` messages.
                              opened:
                                type: array
                                items:
                                  type: integer
                                description: The number of `opened` messages.
                              sent:
                                type: array
                                items:
                                  type: integer
                                description: The number of sent messages.
                              spammed:
                                type: array
                                items:
                                  type: integer
                                description: The number of spam complaints.
                              undeliverable:
                                type: array
                                items:
                                  type: integer
                                description: The number of `undeliverable` messages.
                              unsubscribed:
                                type: array
                                items:
                                  type: integer
                                description: The number of unsubscribes attributed to the campaign or message.
        '404':
          description: The newsletter you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/newsletters/{newsletter_id}/metrics \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters/{newsletter_id}/metrics",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters/{newsletter_id}/metrics")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/newsletters/{newsletter_id}/metrics", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters/{newsletter_id}/metrics\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/newsletters/{newsletter_id}/metrics/links:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: newsletter_id
        in: path
        required: true
        description: The identifier of a newsletter.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: unique
        in: query
        required: false
        description: If true, the response contains only unique customer results, i.e. a customer who clicks a link twice is only counted once. If false, the response contains the total number of results without regard to uniqueness.
        schema:
          type: boolean
          default: false
    get:
      summary: Get newsletter link metrics
      operationId: getNewsletterLinks
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metrics for link clicks within a newsletter, both in total and in `series` periods (days, weeks, etc). `series` metrics are ordered oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Newsletters
      responses:
        '200':
          description: Returns an array of link objects. Each object represents a different link in your newsletter and contains independent metrics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        link:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the link.
                              example: 1234
                            href:
                              type: string
                              description: The link destination—a URL, mailto, etc.
                              example: https://customer.io/docs
                        metric:
                          type: object
                          description: Contains metrics for the link.
                          properties:
                            series:
                              type: object
                              properties:
                                clicked:
                                  type: array
                                  description: An array of results from oldest to newest, where each result indicates a period.
                                  items:
                                    type: integer
                                  example:
                                    - 1
                                    - 3
                                    - 5
                                    - 7
        '404':
          description: The newsletter you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/newsletters/{newsletter_id}/metrics/links \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters/{newsletter_id}/metrics/links",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters/{newsletter_id}/metrics/links")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/newsletters/{newsletter_id}/metrics/links", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters/{newsletter_id}/metrics/links\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/newsletters/{newsletter_id}/contents:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: newsletter_id
        in: path
        required: true
        description: The identifier of a newsletter.
        schema:
          type: integer
    get:
      summary: List newsletter variants
      operationId: listNewsletterVariants
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns the content variants of a newsletter—these are either different languages in a multi-language newsletter or A/B tests.
      tags:
        - Newsletters
      responses:
        '200':
          description: Returns newsletter `content_id`s. Each object represents an individual variant of this newsletter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  contents:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The identifier of a newsletter variant—a language in a multi-language newsletter or a test in an A/B test.
                          readOnly: true
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          readOnly: true
                          nullable: true
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        name:
                          type: string
                          description: The name of the variant, if it exists.
                          readOnly: true
                          example: newsletter variant A
                        layout:
                          type: string
                          description: The layout used for the variant, if it exists.
                          example: undefined<html>undefined<body>{{ content }}</body>undefined</html>
                          readOnly: true
                        body:
                          type: string
                          description: The body of the variant. You cannot modify the body if you created it with our drag-and-drop editor.
                          example: undefined<strong>Hello from the API</strong>
                        type:
                          description: The type of message/action.
                          type: string
                          enum:
                            - email
                            - webhook
                            - twilio
                            - urban_airship
                            - slack
                            - push
                          readOnly: true
                          example: email
                        from:
                          type: string
                          description: The address that the message is from, relevant if the action `type` is `email`.
                          readOnly: true
                          example: sentFrom@example.com
                        from_id:
                          type: integer
                          description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                          example: 1
                        reply_to:
                          type: string
                          description: The address that receives replies for the message, if applicable.
                          readOnly: true
                          example: replyto@example.com
                        reply_to_id:
                          type: integer
                          description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                          nullable: true
                          example: 38
                        preprocessor:
                          type: string
                          description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                          enum:
                            - premailer
                          readOnly: true
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: '{{customer.email}}'
                        subject:
                          type: string
                          description: The subject line for an `email` action.
                          example: Did you get that thing I sent you?
                        bcc:
                          readOnly: true
                          description: The blind-copy address(es) for this action.
                          type: string
                        fake_bcc:
                          readOnly: true
                          type: boolean
                          description: |
                            If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                        preheader_text:
                          type: string
                          description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                          readOnly: true
                        headers:
                          type: array
                          description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                          items:
                            type: object
                            additionalProperties:
                              type: string
                              x-additionalPropertiesName: Header Names
                              x-doNotRender: true
        '404':
          description: The newsletter you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/newsletters/{newsletter_id}/contents \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters/{newsletter_id}/contents",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters/{newsletter_id}/contents")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/newsletters/{newsletter_id}/contents", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters/{newsletter_id}/contents\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/newsletters/{newsletter_id}/messages:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: newsletter_id
        in: path
        required: true
        description: The identifier of a newsletter.
        schema:
          type: integer
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
      - name: metric
        in: query
        required: false
        description: Determines the metric(s) you want to return.
        schema:
          type: string
          enum:
            - created
            - attempted
            - sent
            - delivered
            - opened
            - clicked
            - converted
            - bounced
            - spammed
            - unsubscribed
            - dropped
            - failed
            - undeliverable
    get:
      summary: Get newsletter message metadata
      operationId: getNewsletterMsgMeta
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metadata for the message(s) sent by newsletter. Provide query parameters to refine the metrics you want to return.
      tags:
        - Newsletters
      responses:
        '200':
          description: Returns an array of `messages`. Each object represents a different message in your newsletter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      description: Describes an individual message delivery. The object contains keys for all possible parents of the message (`newsletter_id`, `broadcast_id`, etc) but only the parents of the delivery are populated. Other parent IDs are null.
                      properties:
                        id:
                          description: The identifier for a delivery—the instance of a message intended for an individual recipient.
                          type: string
                          readOnly: true
                          example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        message_template_id:
                          description: The identifier of the message template used to create a message.
                          type: integer
                          readOnly: true
                          deprecated: true
                        customer_id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        customer_identifiers:
                          type: object
                          description: |
                            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                            We recommend that you use this object rather than the less descriptive `customer_id`.
                          required:
                            - email
                            - id
                            - cio_id
                          properties:
                            email:
                              type: string
                              nullable: true
                              format: email
                              description: A person's email address, if set.
                              example: cool.person@example.com
                            id:
                              type: string
                              nullable: true
                              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                              example: 2
                            cio_id:
                              type: string
                              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                              example: 786433
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: '{{customer.email}}'
                        subject:
                          type: string
                          description: The subject line for an `email` action.
                          example: Did you get that thing I sent you?
                        metrics:
                          type: object
                          description: Metrics for an individual instance of a message; each item in the object represents the timestamp when a message achieved a particular metric. This object only contains metrics that have been recorded.
                          properties:
                            bounced:
                              type: integer
                              description: The timestamp when the message `bounced`.
                            clicked:
                              type: integer
                              description: The timestamp when the message was `clicked`.
                            converted:
                              type: integer
                              description: The timestamp when the message was `converted`.
                            created:
                              type: integer
                              description: The timestamp when the message was `created`.
                            delivered:
                              type: integer
                              description: The timestamp when the message was `delivered`.
                            drafted:
                              type: integer
                              description: The timestamp when the message was `drafted`.
                            dropped:
                              type: integer
                              description: The timestamp when the message was `dropped`.
                            failed:
                              type: integer
                              description: The timestamp when the message `failed`.
                            opened:
                              type: integer
                              description: The timestamp when the message was `opened`.
                            sent:
                              type: integer
                              description: The timestamp when the message was `sent`.
                            spammed:
                              type: integer
                              description: The timestamp when the message was marked as spam.
                            undeliverable:
                              type: integer
                              description: The timestamp when the message became `undeliverable`.
                            unsubscribed:
                              type: integer
                              description: The timestamp when a person unsubscribed based on this message.
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        failure_message:
                          type: string
                          description: Explains why a message failed, if applicable.
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          readOnly: true
                          nullable: true
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          readOnly: true
                          example: 1
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        type:
                          description: The type of message/action.
                          type: string
                          enum:
                            - email
                            - webhook
                            - twilio
                            - urban_airship
                            - slack
                            - push
                          readOnly: true
                          example: email
                        forgotten:
                          type: boolean
                          description: If true message contents are not retained by Customer.io.
                      example:
                        id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=:1619137768
                        msg_template_id: 43
                        action_id: 215
                        customer_id: null
                        recipient: person@example.com
                        subject: Did you get that thing I sent you?
                        metrics:
                          delivered: 1619137768
                          sent: 1619137768
                        created: 1619137767
                        failure_message: null
                        newsletter_id: null
                        content_id: null
                        campaign_id: 23
                        broadcast_id: null
                        type: email
                        forgotten: false
                    example:
                      - id: dgOq6QWq6QUDAAF22PaOyFVqVxHY3rI5fsg=
                        deduplicate_id: dgOq6QWq6QUDAAF22PaOyFVqVxHY3rI5fsg=:1609957872
                        msg_template_id: 178
                        action_id: null
                        customer_id: 1a55d8d1-b13d-4f1f-858f-a93ef21e3a7d
                        recipient: person@email.com
                        subject: Did you get that thing I sent you?
                        metrics:
                          delivered: 1609957872
                          sent: 1609957832
                        created: 1609957805
                        failure_message: null
                        newsletter_id: 72
                        content_id: 178
                        campaign_id: null
                        broadcast_id: null
                        type: email
                        forgotten: false
        '404':
          description: The newsletter you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/newsletters/{newsletter_id}/messages \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters/{newsletter_id}/messages",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters/{newsletter_id}/messages")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/newsletters/{newsletter_id}/messages", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters/{newsletter_id}/messages\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/newsletters/{newsletter_id}/contents/{content_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: newsletter_id
        in: path
        required: true
        description: The identifier of a newsletter.
        schema:
          type: integer
      - name: content_id
        in: path
        required: true
        description: The identifier of a newsletter variant—a language in a multi-language message or an individual test in an A/B test. You can [list your newsletter's variants](#operation/listNewsletterVariants) to find your newsletter's variants.
        schema:
          type: integer
    get:
      summary: Get a newsletter variant
      operationId: getNewsletterVariant
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns information about a specific variant of a newsletter, where a variant is either a language in a multi-language newsletter or a part of an A/B test.
      tags:
        - Newsletters
      responses:
        '200':
          description: Returns newsletter `content`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The identifier of a newsletter variant—a language in a multi-language newsletter or a test in an A/B test.
                        readOnly: true
                      newsletter_id:
                        description: The identifier for a newsletter.
                        type: integer
                        readOnly: true
                        nullable: true
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the variant, if it exists.
                        readOnly: true
                        example: newsletter variant A
                      layout:
                        type: string
                        description: The layout used for the variant, if it exists.
                        example: undefined<html>undefined<body>{{ content }}</body>undefined</html>
                        readOnly: true
                      body:
                        type: string
                        description: The body of the variant. You cannot modify the body if you created it with our drag-and-drop editor.
                        example: undefined<strong>Hello from the API</strong>
                      type:
                        description: The type of message/action.
                        type: string
                        enum:
                          - email
                          - webhook
                          - twilio
                          - urban_airship
                          - slack
                          - push
                        readOnly: true
                        example: email
                      from:
                        type: string
                        description: The address that the message is from, relevant if the action `type` is `email`.
                        readOnly: true
                        example: sentFrom@example.com
                      from_id:
                        type: integer
                        description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                        example: 1
                      reply_to:
                        type: string
                        description: The address that receives replies for the message, if applicable.
                        readOnly: true
                        example: replyto@example.com
                      reply_to_id:
                        type: integer
                        description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                        nullable: true
                        example: 38
                      preprocessor:
                        type: string
                        description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                        enum:
                          - premailer
                        readOnly: true
                      recipient:
                        description: The recipient address for an action.
                        type: string
                        example: '{{customer.email}}'
                      subject:
                        type: string
                        description: The subject line for an `email` action.
                        example: Did you get that thing I sent you?
                      bcc:
                        readOnly: true
                        description: The blind-copy address(es) for this action.
                        type: string
                      fake_bcc:
                        readOnly: true
                        type: boolean
                        description: |
                          If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                      preheader_text:
                        type: string
                        description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                        readOnly: true
                      headers:
                        type: array
                        description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                        items:
                          type: object
                          additionalProperties:
                            type: string
                            x-additionalPropertiesName: Header Names
                            x-doNotRender: true
        '404':
          description: The newsletter or variant does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/newsletters/{newsletter_id}/contents/{content_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters/{newsletter_id}/contents/{content_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters/{newsletter_id}/contents/{content_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/newsletters/{newsletter_id}/contents/{content_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters/{newsletter_id}/contents/{content_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    put:
      summary: Update a newsletter variant
      operationId: updateNewsletterVariant
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Update the contents of a newsletter variant (a specific language of your message or a part of an A/B test), including the body of a newsletter.
      tags:
        - Newsletters
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: integer
                  description: The identifier of a newsletter variant—a language in a multi-language newsletter or a test in an A/B test.
                  readOnly: true
                newsletter_id:
                  description: The identifier for a newsletter.
                  type: integer
                  readOnly: true
                  nullable: true
                deduplicate_id:
                  type: string
                  readOnly: true
                  description: A completely unique CIO identifier.
                  example: '15:1492548073'
                name:
                  type: string
                  description: The name of the variant, if it exists.
                  readOnly: true
                  example: newsletter variant A
                layout:
                  type: string
                  description: The layout used for the variant, if it exists.
                  example: undefined<html>undefined<body>{{ content }}</body>undefined</html>
                  readOnly: true
                body:
                  type: string
                  description: The body of the variant. You cannot modify the body if you created it with our drag-and-drop editor.
                  example: undefined<strong>Hello from the API</strong>
                type:
                  description: The type of message/action.
                  type: string
                  enum:
                    - email
                    - webhook
                    - twilio
                    - urban_airship
                    - slack
                    - push
                  readOnly: true
                  example: email
                from:
                  type: string
                  description: The address that the message is from, relevant if the action `type` is `email`.
                  readOnly: true
                  example: sentFrom@example.com
                from_id:
                  type: integer
                  description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                  example: 1
                reply_to:
                  type: string
                  description: The address that receives replies for the message, if applicable.
                  readOnly: true
                  example: replyto@example.com
                reply_to_id:
                  type: integer
                  description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                  nullable: true
                  example: 38
                preprocessor:
                  type: string
                  description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                  enum:
                    - premailer
                  readOnly: true
                recipient:
                  description: The recipient address for an action.
                  type: string
                  example: '{{customer.email}}'
                subject:
                  type: string
                  description: The subject line for an `email` action.
                  example: Did you get that thing I sent you?
                bcc:
                  readOnly: true
                  description: The blind-copy address(es) for this action.
                  type: string
                fake_bcc:
                  readOnly: true
                  type: boolean
                  description: |
                    If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                preheader_text:
                  type: string
                  description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                  readOnly: true
                headers:
                  type: array
                  description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                  items:
                    type: object
                    additionalProperties:
                      type: string
                      x-additionalPropertiesName: Header Names
                      x-doNotRender: true
      responses:
        '200':
          description: Returns the updated newsletter variant.
          content:
            application/json:
              schema:
                type: object
                properties:
                  content:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The identifier of a newsletter variant—a language in a multi-language newsletter or a test in an A/B test.
                        readOnly: true
                      newsletter_id:
                        description: The identifier for a newsletter.
                        type: integer
                        readOnly: true
                        nullable: true
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the variant, if it exists.
                        readOnly: true
                        example: newsletter variant A
                      layout:
                        type: string
                        description: The layout used for the variant, if it exists.
                        example: undefined<html>undefined<body>{{ content }}</body>undefined</html>
                        readOnly: true
                      body:
                        type: string
                        description: The body of the variant. You cannot modify the body if you created it with our drag-and-drop editor.
                        example: undefined<strong>Hello from the API</strong>
                      type:
                        description: The type of message/action.
                        type: string
                        enum:
                          - email
                          - webhook
                          - twilio
                          - urban_airship
                          - slack
                          - push
                        readOnly: true
                        example: email
                      from:
                        type: string
                        description: The address that the message is from, relevant if the action `type` is `email`.
                        readOnly: true
                        example: sentFrom@example.com
                      from_id:
                        type: integer
                        description: The identifier of the `from` address, commonly known as the "sender". You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                        example: 1
                      reply_to:
                        type: string
                        description: The address that receives replies for the message, if applicable.
                        readOnly: true
                        example: replyto@example.com
                      reply_to_id:
                        type: integer
                        description: The identifier for the `reply_to` address, if applicable. You can [list your sender identities](#operation/listSenders) to match the ID to a specific address.
                        nullable: true
                        example: 38
                      preprocessor:
                        type: string
                        description: By default, we process CSS before emails leave Customer.io using Premailer. If your message included CSS and pre-processing is not disabled, this key indicates the pre-processor.
                        enum:
                          - premailer
                        readOnly: true
                      recipient:
                        description: The recipient address for an action.
                        type: string
                        example: '{{customer.email}}'
                      subject:
                        type: string
                        description: The subject line for an `email` action.
                        example: Did you get that thing I sent you?
                      bcc:
                        readOnly: true
                        description: The blind-copy address(es) for this action.
                        type: string
                      fake_bcc:
                        readOnly: true
                        type: boolean
                        description: |
                          If true, rather than sending true copies to BCC addresses, Customer.io sends a copy of the message with the subject line containing the recipient address(es).
                      preheader_text:
                        type: string
                        description: Also known as "preview text", this specifies the small block of text shown in an end-user's email inbox, next to, or underneath, the subject line.
                        readOnly: true
                      headers:
                        type: array
                        description: Headers must be strings and cannot contain any non-ASCII characters or empty spaces. Some headers are reserved and cannot be overwritten.
                        items:
                          type: object
                          additionalProperties:
                            type: string
                            x-additionalPropertiesName: Header Names
                            x-doNotRender: true
        '400':
          description: The request is malformed.
        '404':
          description: The newsletter or variant does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request PUT \
              --url https://api.customer.io/v1/newsletters/{newsletter_id}/contents/{content_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"body":"undefined<strong>Hello from the API</strong>","from_id":1,"reply_to_id":38,"recipient":"{{customer.email}}","subject":"Did you get that thing I sent you?","headers":[{"Header Names1":"string","Header Names2":"string"}]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "PUT",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters/{newsletter_id}/contents/{content_id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              body: 'undefined<strong>Hello from the API</strong>',
              from_id: 1,
              reply_to_id: 38,
              recipient: '{{customer.email}}',
              subject: 'Did you get that thing I sent you?',
              headers: [{'Header Names1': 'string', 'Header Names2': 'string'}]
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters/{newsletter_id}/contents/{content_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Put.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"body\":\"undefined<strong>Hello from the API</strong>\",\"from_id\":1,\"reply_to_id\":38,\"recipient\":\"{{customer.email}}\",\"subject\":\"Did you get that thing I sent you?\",\"headers\":[{\"Header Names1\":\"string\",\"Header Names2\":\"string\"}]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"body\":\"undefined<strong>Hello from the API</strong>\",\"from_id\":1,\"reply_to_id\":38,\"recipient\":\"{{customer.email}}\",\"subject\":\"Did you get that thing I sent you?\",\"headers\":[{\"Header Names1\":\"string\",\"Header Names2\":\"string\"}]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("PUT", "/v1/newsletters/{newsletter_id}/contents/{content_id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters/{newsletter_id}/contents/{content_id}\"\n\n\tpayload := strings.NewReader(\"{\\\"body\\\":\\\"undefined<strong>Hello from the API</strong>\\\",\\\"from_id\\\":1,\\\"reply_to_id\\\":38,\\\"recipient\\\":\\\"{{customer.email}}\\\",\\\"subject\\\":\\\"Did you get that thing I sent you?\\\",\\\"headers\\\":[{\\\"Header Names1\\\":\\\"string\\\",\\\"Header Names2\\\":\\\"string\\\"}]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/newsletters/{newsletter_id}/content/{content_id}/metrics:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: newsletter_id
        in: path
        required: true
        description: The identifier of a newsletter.
        schema:
          type: integer
      - name: content_id
        in: path
        required: true
        description: The identifier of a newsletter variant—a language in a multi-language message or an individual test in an A/B test. You can [list your newsletter's variants](#operation/listNewsletterVariants) to find your newsletter's variants.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      summary: Get metrics for a variant
      operationId: getVariantMetrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a metrics for an individual newsletter variant—either an individual language in a multi-language newsletter or a message in an A/B test. This endpoint returns metrics both in total and in `steps` (days, weeks, etc) over a `period` of time. Stepped `series` metrics are arranged from oldest to newest (i.e. the 0-index for any result is the oldest period/step).
      tags:
        - Newsletters
      responses:
        '200':
          description: Returns newsletter variant metrics by `series` (with increments are based on the `period` and `step` in your request) for the newsletter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    type: object
                    properties:
                      series:
                        allOf:
                          - type: object
                            description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            properties:
                              2xx:
                                type: array
                                items:
                                  type: integer
                                description: 2xx responses by period, representative of webhook performance.
                              3xx:
                                type: array
                                items:
                                  type: integer
                                description: 3xx responses by period, representative of webhook performance.
                              4xx:
                                type: array
                                items:
                                  type: integer
                                description: 4xx responses by period, representative of webhook performance.
                              5xx:
                                type: array
                                items:
                                  type: integer
                                description: 5xx responses by period, representative of webhook performance.
                          - description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                            type: object
                            properties:
                              attempted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `attempted` messages.
                              bounced:
                                type: array
                                items:
                                  type: integer
                                description: The number of `bounced` messages.
                              clicked:
                                type: array
                                items:
                                  type: integer
                                description: The number of `clicked` messages.
                              converted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `converted` messages.
                              created:
                                type: array
                                items:
                                  type: integer
                                description: The number of `created` messages.
                              delivered:
                                type: array
                                items:
                                  type: integer
                                description: The number of `delivered` messages.
                              drafted:
                                type: array
                                items:
                                  type: integer
                                description: The number of `drafted` messages.
                              dropped:
                                type: array
                                items:
                                  type: integer
                                description: The number of `dropped` messages.
                              failed:
                                type: array
                                items:
                                  type: integer
                                description: The number of `failed` messages.
                              opened:
                                type: array
                                items:
                                  type: integer
                                description: The number of `opened` messages.
                              sent:
                                type: array
                                items:
                                  type: integer
                                description: The number of sent messages.
                              spammed:
                                type: array
                                items:
                                  type: integer
                                description: The number of spam complaints.
                              undeliverable:
                                type: array
                                items:
                                  type: integer
                                description: The number of `undeliverable` messages.
                              unsubscribed:
                                type: array
                                items:
                                  type: integer
                                description: The number of unsubscribes attributed to the campaign or message.
        '404':
          description: The newsletter and/or variant does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/newsletters/{newsletter_id}/content/{content_id}/metrics \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters/{newsletter_id}/content/{content_id}/metrics",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters/{newsletter_id}/content/{content_id}/metrics")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/newsletters/{newsletter_id}/content/{content_id}/metrics", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters/{newsletter_id}/content/{content_id}/metrics\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/newsletters/{newsletter_id}/content/{content_id}/metrics/links:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: newsletter_id
        in: path
        required: true
        description: The identifier of a newsletter.
        schema:
          type: integer
      - name: content_id
        in: path
        required: true
        description: The identifier of a newsletter variant—a language in a multi-language message or an individual test in an A/B test. You can [list your newsletter's variants](#operation/listNewsletterVariants) to find your newsletter's variants.
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: type
        in: query
        required: false
        description: The type of item you want to return campaign metrics for. When empty, the response contains metrics for all possible types.
        schema:
          type: string
          enum:
            - email
            - webhook
            - twilio
            - urban_airship
            - slack
            - push
    get:
      summary: Get newsletter variant link metrics
      operationId: getVariantLinks
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns link click metrics for an individual newsletter variant—an individual language in a multi-language newsletter or a message in an A/B test. Unless you specify otherwise, the response contains data for the maximum period by days (45 days).
      tags:
        - Newsletters
      responses:
        '200':
          description: Returns newsletter variant metrics by `series` (with increments are based on the `period` and `step` in your request) for the newsletter.
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    description: Each object in the array represents a link in your newsletter variant.
                    items:
                      type: object
                      properties:
                        link:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the link.
                              example: 1234
                            href:
                              type: string
                              description: The link destination—a URL, mailto, etc.
                              example: https://customer.io/docs
                        metric:
                          type: object
                          description: Contains metrics for the link.
                          properties:
                            series:
                              type: object
                              properties:
                                clicked:
                                  type: array
                                  description: An array of results from oldest to newest, where each result indicates a period.
                                  items:
                                    type: integer
                                  example:
                                    - 1
                                    - 3
                                    - 5
                                    - 7
        '404':
          description: The newsletter and/or variant does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/newsletters/{newsletter_id}/content/{content_id}/metrics/links \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/newsletters/{newsletter_id}/content/{content_id}/metrics/links",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/newsletters/{newsletter_id}/content/{content_id}/metrics/links")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/newsletters/{newsletter_id}/content/{content_id}/metrics/links", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/newsletters/{newsletter_id}/content/{content_id}/metrics/links\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/reporting_webhooks:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    post:
      summary: Create a reporting webhook
      operationId: createWebhook
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Create a new webhook configuration.
      tags:
        - Reporting Webhooks
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - endpoint
                - events
              properties:
                name:
                  type: string
                  description: The name of your webhook.
                  example: my cool webhook
                id:
                  type: integer
                  description: The identifier for the webhook.
                  readOnly: true
                  example: 4
                endpoint:
                  type: string
                  format: url
                  description: The webhook URL.
                  example: http://example.com/webhook
                disabled:
                  type: boolean
                  description: Set to `true` to quit sending events to the webhook URL. Set to `false` to enable the webhook.
                  example: false
                full_resolution:
                  type: boolean
                  description: Set to `false` to send unique open and click events to the webhook. Set to `true` to send all events.
                  default: false
                  example: true
                with_content:
                  type: boolean
                  description: Set to `true` to include the message `body` in `_sent` events.
                  example: false
                events:
                  description: Specifies the types of events you want to report to your webhook. See our [reporting webhooks reference](/docs/api/webhooks/#operation/reportingWebhook) for more information about event types and the information they return.
                  type: array
                  minItems: 1
                  items:
                    type: string
                    enum:
                      - customer_subscribed
                      - customer_unsubscribed
                      - email_drafted
                      - email_attempted
                      - email_sent
                      - email_delivered
                      - email_opened
                      - email_clicked
                      - email_converted
                      - email_bounced
                      - email_dropped
                      - email_deferred
                      - email_spammed
                      - email_failed
                      - email_unsubscribed
                      - email_undeliverable
                      - push_drafted
                      - push_attempted
                      - push_sent
                      - push_delivered
                      - push_opened
                      - push_clicked
                      - push_converted
                      - push_bounced
                      - push_dropped
                      - push_failed
                      - push_undeliverable
                      - slack_drafted
                      - slack_attempted
                      - slack_sent
                      - slack_clicked
                      - slack_converted
                      - slack_failed
                      - sms_drafted
                      - sms_attempted
                      - sms_sent
                      - sms_delivered
                      - sms_clicked
                      - sms_converted
                      - sms_bounced
                      - sms_failed
                      - sms_undeliverable
                      - webhook_drafted
                      - webhook_attempted
                      - webhook_sent
                      - webhook_clicked
                      - webhook_converted
                      - webhook_failed
                      - webhook_undeliverable
                  example:
                    - email_failed
                    - webhook_failed
      responses:
        '200':
          description: Returns your webhook configuration and the ID of the webhook.
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - endpoint
                  - events
                properties:
                  name:
                    type: string
                    description: The name of your webhook.
                    example: my cool webhook
                  id:
                    type: integer
                    description: The identifier for the webhook.
                    readOnly: true
                    example: 4
                  endpoint:
                    type: string
                    format: url
                    description: The webhook URL.
                    example: http://example.com/webhook
                  disabled:
                    type: boolean
                    description: Set to `true` to quit sending events to the webhook URL. Set to `false` to enable the webhook.
                    example: false
                  full_resolution:
                    type: boolean
                    description: Set to `false` to send unique open and click events to the webhook. Set to `true` to send all events.
                    default: false
                    example: true
                  with_content:
                    type: boolean
                    description: Set to `true` to include the message `body` in `_sent` events.
                    example: false
                  events:
                    description: Specifies the types of events you want to report to your webhook. See our [reporting webhooks reference](/docs/api/webhooks/#operation/reportingWebhook) for more information about event types and the information they return.
                    type: array
                    minItems: 1
                    items:
                      type: string
                      enum:
                        - customer_subscribed
                        - customer_unsubscribed
                        - email_drafted
                        - email_attempted
                        - email_sent
                        - email_delivered
                        - email_opened
                        - email_clicked
                        - email_converted
                        - email_bounced
                        - email_dropped
                        - email_deferred
                        - email_spammed
                        - email_failed
                        - email_unsubscribed
                        - email_undeliverable
                        - push_drafted
                        - push_attempted
                        - push_sent
                        - push_delivered
                        - push_opened
                        - push_clicked
                        - push_converted
                        - push_bounced
                        - push_dropped
                        - push_failed
                        - push_undeliverable
                        - slack_drafted
                        - slack_attempted
                        - slack_sent
                        - slack_clicked
                        - slack_converted
                        - slack_failed
                        - sms_drafted
                        - sms_attempted
                        - sms_sent
                        - sms_delivered
                        - sms_clicked
                        - sms_converted
                        - sms_bounced
                        - sms_failed
                        - sms_undeliverable
                        - webhook_drafted
                        - webhook_attempted
                        - webhook_sent
                        - webhook_clicked
                        - webhook_converted
                        - webhook_failed
                        - webhook_undeliverable
                    example:
                      - email_failed
                      - webhook_failed
        '400':
          description: The request was malformed.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://api.customer.io/v1/reporting_webhooks \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"name":"my cool webhook","endpoint":"http://example.com/webhook","disabled":false,"full_resolution":true,"with_content":false,"events":["email_failed","webhook_failed"]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/reporting_webhooks",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              name: 'my cool webhook',
              endpoint: 'http://example.com/webhook',
              disabled: false,
              full_resolution: true,
              with_content: false,
              events: ['email_failed', 'webhook_failed']
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/reporting_webhooks")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"name\":\"my cool webhook\",\"endpoint\":\"http://example.com/webhook\",\"disabled\":false,\"full_resolution\":true,\"with_content\":false,\"events\":[\"email_failed\",\"webhook_failed\"]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"name\":\"my cool webhook\",\"endpoint\":\"http://example.com/webhook\",\"disabled\":false,\"full_resolution\":true,\"with_content\":false,\"events\":[\"email_failed\",\"webhook_failed\"]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("POST", "/v1/reporting_webhooks", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/reporting_webhooks\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"my cool webhook\\\",\\\"endpoint\\\":\\\"http://example.com/webhook\\\",\\\"disabled\\\":false,\\\"full_resolution\\\":true,\\\"with_content\\\":false,\\\"events\\\":[\\\"email_failed\\\",\\\"webhook_failed\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    get:
      summary: List reporting webhooks
      operationId: listWebhooks
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return a list of all of your reporting webhooks
      tags:
        - Reporting Webhooks
      responses:
        '200':
          description: Returns an array of your `reporting_webhooks`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  reporting_webhooks:
                    type: array
                    items:
                      type: object
                      required:
                        - name
                        - endpoint
                        - events
                      properties:
                        name:
                          type: string
                          description: The name of your webhook.
                          example: my cool webhook
                        id:
                          type: integer
                          description: The identifier for the webhook.
                          readOnly: true
                          example: 4
                        endpoint:
                          type: string
                          format: url
                          description: The webhook URL.
                          example: http://example.com/webhook
                        disabled:
                          type: boolean
                          description: Set to `true` to quit sending events to the webhook URL. Set to `false` to enable the webhook.
                          example: false
                        full_resolution:
                          type: boolean
                          description: Set to `false` to send unique open and click events to the webhook. Set to `true` to send all events.
                          default: false
                          example: true
                        with_content:
                          type: boolean
                          description: Set to `true` to include the message `body` in `_sent` events.
                          example: false
                        events:
                          description: Specifies the types of events you want to report to your webhook. See our [reporting webhooks reference](/docs/api/webhooks/#operation/reportingWebhook) for more information about event types and the information they return.
                          type: array
                          minItems: 1
                          items:
                            type: string
                            enum:
                              - customer_subscribed
                              - customer_unsubscribed
                              - email_drafted
                              - email_attempted
                              - email_sent
                              - email_delivered
                              - email_opened
                              - email_clicked
                              - email_converted
                              - email_bounced
                              - email_dropped
                              - email_deferred
                              - email_spammed
                              - email_failed
                              - email_unsubscribed
                              - email_undeliverable
                              - push_drafted
                              - push_attempted
                              - push_sent
                              - push_delivered
                              - push_opened
                              - push_clicked
                              - push_converted
                              - push_bounced
                              - push_dropped
                              - push_failed
                              - push_undeliverable
                              - slack_drafted
                              - slack_attempted
                              - slack_sent
                              - slack_clicked
                              - slack_converted
                              - slack_failed
                              - sms_drafted
                              - sms_attempted
                              - sms_sent
                              - sms_delivered
                              - sms_clicked
                              - sms_converted
                              - sms_bounced
                              - sms_failed
                              - sms_undeliverable
                              - webhook_drafted
                              - webhook_attempted
                              - webhook_sent
                              - webhook_clicked
                              - webhook_converted
                              - webhook_failed
                              - webhook_undeliverable
                          example:
                            - email_failed
                            - webhook_failed
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/reporting_webhooks \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/reporting_webhooks",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/reporting_webhooks")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/reporting_webhooks", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/reporting_webhooks\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/reporting_webhooks/{webhook_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: id
        in: path
        required: true
        description: The identifier of a webhook.
        schema:
          type: integer
    get:
      summary: Get a reporting webhook
      operationId: getWebhook
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns information about a specific reporting webhook.
      tags:
        - Reporting Webhooks
      responses:
        '200':
          description: Returns an individual webhook configuration.
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - endpoint
                  - events
                properties:
                  name:
                    type: string
                    description: The name of your webhook.
                    example: my cool webhook
                  id:
                    type: integer
                    description: The identifier for the webhook.
                    readOnly: true
                    example: 4
                  endpoint:
                    type: string
                    format: url
                    description: The webhook URL.
                    example: http://example.com/webhook
                  disabled:
                    type: boolean
                    description: Set to `true` to quit sending events to the webhook URL. Set to `false` to enable the webhook.
                    example: false
                  full_resolution:
                    type: boolean
                    description: Set to `false` to send unique open and click events to the webhook. Set to `true` to send all events.
                    default: false
                    example: true
                  with_content:
                    type: boolean
                    description: Set to `true` to include the message `body` in `_sent` events.
                    example: false
                  events:
                    description: Specifies the types of events you want to report to your webhook. See our [reporting webhooks reference](/docs/api/webhooks/#operation/reportingWebhook) for more information about event types and the information they return.
                    type: array
                    minItems: 1
                    items:
                      type: string
                      enum:
                        - customer_subscribed
                        - customer_unsubscribed
                        - email_drafted
                        - email_attempted
                        - email_sent
                        - email_delivered
                        - email_opened
                        - email_clicked
                        - email_converted
                        - email_bounced
                        - email_dropped
                        - email_deferred
                        - email_spammed
                        - email_failed
                        - email_unsubscribed
                        - email_undeliverable
                        - push_drafted
                        - push_attempted
                        - push_sent
                        - push_delivered
                        - push_opened
                        - push_clicked
                        - push_converted
                        - push_bounced
                        - push_dropped
                        - push_failed
                        - push_undeliverable
                        - slack_drafted
                        - slack_attempted
                        - slack_sent
                        - slack_clicked
                        - slack_converted
                        - slack_failed
                        - sms_drafted
                        - sms_attempted
                        - sms_sent
                        - sms_delivered
                        - sms_clicked
                        - sms_converted
                        - sms_bounced
                        - sms_failed
                        - sms_undeliverable
                        - webhook_drafted
                        - webhook_attempted
                        - webhook_sent
                        - webhook_clicked
                        - webhook_converted
                        - webhook_failed
                        - webhook_undeliverable
                    example:
                      - email_failed
                      - webhook_failed
        '404':
          description: The webhook ID does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/reporting_webhooks/{webhook_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/reporting_webhooks/{webhook_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/reporting_webhooks/{webhook_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/reporting_webhooks/{webhook_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/reporting_webhooks/{webhook_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    put:
      summary: Update a webhook configuration
      operationId: updateWebhook
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Update the configuration of a reporting webhook. Turn events on or off, change the webhook URL, etc.
      tags:
        - Reporting Webhooks
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - endpoint
                - events
              properties:
                name:
                  type: string
                  description: The name of your webhook.
                  example: my cool webhook
                id:
                  type: integer
                  description: The identifier for the webhook.
                  readOnly: true
                  example: 4
                endpoint:
                  type: string
                  format: url
                  description: The webhook URL.
                  example: http://example.com/webhook
                disabled:
                  type: boolean
                  description: Set to `true` to quit sending events to the webhook URL. Set to `false` to enable the webhook.
                  example: false
                full_resolution:
                  type: boolean
                  description: Set to `false` to send unique open and click events to the webhook. Set to `true` to send all events.
                  default: false
                  example: true
                with_content:
                  type: boolean
                  description: Set to `true` to include the message `body` in `_sent` events.
                  example: false
                events:
                  description: Specifies the types of events you want to report to your webhook. See our [reporting webhooks reference](/docs/api/webhooks/#operation/reportingWebhook) for more information about event types and the information they return.
                  type: array
                  minItems: 1
                  items:
                    type: string
                    enum:
                      - customer_subscribed
                      - customer_unsubscribed
                      - email_drafted
                      - email_attempted
                      - email_sent
                      - email_delivered
                      - email_opened
                      - email_clicked
                      - email_converted
                      - email_bounced
                      - email_dropped
                      - email_deferred
                      - email_spammed
                      - email_failed
                      - email_unsubscribed
                      - email_undeliverable
                      - push_drafted
                      - push_attempted
                      - push_sent
                      - push_delivered
                      - push_opened
                      - push_clicked
                      - push_converted
                      - push_bounced
                      - push_dropped
                      - push_failed
                      - push_undeliverable
                      - slack_drafted
                      - slack_attempted
                      - slack_sent
                      - slack_clicked
                      - slack_converted
                      - slack_failed
                      - sms_drafted
                      - sms_attempted
                      - sms_sent
                      - sms_delivered
                      - sms_clicked
                      - sms_converted
                      - sms_bounced
                      - sms_failed
                      - sms_undeliverable
                      - webhook_drafted
                      - webhook_attempted
                      - webhook_sent
                      - webhook_clicked
                      - webhook_converted
                      - webhook_failed
                      - webhook_undeliverable
                  example:
                    - email_failed
                    - webhook_failed
      responses:
        '200':
          description: Returns your webhook configuration and the ID of the webhook.
          content:
            application/json:
              schema:
                type: object
                required:
                  - name
                  - endpoint
                  - events
                properties:
                  name:
                    type: string
                    description: The name of your webhook.
                    example: my cool webhook
                  id:
                    type: integer
                    description: The identifier for the webhook.
                    readOnly: true
                    example: 4
                  endpoint:
                    type: string
                    format: url
                    description: The webhook URL.
                    example: http://example.com/webhook
                  disabled:
                    type: boolean
                    description: Set to `true` to quit sending events to the webhook URL. Set to `false` to enable the webhook.
                    example: false
                  full_resolution:
                    type: boolean
                    description: Set to `false` to send unique open and click events to the webhook. Set to `true` to send all events.
                    default: false
                    example: true
                  with_content:
                    type: boolean
                    description: Set to `true` to include the message `body` in `_sent` events.
                    example: false
                  events:
                    description: Specifies the types of events you want to report to your webhook. See our [reporting webhooks reference](/docs/api/webhooks/#operation/reportingWebhook) for more information about event types and the information they return.
                    type: array
                    minItems: 1
                    items:
                      type: string
                      enum:
                        - customer_subscribed
                        - customer_unsubscribed
                        - email_drafted
                        - email_attempted
                        - email_sent
                        - email_delivered
                        - email_opened
                        - email_clicked
                        - email_converted
                        - email_bounced
                        - email_dropped
                        - email_deferred
                        - email_spammed
                        - email_failed
                        - email_unsubscribed
                        - email_undeliverable
                        - push_drafted
                        - push_attempted
                        - push_sent
                        - push_delivered
                        - push_opened
                        - push_clicked
                        - push_converted
                        - push_bounced
                        - push_dropped
                        - push_failed
                        - push_undeliverable
                        - slack_drafted
                        - slack_attempted
                        - slack_sent
                        - slack_clicked
                        - slack_converted
                        - slack_failed
                        - sms_drafted
                        - sms_attempted
                        - sms_sent
                        - sms_delivered
                        - sms_clicked
                        - sms_converted
                        - sms_bounced
                        - sms_failed
                        - sms_undeliverable
                        - webhook_drafted
                        - webhook_attempted
                        - webhook_sent
                        - webhook_clicked
                        - webhook_converted
                        - webhook_failed
                        - webhook_undeliverable
                    example:
                      - email_failed
                      - webhook_failed
        '400':
          description: The request was malformed.
        '404':
          description: The webhook ID does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request PUT \
              --url https://api.customer.io/v1/reporting_webhooks/{webhook_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"name":"my cool webhook","endpoint":"http://example.com/webhook","disabled":false,"full_resolution":true,"with_content":false,"events":["email_failed","webhook_failed"]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "PUT",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/reporting_webhooks/{webhook_id}",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              name: 'my cool webhook',
              endpoint: 'http://example.com/webhook',
              disabled: false,
              full_resolution: true,
              with_content: false,
              events: ['email_failed', 'webhook_failed']
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/reporting_webhooks/{webhook_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Put.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"name\":\"my cool webhook\",\"endpoint\":\"http://example.com/webhook\",\"disabled\":false,\"full_resolution\":true,\"with_content\":false,\"events\":[\"email_failed\",\"webhook_failed\"]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"name\":\"my cool webhook\",\"endpoint\":\"http://example.com/webhook\",\"disabled\":false,\"full_resolution\":true,\"with_content\":false,\"events\":[\"email_failed\",\"webhook_failed\"]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("PUT", "/v1/reporting_webhooks/{webhook_id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/reporting_webhooks/{webhook_id}\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"my cool webhook\\\",\\\"endpoint\\\":\\\"http://example.com/webhook\\\",\\\"disabled\\\":false,\\\"full_resolution\\\":true,\\\"with_content\\\":false,\\\"events\\\":[\\\"email_failed\\\",\\\"webhook_failed\\\"]}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    delete:
      summary: Delete a reporting webhook
      operationId: deleteWebhook
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Delete a reporting webhook's configuration.
      tags:
        - Reporting Webhooks
      responses:
        '200':
          description: A successful request has no response.
        '404':
          description: The webhook ID does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request DELETE \
              --url https://api.customer.io/v1/reporting_webhooks/{webhook_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/reporting_webhooks/{webhook_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/reporting_webhooks/{webhook_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("DELETE", "/v1/reporting_webhooks/{webhook_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/reporting_webhooks/{webhook_id}\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/segments:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    post:
      summary: Create a manual segment
      operationId: createManSegment
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Create a manual segment with a name and a description. This request creates an empty segment.
      tags:
        - Segments
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - segment
              properties:
                segment:
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: The name of the segment.
                      example: Manual Segment 1
                    description:
                      type: string
                      description: A description for the segment. This can help you understand the purpose of the segment when you encounter it in other requests or in the UI.
                      example: My first manual segment
      responses:
        '200':
          description: Returns the segment ID and other information.
          content:
            application/json:
              schema:
                type: object
                properties:
                  segment:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The identifier for a segment.
                        example: 7
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the segment.
                        example: Manual Segment 1
                      description:
                        type: string
                        description: A description for the segment. This can help you understand the purpose of the segment when you encounter it in other requests or in the UI.
                        example: My first manual segment
                      state:
                        type: string
                        description: |
                          The state of the segment. 
                        enum:
                          - finished
                      progress:
                        type: integer
                        nullable: true
                        description: If Customer.io has not finished processing the segment, this indicates the percentage complete. Otherwise, this key is null.
                        example: null
                      type:
                        type: string
                        description: The type of segment.
                        enum:
                          - dynamic
                          - manual
                        example: manual
                      tags:
                        type: array
                        description: The tags assigned to the segment, if any. Tags may help you sort through your segments.
                        nullable: true
                        items:
                          type: string
                        example: null
        '400':
          description: The request was malformed.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://api.customer.io/v1/segments \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"segment":{"name":"Manual Segment 1","description":"My first manual segment"}}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/segments",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({segment: {name: 'Manual Segment 1', description: 'My first manual segment'}}));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/segments")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"segment\":{\"name\":\"Manual Segment 1\",\"description\":\"My first manual segment\"}}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"segment\":{\"name\":\"Manual Segment 1\",\"description\":\"My first manual segment\"}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("POST", "/v1/segments", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/segments\"\n\n\tpayload := strings.NewReader(\"{\\\"segment\\\":{\\\"name\\\":\\\"Manual Segment 1\\\",\\\"description\\\":\\\"My first manual segment\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    get:
      summary: List segments
      operationId: listSegments
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Retrieve a list of all of your segments.
      tags:
        - Segments
      responses:
        '200':
          description: Returns an array of `segments`. Each object in the response represents an individual segment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  segments:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The identifier for a segment.
                          example: 7
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        name:
                          type: string
                          description: The name of the segment.
                          example: Manual Segment 1
                        description:
                          type: string
                          description: A description for the segment. This can help you understand the purpose of the segment when you encounter it in other requests or in the UI.
                          example: My first manual segment
                        state:
                          type: string
                          description: |
                            The state of the segment. 
                          enum:
                            - finished
                        progress:
                          type: integer
                          nullable: true
                          description: If Customer.io has not finished processing the segment, this indicates the percentage complete. Otherwise, this key is null.
                          example: null
                        type:
                          type: string
                          description: The type of segment.
                          enum:
                            - dynamic
                            - manual
                          example: manual
                        tags:
                          type: array
                          description: The tags assigned to the segment, if any. Tags may help you sort through your segments.
                          nullable: true
                          items:
                            type: string
                          example: null
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/segments \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/segments",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/segments")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/segments", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/segments\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/segments/{segment_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: segment_id
        in: path
        required: true
        description: The identifier for a segment. You can find your segment's ID on its page in the dashboard—go to *Segments*, select your segment, and find the ID under *Usage*. Or you can find your segment using the [App API](#tag/Segments).
        schema:
          type: integer
          format: int32
    get:
      summary: Get a segment
      operationId: getSegment
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Return information about a segment.
      tags:
        - Segments
      responses:
        '200':
          description: Returns the information about the segment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  segment:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The identifier for a segment.
                        example: 7
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the segment.
                        example: Manual Segment 1
                      description:
                        type: string
                        description: A description for the segment. This can help you understand the purpose of the segment when you encounter it in other requests or in the UI.
                        example: My first manual segment
                      state:
                        type: string
                        description: |
                          The state of the segment. 
                        enum:
                          - finished
                      progress:
                        type: integer
                        nullable: true
                        description: If Customer.io has not finished processing the segment, this indicates the percentage complete. Otherwise, this key is null.
                        example: null
                      type:
                        type: string
                        description: The type of segment.
                        enum:
                          - dynamic
                          - manual
                        example: manual
                      tags:
                        type: array
                        description: The tags assigned to the segment, if any. Tags may help you sort through your segments.
                        nullable: true
                        items:
                          type: string
                        example: null
        '404':
          description: The `segment_id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/segments/{segment_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/segments/{segment_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/segments/{segment_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/segments/{segment_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/segments/{segment_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    delete:
      summary: Delete a segment
      operationId: deleteManSegment
      description: Delete a manual segment.
      security:
        - Bearer-Auth-(App-API-Key): []
      tags:
        - Segments
      responses:
        '204':
          description: The segment is deleted.
        '404':
          description: The `segment_id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request DELETE \
              --url https://api.customer.io/v1/segments/{segment_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/segments/{segment_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/segments/{segment_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("DELETE", "/v1/segments/{segment_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/segments/{segment_id}\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/segments/{segment_id}/used_by:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: segment_id
        in: path
        required: true
        description: The identifier for a segment. You can find your segment's ID on its page in the dashboard—go to *Segments*, select your segment, and find the ID under *Usage*. Or you can find your segment using the [App API](#tag/Segments).
        schema:
          type: integer
          format: int32
    get:
      summary: Get a segment's dependencies
      operationId: getSegmentDependencies
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Use this endpoint to find out which campaigns and newsletters use a segment.
      tags:
        - Segments
      responses:
        '200':
          description: Returns the IDs of items that reference the segment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  used_by:
                    type: object
                    properties:
                      campaigns:
                        type: array
                        description: The campaigns that use this segment.
                        items:
                          type: integer
                      sent_newsletters:
                        type: array
                        description: The newsletters that you've sent that uses this segment.
                        items:
                          type: integer
                      draft_newsletters:
                        type: array
                        description: The newsletters that are still in a draft state that reference this segment.
                        items:
                          type: integer
        '404':
          description: The `segment_id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/segments/{segment_id}/used_by \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/segments/{segment_id}/used_by",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/segments/{segment_id}/used_by")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/segments/{segment_id}/used_by", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/segments/{segment_id}/used_by\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/segments/{segment_id}/customer_count:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: segment_id
        in: path
        required: true
        description: The identifier for a segment. You can find your segment's ID on its page in the dashboard—go to *Segments*, select your segment, and find the ID under *Usage*. Or you can find your segment using the [App API](#tag/Segments).
        schema:
          type: integer
          format: int32
    get:
      summary: Get a segment customer count
      operationId: getSegmentCount
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns the membership count for a segment.
      tags:
        - Segments
      responses:
        '200':
          description: Returns the customer `count` for a segment.
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    description: The total number of customers in the segment.
        '404':
          description: The `segment_id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/segments/{segment_id}/customer_count \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/segments/{segment_id}/customer_count",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/segments/{segment_id}/customer_count")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/segments/{segment_id}/customer_count", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/segments/{segment_id}/customer_count\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/segments/{segment_id}/membership:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: segment_id
        in: path
        required: true
        description: The identifier for a segment. You can find your segment's ID on its page in the dashboard—go to *Segments*, select your segment, and find the ID under *Usage*. Or you can find your segment using the [App API](#tag/Segments).
        schema:
          type: integer
          format: int32
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
          default: 1000
          maximum: 30000
    get:
      summary: List customers in a segment
      operationId: getSegmentMembership
      security:
        - Bearer-Auth-(App-API-Key): []
      description: |
        Returns customers in a segment. This endpoint returns an array of `identifiers`; each object in the array represents a person and contains the identifier values allowed in your workspace. In general, we recommend that you use `identifiers` rather than `ids` to find people, because it provides more information.  

        **If your workspace does not use email as a unique identifier** for people, `identifiers` does not contain `email` values. Go to your [Workspace Settings](/docs/workspaces/#migrate-workspace) to find out which identifiers your workspace supports.

        The `ids` array only lists ID values for people in a segment; if your workspace uses both `email` and `id` as identifiers, it's possible that a member of your segment does not have an `id` value, resulting in an empty string in the `ids` array.
      tags:
        - Segments
      responses:
        '200':
          description: Returns an array of customers for a segment.
          content:
            application/json:
              schema:
                oneOf:
                  - title: email or id
                    type: object
                    properties:
                      ids:
                        type: array
                        description: The customers that belong to this segment.
                        items:
                          type: string
                      identifiers:
                        description: The customers that belong to this segment.
                        type: array
                        items:
                          type: object
                          description: |
                            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                            We recommend that you use this object rather than the less descriptive `customer_id`.
                          required:
                            - email
                            - id
                            - cio_id
                          properties:
                            email:
                              type: string
                              nullable: true
                              format: email
                              description: A person's email address, if set.
                              example: cool.person@example.com
                            id:
                              type: string
                              nullable: true
                              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                              example: 2
                            cio_id:
                              type: string
                              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                              example: 786433
                      next:
                        type: integer
                        description: Indicates the next page of results. Add `?start=undefined<next_value>` to the request to get the next page of results.
                  - title: id only
                    type: object
                    properties:
                      ids:
                        type: array
                        description: The customers that belong to this segment.
                        items:
                          type: string
                      identifiers:
                        description: The customers that belong to this segment.
                        type: array
                        items:
                          type: object
                          description: |
                            Contains `id` and `cio_id` identifiers for a person in a workspace that doesn't use email as an identifier.
                          required:
                            - id
                            - cio_id
                          properties:
                            id:
                              type: string
                              description: A person's unique ID. This matches a value in `ids`.
                              example: 2
                            cio_id:
                              type: string
                              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                              example: 786433
                      next:
                        type: integer
                        description: Indicates the next page of results. Add `?start=undefined<next_value>` to the request to get the next page of results.
        '404':
          description: The `segment_id` does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/segments/{segment_id}/membership \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/segments/{segment_id}/membership",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/segments/{segment_id}/membership")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/segments/{segment_id}/membership", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/segments/{segment_id}/membership\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/sender_identities:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
      - name: sort
        in: query
        description: Determine how you want to sort results, `asc` for chronological order and `desc` for reverse chronological order.
        required: false
        schema:
          type: string
          enum:
            - asc
            - desc
    get:
      summary: List sender identities
      operationId: listSenders
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of senders in your workspace. Senders are who your messages are "from".
      tags:
        - Sender Identities
      responses:
        '200':
          description: Returns an array of `sender_identities`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sender_identities:
                    type: array
                    items:
                      type: object
                      description: Information about a sender.
                      properties:
                        id:
                          type: integer
                          description: The identifier of a sender.
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        name:
                          type: string
                          description: The name of the sender.
                        email:
                          type: string
                          description: The email address of the sender.
                        address:
                          type: string
                          description: The sender name and email address in the format `name undefined<name@example.com>`.
                        template_type:
                          type: string
                          enum:
                            - email
                            - phone
                          description: The type of sender.
                        auto_generated:
                          type: boolean
                          description: If true, the sender is automatically generated by Customer.io.
                      example:
                        id: 4534
                        deduplicate_id: '4534:1478035647'
                        name: Cher Ami
                        email: test@example.com
                        address: Cher Ami undefined<test@example.com>
                        template_type: email
                        auto_generated: false
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/sender_identities \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/sender_identities",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/sender_identities")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/sender_identities", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/sender_identities\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/sender_identities/{sender_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: sender_id
        in: path
        required: true
        description: The identifier of a sender.
        schema:
          type: integer
    get:
      summary: Get a sender
      operationId: getSender
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns information about a specific sender.
      tags:
        - Sender Identities
      responses:
        '200':
          description: Returns the `sender_identity` you requested.
          content:
            application/json:
              schema:
                type: object
                properties:
                  sender_identity:
                    type: object
                    description: Information about a sender.
                    properties:
                      id:
                        type: integer
                        description: The identifier of a sender.
                      deduplicate_id:
                        type: string
                        readOnly: true
                        description: A completely unique CIO identifier.
                        example: '15:1492548073'
                      name:
                        type: string
                        description: The name of the sender.
                      email:
                        type: string
                        description: The email address of the sender.
                      address:
                        type: string
                        description: The sender name and email address in the format `name undefined<name@example.com>`.
                      template_type:
                        type: string
                        enum:
                          - email
                          - phone
                        description: The type of sender.
                      auto_generated:
                        type: boolean
                        description: If true, the sender is automatically generated by Customer.io.
                    example:
                      id: 4534
                      deduplicate_id: '4534:1478035647'
                      name: Cher Ami
                      email: test@example.com
                      address: Cher Ami undefined<test@example.com>
                      template_type: email
                      auto_generated: false
        '404':
          description: The sender does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/sender_identities/{sender_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/sender_identities/{sender_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/sender_identities/{sender_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/sender_identities/{sender_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/sender_identities/{sender_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/sender_identities/{sender_id}/used_by:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: sender_id
        in: path
        required: true
        description: The identifier of a sender.
        schema:
          type: integer
    get:
      summary: Get sender usage data
      operationId: getSenderUsage
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns lists of the campaigns and newsletters that use a sender.
      tags:
        - Sender Identities
      responses:
        '200':
          description: Returns arrays of campaigns and newsletters.
          content:
            application/json:
              schema:
                type: object
                properties:
                  campaigns:
                    type: array
                    description: The campaigns that use the sender.
                    items:
                      type: integer
                  sent_newsletters:
                    type: array
                    description: The newsletters you've sent that used the sender.
                    items:
                      type: integer
                  draft_newsletters:
                    type: array
                    description: The newsletter drafts that are set up using the sender.
                    items:
                      type: integer
        '404':
          description: The sender does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/sender_identities/{sender_id}/used_by \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/sender_identities/{sender_id}/used_by",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/sender_identities/{sender_id}/used_by")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/sender_identities/{sender_id}/used_by", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/sender_identities/{sender_id}/used_by\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/snippets:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      summary: List snippets
      operationId: listSnippets
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of snippets in your workspace. Snippets are pieces of reusable content, like a common footer for your emails.
      tags:
        - Snippets
      responses:
        '200':
          description: Returns an array of `snippets`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  snippets:
                    type: array
                    items:
                      type: object
                      description: describes a piece of reusable content. You must provide a name for the snippet and the `value`—the content that appears in messages that use the snippet.
                      required:
                        - name
                        - value
                      properties:
                        name:
                          type: string
                          description: The name of the snippet, must be unique.
                        value:
                          type: string
                          description: The contents of the snippet.
                        updated_at:
                          type: integer
                          format: unix timestamp
                          description: The last date-time the snippet was updated.
                          readOnly: true
                      example:
                        name: address
                        value: undefined<strong>My Company</strong>undefined</br>1234 Fake Stundefined<br/>Fake,NYundefined<br/>10111
                        updated_at: 1582500000
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/snippets \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/snippets",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/snippets")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/snippets", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/snippets\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
    put:
      summary: Update snippets
      operationId: updateSnippets
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Update the `name` or `value` of a snippet.
      tags:
        - Snippets
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: describes a piece of reusable content. You must provide a name for the snippet and the `value`—the content that appears in messages that use the snippet.
              required:
                - name
                - value
              properties:
                name:
                  type: string
                  description: The name of the snippet, must be unique.
                value:
                  type: string
                  description: The contents of the snippet.
                updated_at:
                  type: integer
                  format: unix timestamp
                  description: The last date-time the snippet was updated.
                  readOnly: true
              example:
                name: address
                value: undefined<strong>My Company</strong>undefined</br>1234 Fake Stundefined<br/>Fake,NYundefined<br/>10111
                updated_at: 1582500000
      responses:
        '200':
          description: Returns an array of `snippets`.
          content:
            application/json:
              schema:
                type: object
                properties:
                  snippet:
                    type: object
                    description: describes a piece of reusable content. You must provide a name for the snippet and the `value`—the content that appears in messages that use the snippet.
                    required:
                      - name
                      - value
                    properties:
                      name:
                        type: string
                        description: The name of the snippet, must be unique.
                      value:
                        type: string
                        description: The contents of the snippet.
                      updated_at:
                        type: integer
                        format: unix timestamp
                        description: The last date-time the snippet was updated.
                        readOnly: true
                    example:
                      name: address
                      value: undefined<strong>My Company</strong>undefined</br>1234 Fake Stundefined<br/>Fake,NYundefined<br/>10111
                      updated_at: 1582500000
        '400':
          description: The request is malformed; the snippet name is already in use.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request PUT \
              --url https://api.customer.io/v1/snippets \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN' \
              --header 'content-type: application/json' \
              --data '{"name":"address","value":"undefined<strong>My Company</strong>undefined</br>1234 Fake Stundefined<br/>Fake,NYundefined<br/>10111","updated_at":1582500000}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "PUT",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/snippets",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              name: 'address',
              value: 'undefined<strong>My Company</strong>undefined</br>1234 Fake Stundefined<br/>Fake,NYundefined<br/>10111',
              updated_at: 1582500000
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/snippets")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Put.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'
            request.body = "{\"name\":\"address\",\"value\":\"undefined<strong>My Company</strong>undefined</br>1234 Fake Stundefined<br/>Fake,NYundefined<br/>10111\",\"updated_at\":1582500000}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            payload = "{\"name\":\"address\",\"value\":\"undefined<strong>My Company</strong>undefined</br>1234 Fake Stundefined<br/>Fake,NYundefined<br/>10111\",\"updated_at\":1582500000}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Bearer REPLACE_BEARER_TOKEN"
                }

            conn.request("PUT", "/v1/snippets", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/snippets\"\n\n\tpayload := strings.NewReader(\"{\\\"name\\\":\\\"address\\\",\\\"value\\\":\\\"undefined<strong>My Company</strong>undefined</br>1234 Fake Stundefined<br/>Fake,NYundefined<br/>10111\\\",\\\"updated_at\\\":1582500000}\")\n\n\treq, _ := http.NewRequest(\"PUT\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/snippets/{snippet_name}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: snippet_name
        in: path
        required: true
        description: The name of a snippet.
        schema:
          type: string
    delete:
      summary: Delete a snippet
      operationId: deleteSnippet
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Remove a snippet. You can only remove a snippet that is not in use. If your snippet is in use, you'll receive a `400` error.
      tags:
        - Snippets
      responses:
        '204':
          description: A successful delete operation returns no content.
        '400':
          description: The snippet is in use. You can't delete a snippet until you remove it from messages, templates, etc.
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    description: Contains an array of error objects.
                    type: array
                    items:
                      type: object
                      properties:
                        detail:
                          type: string
                          description: Describes the error.
                          example: unable to delete snippet in use
                        status:
                          type: string
                          description: The HTTP status code.
                          example: '400'
        '404':
          description: The snippet does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request DELETE \
              --url https://api.customer.io/v1/snippets/{snippet_name} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "DELETE",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/snippets/{snippet_name}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/snippets/{snippet_name}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Delete.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("DELETE", "/v1/snippets/{snippet_name}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/snippets/{snippet_name}\"\n\n\treq, _ := http.NewRequest(\"DELETE\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/transactional:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    get:
      summary: List transactional messages
      operationId: listTransactional
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of your transactional messages—the transactional IDs that you use to trigger an individual transactional delivery. This endpoint does not return information about deliveries (instances of a message sent to a person) themselves.
      tags:
        - Transactional
      responses:
        '200':
          description: Returns an array of transactional messages.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      description: Contains information about a transactional message.
                      type: object
                      properties:
                        id:
                          type: integer
                          description: The identifier Customer.io assigned to the transactional message
                          example: 2
                        name:
                          type: string
                          description: The name you set for the transactional message.
                          example: password reset
                        description:
                          type: string
                          description: A description of the transactional message.
                          example: sends a temporary password and lets the customer reset their password.
                        send_to_unsubscribed:
                          type: boolean
                          description: If true, people with an `unsubscribed` attribute set to `true` can trigger the message.
                        link_tracking:
                          type: boolean
                          description: If true, link tracking is enabled for this message.
                        open_tracking:
                          type: boolean
                          description: If true, open-tracking is enabled for this message.
                        hide_message_body:
                          type: boolean
                          description: If true, message contents are not retained in delivery history—you cannot recall the exact contents of the message.
                        queue_drafts:
                          type: boolean
                          description: If true, messages do not send automatically, and queue as drafts instead. You must send drafts through the *Deliveries & Drafts* page in the user interface.
                        created_at:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        updated_at:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was last updated.
                          example: 1552341937
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/transactional \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/transactional",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/transactional")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/transactional", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/transactional\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/transactional/{transactional_id}:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: transactional_id
        description: The identifier for a transactional message template.
        in: path
        required: true
        schema:
          type: integer
    get:
      operationId: getTransactional
      summary: Get a transactional message
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns information about an individual transactional message.
      tags:
        - Transactional
      responses:
        '200':
          description: Returns metadata for the transactional message ID in the path.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    description: Contains information about a transactional message.
                    type: object
                    properties:
                      id:
                        type: integer
                        description: The identifier Customer.io assigned to the transactional message
                        example: 2
                      name:
                        type: string
                        description: The name you set for the transactional message.
                        example: password reset
                      description:
                        type: string
                        description: A description of the transactional message.
                        example: sends a temporary password and lets the customer reset their password.
                      send_to_unsubscribed:
                        type: boolean
                        description: If true, people with an `unsubscribed` attribute set to `true` can trigger the message.
                      link_tracking:
                        type: boolean
                        description: If true, link tracking is enabled for this message.
                      open_tracking:
                        type: boolean
                        description: If true, open-tracking is enabled for this message.
                      hide_message_body:
                        type: boolean
                        description: If true, message contents are not retained in delivery history—you cannot recall the exact contents of the message.
                      queue_drafts:
                        type: boolean
                        description: If true, messages do not send automatically, and queue as drafts instead. You must send drafts through the *Deliveries & Drafts* page in the user interface.
                      created_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was created.
                        example: 1552341937
                      updated_at:
                        type: integer
                        format: unix timestamp
                        description: The date time when the referenced ID was last updated.
                        example: 1552341937
        '404':
          description: The transactional message does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/transactional/{transactional_id} \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/transactional/{transactional_id}",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/transactional/{transactional_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/transactional/{transactional_id}", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/transactional/{transactional_id}\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/transactional/{transactional_id}/metrics:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: transactional_id
        description: The identifier for a transactional message template.
        in: path
        required: true
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
    get:
      operationId: transactionalMetrics
      summary: Get transactional message metrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns a list of metrics for a transactional message in `steps` (days, weeks, etc). We return metrics from oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Transactional
      responses:
        '200':
          description: Returns transactional message metrics by `series` (with increments are based on the `period` and `step` in your request) for transactional message.
          content:
            application/json:
              schema:
                type: object
                properties:
                  metric:
                    type: object
                    properties:
                      series:
                        description: Returns metrics in accordance with the `period` you requested. Each property in this object is an array and each entry in the array represents a metric period, i.e. if your `period` is days `[0, 1]` would represent 0 metrics for the first day, 1 for the second, etc.
                        type: object
                        properties:
                          attempted:
                            type: array
                            items:
                              type: integer
                            description: The number of `attempted` messages.
                          bounced:
                            type: array
                            items:
                              type: integer
                            description: The number of `bounced` messages.
                          clicked:
                            type: array
                            items:
                              type: integer
                            description: The number of `clicked` messages.
                          converted:
                            type: array
                            items:
                              type: integer
                            description: The number of `converted` messages.
                          created:
                            type: array
                            items:
                              type: integer
                            description: The number of `created` messages.
                          delivered:
                            type: array
                            items:
                              type: integer
                            description: The number of `delivered` messages.
                          drafted:
                            type: array
                            items:
                              type: integer
                            description: The number of `drafted` messages.
                          dropped:
                            type: array
                            items:
                              type: integer
                            description: The number of `dropped` messages.
                          failed:
                            type: array
                            items:
                              type: integer
                            description: The number of `failed` messages.
                          opened:
                            type: array
                            items:
                              type: integer
                            description: The number of `opened` messages.
                          sent:
                            type: array
                            items:
                              type: integer
                            description: The number of sent messages.
                          spammed:
                            type: array
                            items:
                              type: integer
                            description: The number of spam complaints.
                          undeliverable:
                            type: array
                            items:
                              type: integer
                            description: The number of `undeliverable` messages.
                          unsubscribed:
                            type: array
                            items:
                              type: integer
                            description: The number of unsubscribes attributed to the campaign or message.
        '404':
          description: The transactional message you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/transactional/{transactional_id}/metrics \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/transactional/{transactional_id}/metrics",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/transactional/{transactional_id}/metrics")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/transactional/{transactional_id}/metrics", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/transactional/{transactional_id}/metrics\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/transactional/{transactional_id}/metrics/links:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: transactional_id
        description: The identifier for a transactional message template.
        in: path
        required: true
        schema:
          type: integer
      - name: period
        in: query
        required: false
        description: The unit of time for your report.
        schema:
          type: string
          default: days
          enum:
            - hours
            - days
            - weeks
            - months
      - name: steps
        in: query
        required: false
        description: The number of periods you want to return. Defaults to the maximum available, or `12` if the period is in `months`. Maximums are 24 hours, 45 days, 12 weeks, or 120 months.
        schema:
          type: integer
      - name: unique
        in: query
        required: false
        description: If true, the response contains only unique customer results, i.e. a customer who clicks a link twice is only counted once. If false, the response contains the total number of results without regard to uniqueness.
        schema:
          type: boolean
          default: false
    get:
      operationId: transactionalLinks
      summary: Get transactional message link metrics
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns metrics for clicked links from a transactional message, both in total and in `series` periods (days, weeks, etc). `series` metrics are ordered oldest to newest (i.e. the 0-index for any result is the oldest step/period).
      tags:
        - Transactional
      responses:
        '200':
          description: Returns an array of link objects. Each object represents a different link in your transactional message and contains independent metrics.
          content:
            application/json:
              schema:
                type: object
                properties:
                  links:
                    type: array
                    items:
                      type: object
                      properties:
                        link:
                          type: object
                          properties:
                            id:
                              type: integer
                              description: The ID of the link.
                              example: 1234
                            href:
                              type: string
                              description: The link destination—a URL, mailto, etc.
                              example: https://customer.io/docs
                        metric:
                          type: object
                          description: Contains metrics for the link.
                          properties:
                            series:
                              type: object
                              properties:
                                clicked:
                                  type: array
                                  description: An array of results from oldest to newest, where each result indicates a period.
                                  items:
                                    type: integer
                                  example:
                                    - 1
                                    - 3
                                    - 5
                                    - 7
        '404':
          description: The transactional message you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/transactional/{transactional_id}/metrics/links \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/transactional/{transactional_id}/metrics/links",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/transactional/{transactional_id}/metrics/links")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/transactional/{transactional_id}/metrics/links", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/transactional/{transactional_id}/metrics/links\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /v1/transactional/{transactional_id}/messages:
    servers:
      - url: https://api.customer.io
        description: This API uses bearer authorization, requiring a [token that you generate in the UI](https://fly.customer.io/settings/api_credentials?keyType=app).
    parameters:
      - name: transactional_id
        description: The identifier for a transactional message template.
        in: path
        required: true
        schema:
          type: integer
      - name: start
        in: query
        required: false
        description: The token for the page of results you want to return. Responses contain a `next` property. Use this property as the `start` value to return the next page of results.
        schema:
          type: string
      - name: limit
        in: query
        required: false
        description: The maximum number of results you want to retrieve per page.
        schema:
          type: integer
      - name: metric
        in: query
        required: false
        description: Determines the metric(s) you want to return.
        schema:
          type: string
          enum:
            - created
            - attempted
            - sent
            - delivered
            - opened
            - clicked
            - converted
            - bounced
            - spammed
            - unsubscribed
            - dropped
            - failed
            - undeliverable
      - name: state
        in: query
        required: false
        description: The state of a broadcast.
        schema:
          type: string
          enum:
            - failed
            - sent
            - drafted
            - attempted
    get:
      operationId: transactionalMessages
      summary: Get transactional message deliveries
      security:
        - Bearer-Auth-(App-API-Key): []
      description: Returns information about the deliveries (instances of a message sent to individual people) from a transactional message. Provide query parameters to refine the metrics you want to return.
      tags:
        - Transactional
      responses:
        '200':
          description: |
            Returns an array of `messages`. Each object represents a different delivery originating from the transactional ID. 

            For transactional messages, the action, newsletter, campaign, content, and broadcast IDs are all `null`. All deliveries originate from the transactional ID in the path of your request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  messages:
                    type: array
                    items:
                      type: object
                      description: Describes an individual message delivery. The object contains keys for all possible parents of the message (`newsletter_id`, `broadcast_id`, etc) but only the parents of the delivery are populated. Other parent IDs are null.
                      properties:
                        id:
                          description: The identifier for a delivery—the instance of a message intended for an individual recipient.
                          type: string
                          readOnly: true
                          example: dgOq6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id:
                          type: string
                          readOnly: true
                          description: A completely unique CIO identifier.
                          example: '15:1492548073'
                        message_template_id:
                          description: The identifier of the message template used to create a message.
                          type: integer
                          readOnly: true
                          deprecated: true
                        customer_id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                        customer_identifiers:
                          type: object
                          description: |
                            Contains identifiers for the person represented in a response—`id`, `cio_id`, and `email` (if your workspace uses the *Email or ID* setting). If the person's `id` or `email` is not set, the value will be null.

                            We recommend that you use this object rather than the less descriptive `customer_id`.
                          required:
                            - email
                            - id
                            - cio_id
                          properties:
                            email:
                              type: string
                              nullable: true
                              format: email
                              description: A person's email address, if set.
                              example: cool.person@example.com
                            id:
                              type: string
                              nullable: true
                              description: A person's unique ID, if set. This is the same as the `customer_id` if present.
                              example: 2
                            cio_id:
                              type: string
                              description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                              example: 786433
                        recipient:
                          description: The recipient address for an action.
                          type: string
                          example: '{{customer.email}}'
                        subject:
                          type: string
                          description: The subject line for an `email` action.
                          example: Did you get that thing I sent you?
                        metrics:
                          type: object
                          description: Metrics for an individual instance of a message; each item in the object represents the timestamp when a message achieved a particular metric. This object only contains metrics that have been recorded.
                          properties:
                            bounced:
                              type: integer
                              description: The timestamp when the message `bounced`.
                            clicked:
                              type: integer
                              description: The timestamp when the message was `clicked`.
                            converted:
                              type: integer
                              description: The timestamp when the message was `converted`.
                            created:
                              type: integer
                              description: The timestamp when the message was `created`.
                            delivered:
                              type: integer
                              description: The timestamp when the message was `delivered`.
                            drafted:
                              type: integer
                              description: The timestamp when the message was `drafted`.
                            dropped:
                              type: integer
                              description: The timestamp when the message was `dropped`.
                            failed:
                              type: integer
                              description: The timestamp when the message `failed`.
                            opened:
                              type: integer
                              description: The timestamp when the message was `opened`.
                            sent:
                              type: integer
                              description: The timestamp when the message was `sent`.
                            spammed:
                              type: integer
                              description: The timestamp when the message was marked as spam.
                            undeliverable:
                              type: integer
                              description: The timestamp when the message became `undeliverable`.
                            unsubscribed:
                              type: integer
                              description: The timestamp when a person unsubscribed based on this message.
                        created:
                          type: integer
                          format: unix timestamp
                          description: The date time when the referenced ID was created.
                          example: 1552341937
                        failure_message:
                          type: string
                          description: Explains why a message failed, if applicable.
                          nullable: true
                        campaign_id:
                          description: The identifier for a campaign.
                          type: integer
                          readOnly: true
                          example: 5
                          nullable: true
                        action_id:
                          description: The identifier for an action.
                          type: integer
                          readOnly: true
                          example: 96
                          nullable: true
                        newsletter_id:
                          description: The identifier for a newsletter.
                          type: integer
                          readOnly: true
                          nullable: true
                        content_id:
                          description: The identifier for a newsletter variant.
                          type: integer
                          readOnly: true
                          example: 1
                          nullable: true
                        broadcast_id:
                          type: integer
                          description: The identifier for a broadcast.
                          example: 2
                          nullable: true
                        type:
                          description: The type of message/action.
                          type: string
                          enum:
                            - email
                            - webhook
                            - twilio
                            - urban_airship
                            - slack
                            - push
                          readOnly: true
                          example: email
                        forgotten:
                          type: boolean
                          description: If true message contents are not retained by Customer.io.
                      example:
                        id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=
                        deduplicate_id: ag1q6QWq6QUBAAF4_CGoeVX7mFkDbRFu7ek=:1619137768
                        msg_template_id: 43
                        action_id: 215
                        customer_id: null
                        recipient: person@example.com
                        subject: Did you get that thing I sent you?
                        metrics:
                          delivered: 1619137768
                          sent: 1619137768
                        created: 1619137767
                        failure_message: null
                        newsletter_id: null
                        content_id: null
                        campaign_id: 23
                        broadcast_id: null
                        type: email
                        forgotten: false
                    example:
                      - id: dgOq6QWq6QUDAAF22PaOyFVqVxHY3rI5fsg=
                        deduplicate_id: dgOq6QWq6QUDAAF22PaOyFVqVxHY3rI5fsg=:1609957872
                        msg_template_id: 589
                        action_id: null
                        customer_id: 1a55d8d1-b13d-4f1f-858f-a93ef21e3a7d
                        identifiers:
                          id: 1a55d8d1-b13d-4f1f-858f-a93ef21e3a7d
                          email: person@example.com
                          cio_id: 786433
                        recipient: person@example.com
                        subject: Reset your password
                        metrics:
                          delivered: 1609957872
                          sent: 1609957832
                        created: 1609957805
                        failure_message: null
                        newsletter_id: null
                        content_id: null
                        campaign_id: null
                        broadcast_id: null
                        type: email
                        forgotten: false
        '404':
          description: The transactional message you requested does not exist.
        '429':
          description: Your request is over the 10-per-second limit.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://api.customer.io/v1/transactional/{transactional_id}/messages \
              --header 'Authorization: Bearer REPLACE_BEARER_TOKEN'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "api.customer.io",
              "port": null,
              "path": "/v1/transactional/{transactional_id}/messages",
              "headers": {
                "Authorization": "Bearer REPLACE_BEARER_TOKEN"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://api.customer.io/v1/transactional/{transactional_id}/messages")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Bearer REPLACE_BEARER_TOKEN'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("api.customer.io")

            headers = { 'Authorization': "Bearer REPLACE_BEARER_TOKEN" }

            conn.request("GET", "/v1/transactional/{transactional_id}/messages", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://api.customer.io/v1/transactional/{transactional_id}/messages\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Bearer REPLACE_BEARER_TOKEN\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /api/v1/accounts/region:
    get:
      operationId: getRegion
      summary: Find your account region
      description: |
        This endpoint returns the appropriate region and URL for your Track API credentials. Use it to determine the URLs you should use to successfully complete other requests.

        You can perform this operation against either of the track API regional URLs; it returns your region in either case. 

        This endpoint also returns an `environment_id`, which represents the workspace the credentials are valid for. 
      tags:
        - trackRegion
      security:
        - Basic-Auth-(Tracking-API-Key): []
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API.
      responses:
        '200':
          description: Your credentials are valid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                    description: The URL you will use for future Track API calls.
                    enum:
                      - https://track.customer.io
                      - https://track-eu.customer.io
                    example: https://track.customer.io
                  region:
                    type: string
                    description: The 'region' that your account is in. While the `url` relates to the Track API, this tells you which region of the Customer.io API to use. If this value is `eu`, you can append the subdomain any of the Customer.io API URLs with `-eu` to route your request to the appropriate region.
                    enum:
                      - us
                      - eu
                    example: us
                  environment_id:
                    type: integer
                    description: The identifier for the workspace that your credentials grant access to.
                    example: 3
        '400':
          description: Your credentials are not valid.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request GET \
              --url https://track.customer.io/api/v1/accounts/region \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)"
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "GET",
              "hostname": "track.customer.io",
              "port": null,
              "path": "/api/v1/accounts/region",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://track.customer.io/api/v1/accounts/region")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Get.new(url)
            request["Authorization"] = 'Basic REPLACE_BASIC_AUTH'

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("track.customer.io")

            headers = { 'Authorization': "Basic REPLACE_BASIC_AUTH" }

            conn.request("GET", "/api/v1/accounts/region", headers=headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://track.customer.io/api/v1/accounts/region\"\n\n\treq, _ := http.NewRequest(\"GET\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /api/v1/customers/{identifier}:
    put:
      operationId: identify
      tags:
        - Track Customers
      summary: Add or update a customer
      parameters:
        - name: identifier
          required: true
          in: path
          description: |
            The unique value representing a person. The values you use to identify a person may be an `id`, `email` address, or the `cio_id` (when updating people), depending on your workspace settings. When you reference people by `cio_id`, you must preference the value with `cio_`.
          schema:
            oneOf:
              - title: id
                type: string
                example: 12345
                description: The unique identifier for a person that you want to create or modify.
              - title: email
                type: string
                example: person@example.com
                description: A person's email address. If adding a new person in an email-based workspace, you must use this value.
              - title: cio_id
                type: string
                format: cio_[a-zA-Z0-9]*
                description: |
                  A canonical identifier assigned by Customer.io when you add a person. When referencing a person by this value, you must prefix the value with `cio_`. You can [look up a person using the App API](#tag/Customers) to find their `cio_id`. 

                  You must use this value to update a person's other identifiers—their `id` or `email`, unless you enable your workspace's [Allow updates to email using ID](/docs/workspaces/#update-email-with-id) setting.
                example: cio_03000001
      description: |
        Adds or updates a person.

        If identifiers in the path and request body do not belong to a person, your request adds a person.

        If a person already exists with the identifier in the request path, your request updates that person. If the identifier in the path does not belong to a person but you use an identifier in your request body that _does_ belong to a person, your request updates the person and assigns them the identifier in the path.

        If the identifier in the path and request body belong to different people, your request may return `200 OK` but produce an *Attribute Update Failure* for the identifier in the payload.

        If you want to update a person's identifiers after they are set, you must reference them using their `cio_id` in the format `cio_undefined<cio_id_value>`—unless when updating an `email` with the [Allow updates to email using ID](/docs/workspaces/#update-email-with-id) setting enabled. You can get the `cio_id` value from the [App API](/docs/api/#tag/Customers).

        For workspaces using `email` as an identifier, `email` is case-insensitive. The addresses `person@example.com` and `PERSON@example.com` would represent the same person.
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: |
                The body of the request contains key-value pairs representing attributes that you want to assign to, or update for, a person.

                If your request body contains "identifiers" (like `id` or `email`), your request attempts to update that person. If the identifier in the path and identifiers in the request body belong to different people, your request will produce an *Attribute Update Failure*.
              additionalProperties:
                x-additionalPropertiesName: Attributes
                description: Set attributes on customers. Attributes can have string, integer, or boolean values.
                oneOf:
                  - type: string
                  - type: integer
                  - type: boolean
              properties:
                id:
                  type: string
                  description: A customer's ID. You can set a person's ID if you identify them by email (in the path); you can update this value if you identify a person by `cio_id`.
                email:
                  type: string
                  format: email
                  description: The email address of the customer.
                anonymous_id:
                  type: string
                  description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
                created_at:
                  type: integer
                  description: The Unix timestamp when the user was created.
                _update:
                  type: boolean
                  description: |
                    If you perform multiple requests in rapid succession when you create a person, there's a danger that you could create multiple profiles. If you know that a profile already exists and you want to update it, set `_update:true`, and Customer.io will _not_ create a new profile, even if the `identifier` in the path isn't found.

                    If the identifiers in your path or request don't belong to an existing person, the request produces a *Failed Attribute Change* event in your activity log.
            example:
              email: customer@example.com
              created_at: 1361205308
              first_name: Bob
              plan: basic
      responses:
        '200':
          description: A successful request returns an empty object response.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request PUT \
              --url https://track.customer.io/api/v1/customers/{identifier} \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)" \
              --header 'content-type: application/json' \
              --data '{"id":"string","email":"user@example.com","anonymous_id":"string","created_at":0,"_update":true,"Attributes1":"string","Attributes2":"string"}'
        - lang: Node + Native
          source: |
            const { TrackClient, RegionUS } = require('customerio-node');
            let cio = new TrackClient(siteId, apiKey, { region: RegionUS });

            // to create people in a workspace with default settings, the id (5) can also be an email address.
            // when creating people using an email address, do not include an email attribute.
            cio.identify(5, {
              email: 'customer@example.com',
              created_at: 1361205308,
              first_name: 'Bob',
              plan: 'basic'
            });
        - lang: Ruby + Native
          source: |
            $customerio = Customerio::Client.new("YOUR SITE ID", "YOUR API SECRET KEY", region: Customerio::Regions::US)

            // to create people in a workspace with default settings, the id (5) can also be an email address.
            // when creating people using an email address, do not include an email attribute.
              :id => 5,
              :email => "bob@example.com",
              :created_at => customer.created_at.to_i,
              :first_name => "Bob",
              :plan => "basic"
            )
        - lang: Python + Python3
          source: |
            from customerio import CustomerIO, Regions
            cio = CustomerIO(site_id, api_key, region=Regions.US)

            // to create people in a workspace with default settings, the id (5) can also be an email address.
            // when creating people using an email address, do not include an email attribute.
            cio.identify(id="5", email='customer@example.com', name='Bob', plan='premium')
        - lang: Go + Native
          source: |
            track := customerio.NewTrackClient("YOUR SITE ID", "YOUR API SECRET KEY", customerio.WithRegion(customerio.RegionUS))

            // to create people in a workspace with default settings, the id (5) can also be an email address.
            // when creating people using an email address, do not include an email attribute.
            if err := track.Identify("5", map[string]interface{}{
              "email": "bob@example.com",
              "created_at": time.Now().Unix(),
              "first_name": "Bob",
              "plan": "basic",
            }); err != nil {
              // do something with error
            }
    delete:
      parameters:
        - name: identifier
          required: true
          in: path
          description: |
            The unique value representing a person. The values you use to identify a person may be an `id`, `email` address, or the `cio_id` (when updating people), depending on your workspace settings. When you reference people by `cio_id`, you must preference the value with `cio_`.
          schema:
            oneOf:
              - title: id
                type: string
                example: 12345
                description: The unique identifier for a person that you want to create or modify.
              - title: email
                type: string
                example: person@example.com
                description: A person's email address. If adding a new person in an email-based workspace, you must use this value.
              - title: cio_id
                type: string
                format: cio_[a-zA-Z0-9]*
                description: |
                  A canonical identifier assigned by Customer.io when you add a person. When referencing a person by this value, you must prefix the value with `cio_`. You can [look up a person using the App API](#tag/Customers) to find their `cio_id`. 

                  You must use this value to update a person's other identifiers—their `id` or `email`, unless you enable your workspace's [Allow updates to email using ID](/docs/workspaces/#update-email-with-id) setting.
                example: cio_03000001
      summary: Delete a customer
      operationId: delete
      description: |
        Deleting a customer removes them, and all of their information, from Customer.io.

        **NOTE**: Calls that update customers by ID can also create a customer. If you send data to Customer.io through other means (like the Javascript snippet), after you delete a customer, you may accidentally recreate the customer. You cannot delete a customer using the Javascript snippet alone.
      tags:
        - Track Customers
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      responses:
        '200':
          description: A successful request returns an empty object response.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
      x-codeSamples:
        - lang: Node + Native
          source: |
            const { TrackClient, RegionUS } = require('customerio-node');
            let cio = new TrackClient(siteId, apiKey, { region: RegionUS });

            // Depending on your workspace settings, the id (5) may be an email address.
            cio.destroy(5);
        - lang: Ruby + Native
          source: |
            $customerio = Customerio::Client.new("YOUR SITE ID", "YOUR API SECRET KEY", region: Customerio::Regions::US)

            // Depending on your workspace settings, the id (5) may be an email address.
            $customerio.delete(5)
        - lang: Python + Python3
          source: |
            from customerio import CustomerIO, Regions
            cio = CustomerIO(site_id, api_key, region=Regions.US)

            // Depending on your workspace settings, the customer_id may be an email address.
            cio.delete(customer_id="5")
        - lang: Go + Native
          source: |
            track := customerio.NewTrackClient("YOUR SITE ID", "YOUR API SECRET KEY", customerio.WithRegion(customerio.RegionUS))

            // Depending on your workspace settings, the id (5) may be an email address.
            if err := track.Delete("5"); err != nil {
              // do something with error
            }
        - lang: Shell + Curl
          source: |-
            curl --request DELETE \
              --url https://track.customer.io/api/v1/customers/{identifier} \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)"
  /api/v1/customers/{identifier}/devices:
    parameters:
      - name: identifier
        required: true
        in: path
        description: |
          The unique value representing a person. The values you use to identify a person may be an `id`, `email` address, or the `cio_id` (when updating people), depending on your workspace settings. When you reference people by `cio_id`, you must preference the value with `cio_`.
        schema:
          oneOf:
            - title: id
              type: string
              example: 12345
              description: The unique identifier for a person that you want to create or modify.
            - title: email
              type: string
              example: person@example.com
              description: A person's email address. If adding a new person in an email-based workspace, you must use this value.
            - title: cio_id
              type: string
              format: cio_[a-zA-Z0-9]*
              description: |
                A canonical identifier assigned by Customer.io when you add a person. When referencing a person by this value, you must prefix the value with `cio_`. You can [look up a person using the App API](#tag/Customers) to find their `cio_id`. 

                You must use this value to update a person's other identifiers—their `id` or `email`, unless you enable your workspace's [Allow updates to email using ID](/docs/workspaces/#update-email-with-id) setting.
              example: cio_03000001
    put:
      operationId: add_device
      summary: Add or update a customer device
      description: Customers can have more than one device. Use this method to add iOS and Android devices to, or update devices for, a customer profile.
      tags:
        - Track Customers
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - device
              description: Define the device you want to add to the customer profile.
              properties:
                device:
                  description: The properties representing an individual device. [Our SDK's](/docs/sdk/) gather all the properties defined below automatically, unless you disable the `autoTrackDeviceAttributes` setting. You can reference the properties outside the `attributes` object in segments or in Liquid.
                  type: object
                  required:
                    - id
                    - platform
                  properties:
                    id:
                      description: The device token.
                      type: string
                    last_used:
                      type: integer
                      format: unix timestamp
                      description: The `timestamp` when you last identified this device. If you don't pass a timestamp when you add or update a device, we use the time of the request itself. Our SDKs identify a device when a person launches their app.
                    platform:
                      type: string
                      enum:
                        - ios
                        - android
                      description: The device/messaging platform.
                    attributes:
                      type: object
                      description: Attributes that you can reference to segment your audience—like a person's attributes, but specific to a device. These can be either the attributes defined below or custom key-value attributes.
                      properties:
                        device_os:
                          type: string
                          description: The operating system, including the version, on the device.
                        device_model:
                          type: string
                          description: The model of the device a person uses.
                        app_version:
                          type: string
                          description: The version of your app that a customer users. You might target app versions to let people know when they need to update, or expose them to new features when they do.
                        cio_sdk_version:
                          type: string
                          description: The version of the Customer.io SDK in the app.
                        _last_status:
                          type: string
                          readOnly: true
                          description: The delivery status of the last message sent to the device—sent, bounced, or suppressed. An empty string indicates that that the device hasn't received a push yet.
                          enum:
                            - ''
                            - bounced
                            - sent
                            - suppressed
                        device_locale:
                          type: string
                          description: The four-letter [IETF language code](/docs/localization/#supported-languages) for the device. For example, `en-MX` (indicating an app in Spanish formatted for a user in Mexico) or `es-ES` (indicating an app in Spanish formatted for a user in Spain).
                        push_enabled:
                          type: string
                          description: If `"true"`, the device is opted-in and can receive push notifications.
                          enum:
                            - 'true'
                            - 'false'
                      additionalProperties:
                        x-additionalPropertiesName: Custom Device Attributes
                        description: Custom properties that you want to associate with the device.
                        type: string
      responses:
        '200':
          description: A successful request returns an empty object response.
        '400':
          description: Invalid or malformed request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      errors:
                        type: array
                        description: An array of errors.
                        items:
                          type: string
                          description: Error descriptions.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request PUT \
              --url https://track.customer.io/api/v1/customers/{identifier}/devices \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)" \
              --header 'content-type: application/json' \
              --data '{"device":{"id":"string","last_used":0,"platform":"ios","attributes":{"device_os":"string","device_model":"string","app_version":"string","cio_sdk_version":"string","device_locale":"string","push_enabled":"true","Custom Device Attributes1":"string","Custom Device Attributes2":"string"}}}'
        - lang: Node + Native
          source: |
            const { TrackClient, RegionUS } = require('customerio-node');
            let cio = new TrackClient(siteId, apiKey, { region: RegionUS });

            // Depending on your workspace settings, the id (5) may be an email address.
            cio.addDevice(5, "device_id", "ios", { primary: true });
        - lang: Ruby + Native
          source: |
            $customerio = Customerio::Client.new("YOUR SITE ID", "YOUR API SECRET KEY", region: Customerio::Regions::US)

            // Depending on your workspace settings, the id (5) may be an email address.
            $customerio.add_device(5, "my_ios_device_id", "ios")
            $customerio.add_device(5, "my_android_device_id", "android")
        - lang: Python + Python3
          source: |
            from customerio import CustomerIO, Regions
            cio = CustomerIO(site_id, api_key, region=Regions.US)

            // Depending on your workspace settings, the customer_id may be an email address.
            cio.add_device(customer_id="1", device_id='device_hash', platform='ios', last_used=1514764800})
        - lang: Go + Native
          source: |
            track := customerio.NewTrackClient("YOUR SITE ID", "YOUR API SECRET KEY", customerio.WithRegion(customerio.RegionUS))

            // Depending on your workspace settings, the id (5) may be an email address.
            if err := track.AddDevice("5", "messaging token", "android", map[string]interface{}{
              "last_used": time.Now().Unix(),
            }) err != nil {
              // do something with error
            }
  /api/v1/customers/{identifier}/devices/{device_id}:
    parameters:
      - name: identifier
        required: true
        in: path
        description: |
          The unique value representing a person. The values you use to identify a person may be an `id`, `email` address, or the `cio_id` (when updating people), depending on your workspace settings. When you reference people by `cio_id`, you must preference the value with `cio_`.
        schema:
          oneOf:
            - title: id
              type: string
              example: 12345
              description: The unique identifier for a person that you want to create or modify.
            - title: email
              type: string
              example: person@example.com
              description: A person's email address. If adding a new person in an email-based workspace, you must use this value.
            - title: cio_id
              type: string
              format: cio_[a-zA-Z0-9]*
              description: |
                A canonical identifier assigned by Customer.io when you add a person. When referencing a person by this value, you must prefix the value with `cio_`. You can [look up a person using the App API](#tag/Customers) to find their `cio_id`. 

                You must use this value to update a person's other identifiers—their `id` or `email`, unless you enable your workspace's [Allow updates to email using ID](/docs/workspaces/#update-email-with-id) setting.
              example: cio_03000001
      - name: device_id
        in: path
        required: true
        description: The ID of the device you want to perform an operation against.
        schema:
          type: string
    delete:
      operationId: delete_device
      summary: Delete a customer device
      description: Remove a device from a customer profile. If you continue sending data about a device to Customer.io, you may inadvertently re-add the device to the customer profile.
      tags:
        - Track Customers
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      responses:
        '200':
          description: A successful request returns an empty object response.
        '400':
          description: Invalid or malformed request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      errors:
                        type: array
                        description: An array of errors.
                        items:
                          type: string
                          description: Error descriptions.
        '401':
          description: A successful request returns an empty object response.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request DELETE \
              --url https://track.customer.io/api/v1/customers/{identifier}/devices/{device_id} \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)"
        - lang: Node + Native
          source: |
            const { TrackClient, RegionUS } = require('customerio-node');
            let cio = new TrackClient(siteId, apiKey, { region: RegionUS });

            // Depending on your workspace settings, the id (5) may be an email address.
            cio.deleteDevice(5, "device_token")
        - lang: Ruby + Native
          source: |
            $customerio = Customerio::Client.new("YOUR SITE ID", "YOUR API SECRET KEY", region: Customerio::Regions::US)

            // Depending on your workspace settings, the id (5) may be an email address.
            $customerio.delete_device(5, "my_device_token")
        - lang: Python + Python3
          source: |
            from customerio import CustomerIO, Regions
            cio = CustomerIO(site_id, api_key, region=Regions.US)

            // Depending on your workspace settings, the customer_id may be an email address.
            cio.delete_device(customer_id="5", device_id='device_hash')
        - lang: Go + Native
          source: |
            track := customerio.NewTrackClient("YOUR SITE ID", "YOUR API SECRET KEY", customerio.WithRegion(customerio.RegionUS))

            // Depending on your workspace settings, the id (5) may be an email address.
            if err := track.DeleteDevice("5", "messaging-token"); err != nil {
              // do something with error
            }
  /api/v1/customers/{identifier}/suppress:
    parameters:
      - name: identifier
        required: true
        in: path
        description: |
          The unique value representing a person. The values you use to identify a person may be an `id`, `email` address, or the `cio_id` (when updating people), depending on your workspace settings. When you reference people by `cio_id`, you must preference the value with `cio_`.
        schema:
          oneOf:
            - title: id
              type: string
              example: 12345
              description: The unique identifier for a person that you want to create or modify.
            - title: email
              type: string
              example: person@example.com
              description: A person's email address. If adding a new person in an email-based workspace, you must use this value.
            - title: cio_id
              type: string
              format: cio_[a-zA-Z0-9]*
              description: |
                A canonical identifier assigned by Customer.io when you add a person. When referencing a person by this value, you must prefix the value with `cio_`. You can [look up a person using the App API](#tag/Customers) to find their `cio_id`. 

                You must use this value to update a person's other identifiers—their `id` or `email`, unless you enable your workspace's [Allow updates to email using ID](/docs/workspaces/#update-email-with-id) setting.
              example: cio_03000001
    post:
      operationId: suppress
      summary: Suppress a customer profile
      description: |
        Delete a customer profile and prevent the person's identifier(s) from being re-added to your workspace. Any future API calls or operations referencing the specified ID are ignored. If you suppress a person in a workspace set that identifies people by *email or ID* and both identifiers are set, both the person's email and ID are suppressed.

        undefined<div class="fly-panel bg-warning">
        undefined<div class="fly-panel-body">
        undefined<p class="callout-head text--bold text-warning mrg-t-none">undefined<svg class="api-icon">undefined<path fill-rule="evenodd" clip-rule="evenodd" d="M15.4127 13.3333L9.18133 1.43333C8.95116 0.994094 8.49623 0.718884 8.00033 0.718884C7.50444 0.718884 7.04951 0.994094 6.81933 1.43333L0.587332 13.3333C0.370821 13.7467 0.386147 14.2431 0.627743 14.6423C0.869339 15.0415 1.30205 15.2854 1.76867 15.2853H14.2313C14.698 15.2854 15.1307 15.0415 15.3723 14.6423C15.6139 14.2431 15.6292 13.7467 15.4127 13.3333ZM7.33333 5.61533C7.33333 5.24714 7.63181 4.94867 8 4.94867C8.36819 4.94867 8.66667 5.24714 8.66667 5.61533V9.61533C8.66667 9.98352 8.36819 10.282 8 10.282C7.63181 10.282 7.33333 9.98352 7.33333 9.61533V5.61533ZM8.01466 13.2887H8.03333C8.29806 13.2844 8.54988 13.1735 8.73182 12.9812C8.91376 12.7888 9.01044 12.5312 9 12.2667C8.97854 11.7209 8.53019 11.2893 7.984 11.2887H7.96533C7.70125 11.2935 7.4502 11.4043 7.26865 11.5961C7.0871 11.788 6.99029 12.0447 7 12.3087C7.02073 12.8546 7.46838 13.2869 8.01466 13.2887Z" />undefined</svg>&nbsp;This API permanently deletes peopleundefined</p>
        undefined<div class="text-warning">undefined<p>Suppressing a person way deletes their profile undefined<i>and</i> suppresses the identifier you reference in the path of this call, preventing you from re-adding a person using the same identifier (until you unsuppress the identifier). You cannot recover a profile after you suppress it. In general, should use this API sparingly—for GDPR/CCPA requests, etc. undefined</p>
        undefined<p>If you want to keep a record of a person but prevent them from receiving messages, you should set the person's unsubscribed attribute (or use other attributes to represent complex subscription preferences) instead.</p>undefined</div>
        undefined</div>
        undefined</div>
      tags:
        - Track Customers
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      responses:
        '200':
          description: A successful request returns an empty object response.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
        '404':
          description: The identifier in the path does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          description: An array of error descriptions.
                          example: The `customer_id` does not exist.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/api/v1/customers/{identifier}/suppress \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)"
        - lang: Node + Native
          source: |
            const { TrackClient, RegionUS } = require('customerio-node');
            let cio = new TrackClient(siteId, apiKey, { region: RegionUS });

            // Depending on your workspace settings, the id (5) may be an email address.
            cio.suppress(5)
        - lang: Ruby + Native
          source: |
            $customerio = Customerio::Client.new("YOUR SITE ID", "YOUR API SECRET KEY", region: Customerio::Regions::US)

            // Depending on your workspace settings, the id (5) may be an email address.
            $customerio.suppress(5)
        - lang: Python + Python3
          source: |
            from customerio import CustomerIO, Regions
            cio = CustomerIO(site_id, api_key, region=Regions.US)

            // Depending on your workspace settings, customer_id may be an email address.
            cio.suppress(customer_id="5")
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://track.customer.io/api/v1/customers/{identifier}/suppress\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /api/v1/customers/{identifier}/unsuppress:
    parameters:
      - name: identifier
        required: true
        in: path
        description: |
          The unique value representing a person. The values you use to identify a person may be an `id`, `email` address, or the `cio_id` (when updating people), depending on your workspace settings. When you reference people by `cio_id`, you must preference the value with `cio_`.
        schema:
          oneOf:
            - title: id
              type: string
              example: 12345
              description: The unique identifier for a person that you want to create or modify.
            - title: email
              type: string
              example: person@example.com
              description: A person's email address. If adding a new person in an email-based workspace, you must use this value.
            - title: cio_id
              type: string
              format: cio_[a-zA-Z0-9]*
              description: |
                A canonical identifier assigned by Customer.io when you add a person. When referencing a person by this value, you must prefix the value with `cio_`. You can [look up a person using the App API](#tag/Customers) to find their `cio_id`. 

                You must use this value to update a person's other identifiers—their `id` or `email`, unless you enable your workspace's [Allow updates to email using ID](/docs/workspaces/#update-email-with-id) setting.
              example: cio_03000001
    post:
      operationId: unsuppress
      summary: Unsuppress a customer profile
      description: |
        Unsuppressing a profile allows you to add the customer back to Customer.io. If you unsuppress a person in a workspace set that identifies people by *email or ID* and the suppressed person had both an email and ID, both the person's email and ID are unsuppressed.

        Unsuppressing a profile does not recreate the profile that you previously suppressed. Rather, it just makes the identifier available again. Identifying a person after unsuppressing them creates a new profile, with none of the history of the previously suppressed identifier.
      tags:
        - Track Customers
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      responses:
        '200':
          description: A successful request returns an empty object response.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
        '404':
          description: The identifier in the path does not exist
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      errors:
                        type: array
                        items:
                          type: string
                          description: An array of error descriptions.
                          example: The `customer_id` does not exist.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/api/v1/customers/{identifier}/unsuppress \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)"
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "track.customer.io",
              "port": null,
              "path": "/api/v1/customers/{identifier}/unsuppress",
              "headers": {
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.end();
        - lang: Ruby + Native
          source: |
            $customerio = Customerio::Client.new("YOUR SITE ID", "YOUR API SECRET KEY", region: Customerio::Regions::US)

            // Depending on your workspace settings, the id (5) may be an email address.
            $customerio.unsuppress(5)
        - lang: Python + Python3
          source: |
            from customerio import CustomerIO, Regions
            cio = CustomerIO(site_id, api_key, region=Regions.US)

            // Depending on your workspace settings, customer_id may be an email address.
            cio.unsuppress(customer_id="5")
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://track.customer.io/api/v1/customers/{identifier}/unsuppress\"\n\n\treq, _ := http.NewRequest(\"POST\", url, nil)\n\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /unsubscribe/{delivery_id}:
    parameters:
      - name: delivery_id
        description: The delivery resulting in a request to unsubscribe.
        in: path
        required: true
        schema:
          type: string
    post:
      operationId: unsubscribe
      summary: Custom unsubscribe handling
      description: |
        If you use [custom unsubscribe links](https://customer.io/docs/multiple-subscription-types), you can host a custom unsubscribe page and use this API to send unsubscribe data, associated with a particular delivery, to Customer.io.

        **NOTE**: This endpoint **requires** a `Content-type: application/json` header. This endpoint **does not require** an `Authorization` header.

        Your request sets a person's `unsubscribed` attribute to `true`, attributes their unsubscribe request to the individual email/delivery that they they unsubscribed from, and lets you segment your audience based on `email_unsubscribed` events when you use a custom subscription center.

        If you use a custom subscription center (managing subscriptions to various types of messages with custom attributes), this request *does not* set a custom attribute. You must perform a [separate request](#operation/identify) to update a person's custom subscription attributes.
      tags:
        - Track Customers
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. This endpoint does not require authorization.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                unsubscribe:
                  type: boolean
                  description: If true, a person's `unsubscribed` attribute is set to true and the unsubscription is attributed to the delivery.
                  example: true
      responses:
        '200':
          description: A successful request returns an empty object response.
        '400':
          description: The `delivery_id` format is incorrect or the request is malformed.
        '404':
          description: The `delivery_id` does not exist.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/unsubscribe/{delivery_id} \
              --header 'content-type: application/json' \
              --data '{"unsubscribe":true}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "track.customer.io",
              "port": null,
              "path": "/unsubscribe/{delivery_id}",
              "headers": {
                "content-type": "application/json"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({unsubscribe: true}));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://track.customer.io/unsubscribe/{delivery_id}")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request.body = "{\"unsubscribe\":true}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("track.customer.io")

            payload = "{\"unsubscribe\":true}"

            headers = { 'content-type': "application/json" }

            conn.request("POST", "/unsubscribe/{delivery_id}", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://track.customer.io/unsubscribe/{delivery_id}\"\n\n\tpayload := strings.NewReader(\"{\\\"unsubscribe\\\":true}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /api/v1/customers/{identifier}/events:
    parameters:
      - name: identifier
        required: true
        in: path
        description: |
          The unique value representing a person. You may identify a person by `id`, `email` address, or the `cio_id` (when updating people), depending on your workspace settings.
        schema:
          oneOf:
            - title: id
              type: string
              example: 12345
              description: The unique identifier you assigned to a person.
            - title: email
              type: string
              example: person@example.com
              description: A person's email address.
            - title: cio_id
              type: string
              format: cio_[a-zA-Z0-9]*
              description: |
                A canonical identifier assigned by Customer.io when you add a person. When referencing a person by this value, you must prefix the value with `cio_`. You can [look up a person using the App API](#tag/Customers) to find their `cio_id`, but you must prefix this value with `cio_` when using it to reference a person.

                You can use this value to update a person's other identifiers—their `id` or `email`.
              example: cio_03000001
    post:
      operationId: track
      tags:
        - Track Events
      summary: Track a customer event
      description: |
        Send an event associated with a person, referenced by the identifier in the path. There are three defined event `type` values: `page`, `screen` and `event`. Page and screen events represent website page views and mobile app screen views respectively; the `name` for these event types is intended to be the page or screen a person visited or viewed. Any other event, is given the `event` type.

        Avoid using `name` values with leading or trailing spaces, because you can't reference event names with leading or trailing spaces in campaigns, etc. In workspaces created after September 21, 2021, we trim leading and trailing spaces from event names automatically to fix this issue.

        **Reserved Properties**

        There are a few important values which, if sent with the events that trigger campaigns, will override your campaign settings:

        * `from_address`
        * `recipient`
        * `reply_to`

        When using the Javascript snippet to track events, you must call the Behavioral Tracking API call after identifying the customer or the event will not associate with the customer’s profile.
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: Standard event
                  type: object
                  required:
                    - name
                  properties:
                    name:
                      type: string
                      description: The name of the event. This is how you'll reference the event in campaigns or segments.
                    id:
                      type: string
                      format: ulid
                      description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
                    type:
                      type: string
                      description: Sets the event type. If your event isn't a `page` or `screen` type event, we automatically set this property to `event`.
                      enum:
                        - event
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: |
                        The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.

                        **NOTE**: Events with a timestamp in the past 72 hours can trigger campaigns.
                    data:
                      type: object
                      description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
                      additionalProperties:
                        x-additionalPropertiesName: liquid merge data
                        description: Insert key-values that you want to reference in your message here.
                      properties:
                        recipient:
                          type: string
                          format: email
                          description: The email address of the person associated with the event.
                        from_address:
                          type: string
                          format: email
                          description: The address you want to trigger messages from, overriding any campaign settings associated with this event.
                        reply_to:
                          type: string
                          format: email
                          description: The address you want to receive replies to, overriding campaign settings associated with this event.
                  example:
                    name: purchase
                    data:
                      price: 23.45
                      product: socks
                - title: Page view
                  type: object
                  required:
                    - name
                    - type
                  properties:
                    name:
                      type: string
                      description: The name of the event. This is how you'll reference the event in campaigns or segments.
                    id:
                      type: string
                      format: ulid
                      description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
                    type:
                      type: string
                      description: Indicates that the event represents a page view. See ["page view" events](../pageviews), for more information.
                      enum:
                        - page
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: |
                        The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
                    data:
                      type: object
                      description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
                      additionalProperties:
                        x-additionalPropertiesName: liquid merge data
                        description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
                  example:
                    name: https://mysite.com/page
                    type: page
                    data:
                      first_name: Cool
                      last_name: Person
                - title: Mobile screen view
                  type: object
                  required:
                    - anonymous_id
                    - name
                    - type
                  properties:
                    anonymous_id:
                      type: string
                      description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
                    name:
                      type: string
                      description: The name of the event. In general, this should be the name of the screen or deep link path that a person viewed, making it easy to segment your audience or trigger campaigns from these events. Make sure you trim leading and trailing spaces from this field.
                    id:
                      type: string
                      format: ulid
                      description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
                    type:
                      type: string
                      description: Indicates that the event represents a mobile screen view. You can also capture screen events directly with [our iOS SDK](/docs/sdk/ios/track-events/#screen-view-events).
                      enum:
                        - screen
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: |
                        The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
                    data:
                      type: object
                      description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
                      additionalProperties:
                        x-additionalPropertiesName: liquid merge data
                        description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
                  example:
                    name: homepage
                    type: screen
                    data:
                      from: push-notification
      responses:
        '200':
          description: A successful request returns an empty object response.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/api/v1/customers/{identifier}/events \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)" \
              --header 'content-type: application/json' \
              --data '{"name":"purchase","data":{"price":23.45,"product":"socks"}}'
        - lang: Node + Native
          source: |
            const { TrackClient, RegionUS } = require('customerio-node');
            let cio = new TrackClient(siteId, apiKey, { region: RegionUS });

            // Depending on your workspace settings, customer_id may be an email address.
            cio.track(5, {
              name: 'purchase',
              data: {
                price: '23.45',
                product: 'socks'
              }
            });
        - lang: Ruby + Native
          source: |
            $customerio = Customerio::Client.new("YOUR SITE ID", "YOUR API SECRET KEY", region: Customerio::Regions::US)

            // Depending on your workspace settings, customer_id may be an email address.
            $customerio.track(5, "purchase", :type => "socks", :price => "13.99", :timestamp => 1365436200)
        - lang: Python + Python3
          source: |
            from customerio import CustomerIO, Regions
            cio = CustomerIO(site_id, api_key, region=Regions.US)

            // Depending on your workspace settings, customer_id may be an email address.
            cio.track(customer_id="5", name='purchased', price=23.45, product="widget")
        - lang: Go + Native
          source: |
            track := customerio.NewTrackClient("YOUR SITE ID", "YOUR API SECRET KEY", customerio.WithRegion(customerio.RegionUS))

            if err := track.Track("5", "purchase", map[string]interface{}{
                "type": "socks",
                "price": "13.99",
            }); err != nil {
                // do something with error
            }
  /api/v1/events:
    post:
      tags:
        - Track Events
      operationId: trackAnonymous
      summary: Track an anonymous event
      description: |
        Send anonymous or invite events. An anonymous event represents a person you haven't identified yet. When you identify a person, you can set their `anonymous_id` attribute. If [event merging](https://customer.io/docs/anonymous-events/#turn-on-merging) is turned on in your workspace, and the attribute matches the `anonymous_id` in one or more events that were logged within the last 30 days, we associate those events with the person. If you associate an event with a person within 72 hours of the timestamp on the event, you can trigger campaigns from the event.

        There are three possible event `type` values: `page`, `screen` and `event`. Page and screen events represent website page views and mobile app screen views respectively; the `name` for these event types is intended to be the page or screen a person visited or viewed. Any other event, is given the `event` type.

        We call it an *Invite Event* when you send an event without an `anonymous_id` and include a `data.recipient` key. You can use these events to trigger [invite emails](/docs/anonymous-invite-emails) to people you haven't yet identified. However, while you can trigger an invite campaign with an invite event, we strongly recommend using our [transactional messaging service](#operation/sendEmail) or otherwise identifying a person and _then_ sending them a message. This lets you keep a record of people you send messages to and ensure you respect their messaging preferences.

        **Note**: Avoid using names with leading or trailing spaces, because you can't reference event names with leading or trailing spaces in campaigns, etc. In workspaces created after September 21, 2021, we trim leading and trailing spaces from event names automatically to fix this issue.
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              description: An event attributed to an unknown person. If you provide an `anonymous_id` with the event, you can associate the event with a person later (using the anonymous ID).
              oneOf:
                - title: Standard anonymous event
                  type: object
                  required:
                    - name
                  properties:
                    anonymous_id:
                      type: string
                      description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
                    name:
                      type: string
                      description: The name of the event. This is how you'll reference the event in campaigns or segments.
                    id:
                      type: string
                      format: ulid
                      description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
                    type:
                      type: string
                      description: Sets the event type. If your event isn't a `page` or `screen` type event, we automatically set this property to `event`.
                      enum:
                        - event
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: |
                        The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
                    data:
                      type: object
                      description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`). You can include `from_address` and `reply_to`, but the event can only trigger a campaign if it is associated with a person within 72 hours of its timestamp.
                      additionalProperties:
                        x-additionalPropertiesName: liquid merge data
                        description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
                      properties:
                        from_address:
                          type: string
                          format: email
                          description: The address you want to trigger messages from, overriding any campaign settings associated with this event.
                        reply_to:
                          type: string
                          format: email
                          description: The address you want to receive replies to, overriding campaign settings associated with this event.
                  example:
                    name: watched_video
                    anonymous_id: abc123
                    data:
                      video: intro-to-platform
                - title: Page view
                  type: object
                  required:
                    - name
                    - type
                  properties:
                    anonymous_id:
                      type: string
                      description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
                    name:
                      type: string
                      description: The name of the event. In general, this should be the URL of the page a person visited, making it easy to segment your audience or trigger campaigns using this event. Make sure you trim leading and trailing spaces from this field.
                    id:
                      type: string
                      format: ulid
                      description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
                    type:
                      type: string
                      description: Indicates that the event represents a page view. See ["page view" events](../pageviews), for more information.
                      enum:
                        - page
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: |
                        The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
                    data:
                      type: object
                      description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
                      additionalProperties:
                        x-additionalPropertiesName: liquid merge data
                        description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
                  example:
                    name: https://mysite.com/page
                    type: page
                    anonymous_id: abc123
                    data:
                      first_name: Person
                - title: Mobile screen view
                  type: object
                  required:
                    - name
                    - type
                  properties:
                    anonymous_id:
                      type: string
                      description: An identifier for an anonymous event, like a cookie. If set as an attribute on a person, any events bearing the same anonymous value are associated with this person. This value must be unique and is not reusable.
                    name:
                      type: string
                      description: The name of the event. In general, this should be the name of the screen or deep link path that a person viewed, making it easy to segment your audience or trigger campaigns using this event. Make sure you trim leading and trailing spaces from this field.
                    id:
                      type: string
                      format: ulid
                      description: An identifier used to dedulpicate events. This value must be a [ULID](https://github.com/ulid/spec). If an event has the same value as an event we previously received, we won't show or process the duplicate.
                    type:
                      type: string
                      description: Indicates that the event represents a mobile screen view. You can also capture screen events directly with [our iOS SDK](/docs/sdk/ios/track-events/#screen-view-events).
                      enum:
                        - screen
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: |
                        The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.
                    data:
                      type: object
                      description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
                      additionalProperties:
                        x-additionalPropertiesName: liquid merge data
                        description: Insert key-values that you want to reference in messages or convert to attributes if/when you associate this event with a person.
                  example:
                    name: homepage
                    type: screen
                    anonymous_id: abc123
                - title: Invite event
                  description: The `data.recipient` is required if you expect the event to trigger a message.
                  type: object
                  required:
                    - name
                    - data
                  properties:
                    name:
                      type: string
                      description: The name of the event. This is how you'll reference the event in campaigns or segments.
                    type:
                      type: string
                      description: Sets the event type.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: |
                        The unix timestamp when the event took place. If you don't provide this value, we use the date-time when we receive the event.

                        **NOTE**: Events with a timestamp in the past 72 hours can trigger campaigns.
                    data:
                      type: object
                      description: Additional information that you might want to reference in a message using liquid or use to set attributes on your customer (referenced by `customer_id`).
                      required:
                        - recipient
                      additionalProperties:
                        x-additionalPropertiesName: liquid merge data
                        description: Insert key-values that you want to reference in your message here.
                      properties:
                        recipient:
                          type: string
                          format: email
                          description: The email address of the person associated with the event. This property is required if you want to trigger a campaign from this event.
                        from_address:
                          type: string
                          format: email
                          description: The address you want to trigger messages from, overriding any campaign settings associated with this event.
                        reply_to:
                          type: string
                          format: email
                          description: The address you want to receive replies to, overriding campaign settings associated with this event.
                  example:
                    name: beta_test_invite
                    data:
                      first_name: Person
                      recipient: person@example.com
                      source: oldApp
      responses:
        '200':
          description: A successful request returns an empty object response.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/api/v1/events \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)" \
              --header 'content-type: application/json' \
              --data '{"name":"watched_video","anonymous_id":"abc123","data":{"video":"intro-to-platform"}}'
        - lang: Node + Native
          source: |
            const { TrackClient, RegionUS } = require('customerio-node');
            let cio = new TrackClient(siteId, apiKey, { region: RegionUS });

            cio.trackAnonymous('anonymous-id', {
              name: 'updated',
              data: {
                updated: true,
                plan: 'free'
              }
            });
        - lang: Ruby + Native
          source: |
            $customerio = Customerio::Client.new("YOUR SITE ID", "YOUR API SECRET KEY", region: Customerio::Regions::US)

            $customerio.track_anonymous(anonymous_id, "help_enquiry", :subject => 'anon-events')
        - lang: Python + Python3
          source: |
            from customerio import CustomerIO, Regions
            cio = CustomerIO(site_id, api_key, region=Regions.US)

            cio.track_anonymous(anonymous_id="anon-person", name="purchased", price=23.45, product="widget")
        - lang: Go + Native
          source: |
            track := customerio.NewTrackClient("YOUR SITE ID", "YOUR API SECRET KEY", customerio.WithRegion(customerio.RegionUS))

            if err := track.TrackAnonymous(anonymous_id, "invite", map[string]interface{}{
              "first_name": "Alex",
              "source": "OldApp",
            }); err != nil {
              // do something with error
            }
  /api/v1/forms/{form_id}/submit:
    post:
      operationId: submitForm
      tags:
        - Forms
      summary: Submit a form
      parameters:
        - name: form_id
          in: path
          required: true
          description: The identifier for a form. If Customer.io does not recognize the `form_id`, we create a new form connection (found on the *Data & Integrations* > *Forms* page). Use a value that makes sense to you, or something that you can trace to your backend system.
          schema:
            type: string
      description: |
        Submit a form response. If Customer.io does not recognize the `form_id` we create a new form connection (found on the *Data & Integrations* > *Integrations* > *Forms* page). Form submissions with the same ID are treated as submissions from the same form.

        The `data` object _must_ contain at least one of `id` or `email` (depending on the identifiers supported in your workspace)—or a field that is mapped to one of these identifiers—to identify the form respondent. If the person who submitted the form does not already exist, we create them (like an [identify](#operation/identify) request).

        Additional keys in the `data` object represent form fields and values from the form that a person submitted. By default, we map form fields in your request directly to attributes, e.g. if you have a form field called `first_name`, we map that field to the `first_name` attribute. However, after you add a form, you can re-map form fields to attributes on the **Data & Integrations** > **Integrations** > **Forms** page. If you turned off a form field on the *Forms* page, you can still include it in your request, but it is not converted to an attribute and applied to the person your form identifies.

        **NOTES**: 
          * If an identifier in your form is called something like `email_address` rather than `email` in your initial request, you'll receive a `400`, but we'll still add your form on the **Data & Integrations** > **Integrations** > **Forms** page. You can then re-map your `email_address` field to `email`, and your form will begin working normally.
          * Customer.io reserves `form_id`, `form_name`, `form_type`, `form_url`, and `form_url_param` keys. If your request includes these keys, Customer.io ignores them.
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: |
                The body of the request contains key-value pairs representing form fields; these values are mapped to attributes. Your request must contain one of—and only one of—`email` or `id` to identify a person (depending on the identifiers supported in your workspace). If the person who filled out your form does not already exist, the request creates them. If your request includes more than one identifier, you'll receive an error.

                **NOTE**: If your form field is called something like `email_address`, you'll receive a `400`, but we'll still add your form on the **Data & Integrations** > **Integrations** > **Forms** page. You can then re-map your `email_address` field to `email`, and your form will begin working normally.
                 
                Additional keys in the `data` object represent form fields from the form that a person submitted. By default, we map form fields in your request directly to attributes, e.g. if you have a form field called `first_name`, we map that field to the `first_name` attribute. However, if you added or edited this form on the *Data & Integration* > *Forms* page, you can re-map form fields to attributes. If you turned off a form field on the *Forms* page, you can still include it in your request, but it is not applied to the person your form identifies.
              required:
                - data
              properties:
                data:
                  description: |
                    Represents your form data. By default, we assume that form fields map directly to attributes (e.g. if your form field is called `name`, we assume it represents an attribute called "name"). However, you can re-map form fields to attributes on the **Forms** page in your workspace.

                    Values for form fields _must_ be formatted as strings.
                  oneOf:
                    - title: identify by email
                      type: object
                      description: Identify the person who submitted your form by email.
                      required:
                        - email
                      properties:
                        email:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                      additionalProperties:
                        x-additionalPropertiesName: Form fields
                        type: string
                        description: |
                          Fields from the form and associated values; values _must_ be formatted as strings. Each key represents an a form field. You can map form fields to attributes in the UI; by default, we assume that a form field maps directly to an attribute name.

                          Customer.io reserves `form_id`, `form_name`, `form_type`, `form_url`, and `form_url_param` keys. If your request includes these keys, Customer.io ignores them.
                      example:
                        email: cool.person@example.com
                        first_name: cool
                        last_name: person
                        fav_food: pizza
                    - title: identify by id
                      type: object
                      required:
                        - id
                      description: Identify the person who submitted your form by ID.
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                          nullable: true
                          example: '42'
                      additionalProperties:
                        x-additionalPropertiesName: Form fields
                        type: string
                        description: |
                          Fields from the form and associated values; values _must_ be formatted as strings. Each key represents an a form field. You can map form fields to attributes in the UI; by default, we assume that a form field maps directly to an attribute name.

                          Customer.io reserves `form_id`, `form_name`, and `form_type` keys. If your request includes these keys, Customer.io ignores them.
                      example:
                        id: 12345
                        first_name: cool
                        last_name: person
                        fav_food: pizza
      responses:
        '204':
          description: Successful requests do not return anything.
        '400':
          description: Invalid or malformed request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    properties:
                      errors:
                        type: array
                        description: An array of errors.
                        items:
                          type: string
                          description: Error descriptions.
        '500':
          description: One or more form values is not formatted as a string.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/api/v1/forms/{form_id}/submit \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)" \
              --header 'content-type: application/json' \
              --data '{"data":{"email":"cool.person@example.com","first_name":"cool","last_name":"person","fav_food":"pizza"}}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "track.customer.io",
              "port": null,
              "path": "/api/v1/forms/{form_id}/submit",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              data: {
                email: 'cool.person@example.com',
                first_name: 'cool',
                last_name: 'person',
                fav_food: 'pizza'
              }
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://track.customer.io/api/v1/forms/{form_id}/submit")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Basic REPLACE_BASIC_AUTH'
            request.body = "{\"data\":{\"email\":\"cool.person@example.com\",\"first_name\":\"cool\",\"last_name\":\"person\",\"fav_food\":\"pizza\"}}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("track.customer.io")

            payload = "{\"data\":{\"email\":\"cool.person@example.com\",\"first_name\":\"cool\",\"last_name\":\"person\",\"fav_food\":\"pizza\"}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/api/v1/forms/{form_id}/submit", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://track.customer.io/api/v1/forms/{form_id}/submit\"\n\n\tpayload := strings.NewReader(\"{\\\"data\\\":{\\\"email\\\":\\\"cool.person@example.com\\\",\\\"first_name\\\":\\\"cool\\\",\\\"last_name\\\":\\\"person\\\",\\\"fav_food\\\":\\\"pizza\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /api/v1/merge_customers:
    post:
      operationId: merge
      tags:
        - Track Customers
      summary: Merge duplicate people
      description: |
        Merge two customer profiles together. The payload contains `primary` and `secondary` profile objects. The primary profile remains after the merge and the secondary is deleted. This operation is _not_ reversible. 

        The following information is merged into the primary profile from the secondary profile:
        * Attributes that are not set, or are empty, on the primary.
        * The most recent 30-days of event history. Events merged from the secondary person cannot trigger campaigns.
        * Manual segments that the primary person did not already belong to.
        * Message delivery history. 
        * Campaign journeys that the primary person has not entered. If the secondary person has started a journey that the primary person has not, the primary person continues on that campaign journey after the merge. If the secondary person has completed journeys that the primary person has not, the primary person gains these historical journeys after the merge. This may be important for determining entry (or re-entry) criteria for subsequent campaigns, segments, etc.
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: Provide identifiers for the `primary` and `secondary` people you want to merge together.
              required:
                - primary
                - secondary
              properties:
                primary:
                  description: The person that you want to remain after the merge, identified by one of `id`, `email`, or `cio_id`. This person receives information from the secondary person in the merge.
                  oneOf:
                    - title: ID
                      type: object
                      maxProperties: 1
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI.
                          example: '42'
                    - title: email
                      type: object
                      maxProperties: 1
                      properties:
                        email:
                          type: string
                          description: The email address of the customer.
                          example: test@example.com
                    - title: cio_id
                      type: object
                      maxProperties: 1
                      properties:
                        cio_id:
                          type: string
                          description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                          example: 786433
                secondary:
                  description: The person that you want to delete after the merge, identified by one of `id`, `email`, or `cio_id`. This person's information is merged into the primary person's profile and then it is deleted.
                  oneOf:
                    - title: ID
                      type: object
                      maxProperties: 1
                      properties:
                        id:
                          type: string
                          description: The ID of a customer profile, analogous to a "person" in the UI.
                          example: '42'
                    - title: email
                      type: object
                      maxProperties: 1
                      properties:
                        email:
                          type: string
                          description: The email address of the customer.
                          example: test@example.com
                    - title: cio_id
                      type: object
                      maxProperties: 1
                      properties:
                        cio_id:
                          type: string
                          description: A unique identifier set by Customer.io, used to reference a person if you want to update their identifiers.
                          example: 786433
            example:
              primary:
                email: cool.person@company.com
              secondary:
                email: cperson@gmail.com
      responses:
        '200':
          description: A successful request returns an empty object response.
        '400':
          description: The request was malformed. You cannot have multiple identifiers (id, email, etc) in the `primary` or `secondary` objects.
          content:
            application/json:
              schema:
                type: object
                properties:
                  meta:
                    type: object
                    description: Contains errors.
                    properties:
                      error:
                        type: string
                        description: Describes the error that caused your request to fail.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/api/v1/merge_customers \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)" \
              --header 'content-type: application/json' \
              --data '{"primary":{"id":"42"},"secondary":{"id":"42"}}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "track.customer.io",
              "port": null,
              "path": "/api/v1/merge_customers",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({primary: {id: '42'}, secondary: {id: '42'}}));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://track.customer.io/api/v1/merge_customers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Basic REPLACE_BASIC_AUTH'
            request.body = "{\"primary\":{\"id\":\"42\"},\"secondary\":{\"id\":\"42\"}}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("track.customer.io")

            payload = "{\"primary\":{\"id\":\"42\"},\"secondary\":{\"id\":\"42\"}}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/api/v1/merge_customers", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://track.customer.io/api/v1/merge_customers\"\n\n\tpayload := strings.NewReader(\"{\\\"primary\\\":{\\\"id\\\":\\\"42\\\"},\\\"secondary\\\":{\\\"id\\\":\\\"42\\\"}}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /api/v1/push/events:
    post:
      summary: Report push metrics
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. It does not require authentication.
      description: |
        Use this endpoint to report device-side push metrics—opened, converted, and delivered—back to Customer.io, so you can track the effectiveness of your push notifications. Customer.io has no way of knowing about these metrics, or associating metrics with a specific message, unless you report them back to us.

        When Customer.io delivers a push notification, we include `CIO-Delivery-ID` and `CIO-Delivery-Token` parameters. Reference these in your payload as the `delivery_id` and `device_id` respectively with the type of device-side `event` metric that you want to associate with your push notification and the person represented by the `device_id`. 
      operationId: pushMetrics
      tags:
        - Track Events
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                delivery_id:
                  type: string
                  description: The CIO-Delivery-ID from the notification that you want to associate the `event` with.
                  example: RPILAgUBcRhIBqSfeiIwdIYJKxTY
                event:
                  type: string
                  enum:
                    - opened
                    - converted
                    - delivered
                  description: The type of device-side event you want to report back to Customer.io.
                device_id:
                  type: string
                  description: The CIO-Delivery-Token representing the device that received the original notification.
                  example: CIO-Delivery-Token from the notification
                timestamp:
                  type: integer
                  format: unix timestamp
                  description: The unix timestamp when the event occurred.
                  example: 1613063089
      responses:
        '200':
          description: The request was received.
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/api/v1/push/events \
              --header 'content-type: application/json' \
              --data '{"delivery_id":"RPILAgUBcRhIBqSfeiIwdIYJKxTY","event":"opened","device_id":"CIO-Delivery-Token from the notification","timestamp":1613063089}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "track.customer.io",
              "port": null,
              "path": "/api/v1/push/events",
              "headers": {
                "content-type": "application/json"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({
              delivery_id: 'RPILAgUBcRhIBqSfeiIwdIYJKxTY',
              event: 'opened',
              device_id: 'CIO-Delivery-Token from the notification',
              timestamp: 1613063089
            }));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://track.customer.io/api/v1/push/events")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request.body = "{\"delivery_id\":\"RPILAgUBcRhIBqSfeiIwdIYJKxTY\",\"event\":\"opened\",\"device_id\":\"CIO-Delivery-Token from the notification\",\"timestamp\":1613063089}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("track.customer.io")

            payload = "{\"delivery_id\":\"RPILAgUBcRhIBqSfeiIwdIYJKxTY\",\"event\":\"opened\",\"device_id\":\"CIO-Delivery-Token from the notification\",\"timestamp\":1613063089}"

            headers = { 'content-type': "application/json" }

            conn.request("POST", "/api/v1/push/events", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://track.customer.io/api/v1/push/events\"\n\n\tpayload := strings.NewReader(\"{\\\"delivery_id\\\":\\\"RPILAgUBcRhIBqSfeiIwdIYJKxTY\\\",\\\"event\\\":\\\"opened\\\",\\\"device_id\\\":\\\"CIO-Delivery-Token from the notification\\\",\\\"timestamp\\\":1613063089}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /api/v1/segments/{segment_id}/add_customers:
    parameters:
      - name: segment_id
        in: path
        required: true
        description: The identifier for a segment. You can find your segment's ID on its page in the dashboard—go to *Segments*, select your segment, and find the ID under *Usage*. Or you can find your segment using the [App API](#tag/Segments).
        schema:
          type: integer
          format: int32
      - name: id_type
        required: false
        in: query
        description: The type of `ids` you want to use. All of the values in the `ids` array must be of this type. If you don't provide this parameter, we assume that the `ids` array contains `id` values.
        schema:
          type: string
          enum:
            - id
            - email
            - cio_id
          default: id
    post:
      tags:
        - Track Segments
      operationId: add_to_segment
      summary: Add people to a manual segment
      description: |
        Add people to a manual segment by ID. You are limited to 1000 customer IDs per request.

        This endpoint requires people to have `id` attributes. If your workspace does not use `id` as an identifier, or you have not assigned people `id` values, you cannot add people to manual segments using the API. Our user interface does not have this limitation. You can add people to manual segments through the UI when you upload a CSV of people or as a part of a campaign. If you pass an `id` that does not belong to anybody in your workspace, we'll ignore it.

        This endpoint lets you add people to manual segments, but a segment must exist before you can add people to it. You can create and find manual segments using the [App API](/docs/api/#operation/createManSegment).

        **NOTE**: You cannot add people to data-driven segments using the API. See [our documentation on segments](/docs/segments) for more information about segments.
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The IDs of people you want to add to the segment.
              required:
                - ids
              properties:
                ids:
                  type: array
                  description: The customer IDs you want to add to the segment.
                  maxItems: 1000
                  minItems: 1
                  items:
                    description: The customer IDs you want to add to the segment.
                    type: string
            example:
              ids:
                - customer_id1
                - customer_id2
      responses:
        '200':
          description: A successful request returns an empty object response.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
        '404':
          description: The segment does not exist. Check the segment ID and try again.
          content:
            application/json:
              schema:
                type: string
                example: Segment not found
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/api/v1/segments/{segment_id}/add_customers \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)" \
              --header 'content-type: application/json' \
              --data '{"ids":["string"]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "track.customer.io",
              "port": null,
              "path": "/api/v1/segments/{segment_id}/add_customers",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ids: ['string']}));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://track.customer.io/api/v1/segments/{segment_id}/add_customers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Basic REPLACE_BASIC_AUTH'
            request.body = "{\"ids\":[\"string\"]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("track.customer.io")

            payload = "{\"ids\":[\"string\"]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/api/v1/segments/{segment_id}/add_customers", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://track.customer.io/api/v1/segments/{segment_id}/add_customers\"\n\n\tpayload := strings.NewReader(\"{\\\"ids\\\":[\\\"string\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
  /api/v1/segments/{segment_id}/remove_customers:
    parameters:
      - name: segment_id
        in: path
        required: true
        description: The identifier for a segment. You can find your segment's ID on its page in the dashboard—go to *Segments*, select your segment, and find the ID under *Usage*. Or you can find your segment using the [App API](#tag/Segments).
        schema:
          type: integer
          format: int32
      - name: id_type
        required: false
        in: query
        description: The type of `ids` you want to use. All of the values in the `ids` array must be of this type. If you don't provide this parameter, we assume that the `ids` array contains `id` values.
        schema:
          type: string
          enum:
            - id
            - email
            - cio_id
          default: id
    post:
      tags:
        - Track Segments
      operationId: remove_from_segment
      summary: Remove people from a manual segment
      description: |
        You can remove users from a manual segment by ID. You are limited to 1000 customer IDs per request.

        This endpoint requires people to have `id` attributes. If your workspace does not use `id` as an identifier, or you have not assigned people `id` values, you cannot remove people from manual segments using the API. Our user interface does not have this limitation. You can remove people from manual segments through the UI as a part of a campaign workflow.

        **NOTE**: You cannot remove people from data-driven segments using the API. See [our documentation on segments](/docs/segments) for more information about segments.
      servers:
        - url: https://track.customer.io
          description: This endpoint is a part of the Track API. Track endpoints use basic authentication with your Site ID as the user name and your secret key as the password.
      security:
        - Basic-Auth-(Tracking-API-Key): []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              description: The IDs of people you want to remove from the segment.
              required:
                - ids
              properties:
                ids:
                  type: array
                  description: The customer IDs you want to remove from the segment.
                  maxItems: 1000
                  minItems: 1
                  items:
                    description: The customer IDs you want to remove from the segment.
                    type: string
            example:
              ids:
                - customer_id1
                - customer_id2
      responses:
        '200':
          description: A successful request returns an empty object response.
        '401':
          description: Unauthorized request. Make sure that you provided the right credentials.
        '404':
          description: The segment does not exist. Check the segment ID and try again.
          content:
            application/json:
              schema:
                type: string
                example: Segment not found
      x-codeSamples:
        - lang: Shell + Curl
          source: |-
            curl --request POST \
              --url https://track.customer.io/api/v1/segments/{segment_id}/remove_customers \
              --header "Authorization: Basic $(echo -n site_id:api_key | base64)" \
              --header 'content-type: application/json' \
              --data '{"ids":["string"]}'
        - lang: Node + Native
          source: |-
            const http = require("https");

            const options = {
              "method": "POST",
              "hostname": "track.customer.io",
              "port": null,
              "path": "/api/v1/segments/{segment_id}/remove_customers",
              "headers": {
                "content-type": "application/json",
                "Authorization": "Basic REPLACE_BASIC_AUTH"
              }
            };

            const req = http.request(options, function (res) {
              const chunks = [];

              res.on("data", function (chunk) {
                chunks.push(chunk);
              });

              res.on("end", function () {
                const body = Buffer.concat(chunks);
                console.log(body.toString());
              });
            });

            req.write(JSON.stringify({ids: ['string']}));
            req.end();
        - lang: Ruby + Native
          source: |-
            require 'uri'
            require 'net/http'
            require 'openssl'

            url = URI("https://track.customer.io/api/v1/segments/{segment_id}/remove_customers")

            http = Net::HTTP.new(url.host, url.port)
            http.use_ssl = true
            http.verify_mode = OpenSSL::SSL::VERIFY_NONE

            request = Net::HTTP::Post.new(url)
            request["content-type"] = 'application/json'
            request["Authorization"] = 'Basic REPLACE_BASIC_AUTH'
            request.body = "{\"ids\":[\"string\"]}"

            response = http.request(request)
            puts response.read_body
        - lang: Python + Python3
          source: |-
            import http.client

            conn = http.client.HTTPSConnection("track.customer.io")

            payload = "{\"ids\":[\"string\"]}"

            headers = {
                'content-type': "application/json",
                'Authorization': "Basic REPLACE_BASIC_AUTH"
                }

            conn.request("POST", "/api/v1/segments/{segment_id}/remove_customers", payload, headers)

            res = conn.getresponse()
            data = res.read()

            print(data.decode("utf-8"))
        - lang: Go + Native
          source: "package main\n\nimport (\n\t\"fmt\"\n\t\"strings\"\n\t\"net/http\"\n\t\"io/ioutil\"\n)\n\nfunc main() {\n\n\turl := \"https://track.customer.io/api/v1/segments/{segment_id}/remove_customers\"\n\n\tpayload := strings.NewReader(\"{\\\"ids\\\":[\\\"string\\\"]}\")\n\n\treq, _ := http.NewRequest(\"POST\", url, payload)\n\n\treq.Header.Add(\"content-type\", \"application/json\")\n\treq.Header.Add(\"Authorization\", \"Basic REPLACE_BASIC_AUTH\")\n\n\tres, _ := http.DefaultClient.Do(req)\n\n\tdefer res.Body.Close()\n\tbody, _ := ioutil.ReadAll(res.Body)\n\n\tfmt.Println(res)\n\tfmt.Println(string(body))\n\n}"
x-webhooks:
  reportingWebhook:
    post:
      summary: Reporting webhook format
      description: Customer.io sends events to your webhook URL in the following format. Events are generally organized by `object_type`—representing the message or Customer.io action (i.e. `email`, `sms`, etc)—and the specific `metric` pertaining to the type (i.e. `sent`, `bounced`, etc).
      operationId: reportingWebhook
      tags:
        - Reporting Webhooks
        - Reporting webhooks
      parameters:
        - name: x-cio-timestamp
          schema:
            type: integer
            format: unix timestamp
          description: The timestamp when the request was sent.
          in: header
          required: true
        - name: x-cio-signature
          in: header
          description: |
            A string combining your webhook signing key with the body of webhook request using an HMAC-SHA256 hash, used to help you [securely verify requests](/docs/webhooks#securely-verifying-requests). 
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - title: Customer
                  description: Events that occur when a customer subscribes or unsubscribes from your messages.
                  type: object
                  required:
                    - event_id
                    - object_type
                    - metric
                    - timestamp
                    - data
                  properties:
                    event_id:
                      type: string
                      description: The unique identifier for the event.
                      example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                    object_type:
                      type: string
                      enum:
                        - customer
                      description: The event represents a customer subscribing or unsubscribing.
                      example: customer
                    metric:
                      type: string
                      enum:
                        - subscribed
                        - unsubscribed
                      description: The metric recorded by the event. For `customer` events, this is whether the customer explicitly subscribed or unsubscribed.
                    timestamp:
                      type: integer
                      format: unix timestamp
                      description: The unix timestamp when the event occurred.
                      example: 1613063089
                    data:
                      description: Contains information about the event, specific to the `object_type` and `metric`.
                      type: object
                      required:
                        - identifiers
                        - customer_id
                        - email_address
                      properties:
                        customer_id:
                          type: string
                          deprecated: true
                          description: |
                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                          example: '42'
                        email_address:
                          type: string
                          description: The email address of the customer.
                          nullable: true
                          example: test@example.com
                        identifiers:
                          type: object
                          description: |
                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                          required:
                            - id
                          properties:
                            id:
                              type: string
                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                              nullable: true
                              example: '42'
                            email:
                              type: string
                              description: The email address of the customer.
                              nullable: true
                              example: test@example.com
                            cio_id:
                              type: string
                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                              example: d9c106000001
                - title: Email
                  description: Events representing an email.
                  oneOf:
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - drafted
                              description: The metric recorded by the event. For `customer` events, this is whether the customer explicitly subscribed or unsubscribed.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - attempted
                              description: An email could not be sent to the delivery provider and will be retried. The `failure_message` provides the reason for the failure.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - sent
                              description: A message was successfully sent.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - delivered
                              description: A message was successfully delivered to a recipient.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - opened
                              description: The recipient opened a message.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - clicked
                              description: The recipient clicked a tracked link in the email.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                    - href
                                    - link_id
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                                    href:
                                      type: string
                                      description: The URL of the link that a person clicked.
                                      example: https://www.customer.io/docs
                                    link_id:
                                      type: integer
                                      description: The identifier for the tracked link that a person clicked or tapped.
                                      example: 1
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - converted
                              description: A person matched a conversion goal attributed to an email.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - unsubscribed
                              description: The recipient unsubscribed based on a particular message.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - bounced
                              description: The delivery provider could not deliver an email.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                    - failure_message
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - dropped
                              description: Customer.io did not send an email because it was addressed to a person who was suppressed.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                    - failure_message
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - spammed
                              description: A recipient marked an email as spam.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - email
                              description: The event relates to an email action.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - failed
                              description: An email couldn't be sent to the delivery provider.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - subject
                                    - failure_message
                                  properties:
                                    subject:
                                      type: string
                                      description: The subject of the email.
                                    recipient:
                                      description: The recipient address for an action.
                                      type: string
                                      example: test@example.com
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                  discriminator:
                    propertyName: metric
                    mapping:
                      drafted: '#/components/schemas/email_drafted'
                      attempted: '#/components/schemas/email_attempted'
                      sent: '#/components/schemas/email_sent'
                      delivered: '#/components/schemas/email_delivered'
                      opened: '#/components/schemas/email_opened'
                      clicked: '#/components/schemas/email_clicked'
                      converted: '#/components/schemas/email_converted'
                      unsubscribed: '#/components/schemas/email_unsubscribed'
                      bounced: '#/components/schemas/email_bounced'
                      dropped: '#/components/schemas/email_dropped'
                      spammed: '#/components/schemas/email_spammed'
                      failed: '#/components/schemas/email_failed'
                - title: Push
                  description: Events representing a push notification.
                  oneOf:
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - attempted
                              description: A push notification was drafted.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              oneOf:
                                - title: API triggered broadcast
                                  required:
                                    - trigger_id
                                    - broadcast_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  type: object
                                  properties:
                                    trigger_id:
                                      type: integer
                                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                      example: 1
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    broadcast_id:
                                      type: integer
                                      description: The identifier for a broadcast.
                                      example: 2
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    parent_action_id:
                                      type: integer
                                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                      example: 1
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                    content:
                                      type: string
                                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                - title: Campaign
                                  type: object
                                  required:
                                    - campaign_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    campaign_id:
                                      description: The identifier for a campaign.
                                      type: integer
                                      readOnly: true
                                      example: 5
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                - title: newsletter
                                  type: object
                                  required:
                                    - newsletter_id
                                    - delivery_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    newsletter_id:
                                      description: The identifier for a newsletter.
                                      type: integer
                                      example: 1
                                    content_id:
                                      description: The identifier for a newsletter variant.
                                      type: integer
                                      example: 3
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - attempted
                              description: A push notification was attempted but unsuccessful. This generally means that we'll try again.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - delivered
                              description: A push notification was delivered to a recipient device.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipients
                                  properties:
                                    recipients:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - device_id
                                          - device_platform
                                        description: Describes the device the push was sent to.
                                        properties:
                                          device_id:
                                            type: string
                                            description: The device identifier/token.
                                          device_platform:
                                            type: string
                                            enum:
                                              - android
                                              - ios
                                            description: The device's operating system.
                                            example: ios
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - sent
                              description: A push notification was sent to a recipient.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipients
                                  properties:
                                    recipients:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - device_id
                                          - device_platform
                                        description: Describes the device the push was sent to.
                                        properties:
                                          device_id:
                                            type: string
                                            description: The device identifier/token.
                                          device_platform:
                                            type: string
                                            enum:
                                              - android
                                              - ios
                                            description: The device's operating system.
                                            example: ios
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - opened
                              description: A device opened a push notification.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              oneOf:
                                - title: API triggered broadcast
                                  required:
                                    - trigger_id
                                    - broadcast_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  type: object
                                  properties:
                                    trigger_id:
                                      type: integer
                                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                      example: 1
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    broadcast_id:
                                      type: integer
                                      description: The identifier for a broadcast.
                                      example: 2
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    parent_action_id:
                                      type: integer
                                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                      example: 1
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                    content:
                                      type: string
                                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                - title: Campaign
                                  type: object
                                  required:
                                    - campaign_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    campaign_id:
                                      description: The identifier for a campaign.
                                      type: integer
                                      readOnly: true
                                      example: 5
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                - title: newsletter
                                  type: object
                                  required:
                                    - newsletter_id
                                    - delivery_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    newsletter_id:
                                      description: The identifier for a newsletter.
                                      type: integer
                                      example: 1
                                    content_id:
                                      description: The identifier for a newsletter variant.
                                      type: integer
                                      example: 3
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - clicked
                              description: A recipient tapped a link in a push notification.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipients
                                    - href
                                    - link_id
                                  properties:
                                    href:
                                      type: string
                                      description: The URL of the link that a person clicked.
                                      example: https://www.customer.io/docs
                                    link_id:
                                      type: integer
                                      description: The identifier for the tracked link that a person clicked or tapped.
                                      example: 1
                                    recipients:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - device_id
                                        description: Describes the device of the recipient who tapped the link.
                                        properties:
                                          device_id:
                                            type: string
                                            description: The device identifier/token.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - converted
                              description: A person matched a conversion goal attributed to a push notification.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipients
                                  properties:
                                    recipients:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - device_id
                                        description: Describes the device of the recipient who tapped the link.
                                        properties:
                                          device_id:
                                            type: string
                                            description: The device identifier/token.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - bounced
                              description: The delivery provider reported at least one invalid device token.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipients
                                  properties:
                                    recipients:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - device_id
                                          - device_platform
                                          - failure_message
                                        description: Describes the device of the recipient who tapped the link.
                                        properties:
                                          device_id:
                                            type: string
                                            description: The device identifier/token.
                                          device_platform:
                                            type: string
                                            enum:
                                              - android
                                              - ios
                                            description: The device's operating system.
                                            example: ios
                                          failure_message:
                                            type: string
                                            description: The reason the push failed for this particular recipient.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - dropped
                              description: A push notification wasn't sent because at least one device token previously bounced.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipients
                                  properties:
                                    recipients:
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - device_id
                                          - device_platform
                                          - failure_message
                                        description: Describes the device of the recipient who tapped the link.
                                        properties:
                                          device_id:
                                            type: string
                                            description: The device identifier/token.
                                          device_platform:
                                            type: string
                                            enum:
                                              - android
                                              - ios
                                            description: The device's operating system.
                                            example: ios
                                          failure_message:
                                            type: string
                                            description: The reason the push failed for this particular recipient.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - push
                              description: The event relates to an push notification.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - failed
                              description: A push notification couldn't be sent to the delivery provider.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                  discriminator:
                    propertyName: metric
                    mapping:
                      drafted: '#/components/schemas/push_drafted'
                      attempted: '#/components/schemas/push_attempted'
                      delivered: '#/components/schemas/push_delivered'
                      sent: '#/components/schemas/push_sent'
                      opened: '#/components/schemas/push_opened'
                      clicked: '#/components/schemas/push_clicked'
                      converted: '#/components/schemas/push_converted'
                      bounced: '#/components/schemas/push_bounced'
                      dropped: '#/components/schemas/push_dropped'
                      failed: '#/components/schemas/push_failed'
                - title: SMS
                  description: Events pertaining to SMS notifications.
                  oneOf:
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - sms
                              description: The event relates to an SMS message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - drafted
                              description: An SMS notification was drafted.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              oneOf:
                                - title: API triggered broadcast
                                  required:
                                    - trigger_id
                                    - broadcast_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  type: object
                                  properties:
                                    trigger_id:
                                      type: integer
                                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                      example: 1
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    broadcast_id:
                                      type: integer
                                      description: The identifier for a broadcast.
                                      example: 2
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    parent_action_id:
                                      type: integer
                                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                      example: 1
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                    content:
                                      type: string
                                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                - title: Campaign
                                  type: object
                                  required:
                                    - campaign_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    campaign_id:
                                      description: The identifier for a campaign.
                                      type: integer
                                      readOnly: true
                                      example: 5
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                - title: newsletter
                                  type: object
                                  required:
                                    - newsletter_id
                                    - delivery_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    newsletter_id:
                                      description: The identifier for a newsletter.
                                      type: integer
                                      example: 1
                                    content_id:
                                      description: The identifier for a newsletter variant.
                                      type: integer
                                      example: 3
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - sms
                              description: The event relates to an SMS message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - attempted
                              description: An SMS could not be sent to the delivery provider, but will retry.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - sms
                              description: The event relates to an SMS message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - sent
                              description: An SMS notification was sent.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                  properties:
                                    recipient:
                                      type: string
                                      description: The MSISDN (phone number) of the SMS recipient.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - sms
                              description: The event relates to an SMS message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - delivered
                              description: An SMS notification was delivered to a recipient.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                  properties:
                                    recipient:
                                      type: string
                                      description: The MSISDN (phone number) of the SMS recipient.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - sms
                              description: The event relates to an SMS message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - clicked
                              description: A recipient tapped a link in an SMS message they received.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - link_id
                                    - href
                                  properties:
                                    recipient:
                                      type: string
                                      description: The MSISDN (phone number) of the SMS recipient.
                                    link_id:
                                      type: integer
                                      description: The identifier for the tracked link that a person clicked or tapped.
                                      example: 1
                                    href:
                                      type: string
                                      description: The URL of the link that a person clicked.
                                      example: https://www.customer.io/docs
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - sms
                              description: The event relates to an SMS message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - converted
                              description: A person matched a conversion goal attributed to an SMS.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                  properties:
                                    recipient:
                                      type: string
                                      description: The MSISDN (phone number) of the SMS recipient.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - sms
                              description: The event relates to an SMS message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - bounced
                              description: The delivery provider was unable to deliver an SMS message.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                                    recipient:
                                      type: string
                                      description: The MSISDN (phone number) of the SMS recipient.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - sms
                              description: The event relates to an SMS message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - failed
                              description: An SMS couldn't be sent to the delivery provider.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                  discriminator:
                    propertyName: metric
                    mapping:
                      drafted: '#/components/schemas/sms_drafted'
                      attempted: '#/components/schemas/sms_attempted'
                      sent: '#/components/schemas/sms_sent'
                      delivered: '#/components/schemas/sms_delivered'
                      clicked: '#/components/schemas/sms_clicked'
                      converted: '#/components/schemas/sms_converted'
                      bounced: '#/components/schemas/sms_bounced'
                      failed: '#/components/schemas/sms_failed'
                - title: Slack
                  description: Events pertaining to Slack messages.
                  oneOf:
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - slack
                              description: The event relates to a Slack message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - drafted
                              description: A slack message was drafted.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              oneOf:
                                - title: API triggered broadcast
                                  required:
                                    - trigger_id
                                    - broadcast_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  type: object
                                  properties:
                                    trigger_id:
                                      type: integer
                                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                      example: 1
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    broadcast_id:
                                      type: integer
                                      description: The identifier for a broadcast.
                                      example: 2
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    parent_action_id:
                                      type: integer
                                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                      example: 1
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                    content:
                                      type: string
                                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                - title: Campaign
                                  type: object
                                  required:
                                    - campaign_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    campaign_id:
                                      description: The identifier for a campaign.
                                      type: integer
                                      readOnly: true
                                      example: 5
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                - title: newsletter
                                  type: object
                                  required:
                                    - newsletter_id
                                    - delivery_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    newsletter_id:
                                      description: The identifier for a newsletter.
                                      type: integer
                                      example: 1
                                    content_id:
                                      description: The identifier for a newsletter variant.
                                      type: integer
                                      example: 3
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - slack
                              description: The event relates to a Slack message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - attempted
                              description: A slack message failed and will be retried.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - slack
                              description: The event relates to a Slack message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - sent
                              description: A slack message was sent.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                  properties:
                                    recipient:
                                      type: string
                                      description: The channel or person that received the message, i.e. `#general`.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - slack
                              description: The event relates to a Slack message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - clicked
                              description: A person clicked a tracked link in a Slack message.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - href
                                    - link_id
                                  properties:
                                    recipient:
                                      type: string
                                      description: The channel or person that received the message, i.e. `#general`.
                                    href:
                                      type: string
                                      description: The URL of the link that a person clicked.
                                      example: https://www.customer.io/docs
                                    link_id:
                                      type: integer
                                      description: The identifier for the tracked link that a person clicked or tapped.
                                      example: 1
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - slack
                              description: The event relates to a Slack message.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - failed
                              description: A slack message failed.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                  discriminator:
                    propertyName: metric
                    mapping:
                      drafted: '#/components/schemas/slack_drafted'
                      attempted: '#/components/schemas/slack_attempted'
                      sent: '#/components/schemas/slack_sent'
                      clicked: '#/components/schemas/slack_clicked'
                      failed: '#/components/schemas/slack_failed'
                - title: Webhook
                  description: Events pertaining to webhooks.
                  oneOf:
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - webhook
                              description: The event relates to a webhook.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - drafted
                              description: A webhook draft was created.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              oneOf:
                                - title: API triggered broadcast
                                  required:
                                    - trigger_id
                                    - broadcast_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  type: object
                                  properties:
                                    trigger_id:
                                      type: integer
                                      description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                      example: 1
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    broadcast_id:
                                      type: integer
                                      description: The identifier for a broadcast.
                                      example: 2
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    parent_action_id:
                                      type: integer
                                      description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                      example: 1
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                    content:
                                      type: string
                                      description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                - title: Campaign
                                  type: object
                                  required:
                                    - campaign_id
                                    - delivery_id
                                    - action_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    action_id:
                                      description: The identifier for an action.
                                      type: integer
                                      readOnly: true
                                      example: 96
                                      nullable: true
                                    campaign_id:
                                      description: The identifier for a campaign.
                                      type: integer
                                      readOnly: true
                                      example: 5
                                      nullable: true
                                    journey_id:
                                      type: integer
                                      description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                      example: 5
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                                - title: newsletter
                                  type: object
                                  required:
                                    - newsletter_id
                                    - delivery_id
                                    - identifiers
                                  properties:
                                    customer_id:
                                      type: string
                                      deprecated: true
                                      description: |
                                        The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                        While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                      example: '42'
                                    delivery_id:
                                      type: string
                                      description: The instance of a message sent to a person.
                                      example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                    newsletter_id:
                                      description: The identifier for a newsletter.
                                      type: integer
                                      example: 1
                                    content_id:
                                      description: The identifier for a newsletter variant.
                                      type: integer
                                      example: 3
                                    identifiers:
                                      type: object
                                      description: |
                                        The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                        Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                      required:
                                        - id
                                      properties:
                                        id:
                                          type: string
                                          description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                          nullable: true
                                          example: '42'
                                        email:
                                          type: string
                                          description: The email address of the customer.
                                          nullable: true
                                          example: test@example.com
                                        cio_id:
                                          type: string
                                          description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                          example: d9c106000001
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - webhook
                              description: The event relates to a webhook.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - attempted
                              description: A webhook failed to send, but will be retried.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - webhook
                              description: The event relates to a webhook.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - sent
                              description: A webhook was sent from Customer.io.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                  properties:
                                    recipient:
                                      type: string
                                      description: The URL the webhook was sent to.
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - webhook
                              description: The event relates to a webhook.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - clicked
                              description: The webhook recipient opened a tracked link in the webhook payload.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - recipient
                                    - link_id
                                    - href
                                  properties:
                                    recipient:
                                      type: string
                                      description: The URL the webhook was sent to.
                                    href:
                                      type: string
                                      description: The URL of the link that a person clicked.
                                      example: https://www.customer.io/docs
                                    link_id:
                                      type: integer
                                      description: The identifier for the tracked link that a person clicked or tapped.
                                      example: 1
                    - allOf:
                        - type: object
                          required:
                            - event_id
                            - object_type
                            - timestamp
                          properties:
                            event_id:
                              type: string
                              description: The unique identifier for the event.
                              example: 01E4C4CT6YDC7Y5M7FE1GWWPQJ
                            object_type:
                              type: string
                              enum:
                                - webhook
                              description: The event relates to a webhook.
                            timestamp:
                              type: integer
                              format: unix timestamp
                              description: The unix timestamp when the event occurred.
                              example: 1613063089
                        - type: object
                          required:
                            - metric
                            - data
                          properties:
                            metric:
                              type: string
                              enum:
                                - failed
                              description: A webhook failed to send.
                            data:
                              description: Contains information about the event, specific to the `object_type` and `metric`.
                              allOf:
                                - description: Contains information about the event, specific to the `object_type` and `metric`.
                                  oneOf:
                                    - title: API triggered broadcast
                                      required:
                                        - trigger_id
                                        - broadcast_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      type: object
                                      properties:
                                        trigger_id:
                                          type: integer
                                          description: The trigger ID returned by the [Trigger Broadcast API](/docs/api/#operation/triggerBroadcast).
                                          example: 1
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        broadcast_id:
                                          type: integer
                                          description: The identifier for a broadcast.
                                          example: 2
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        parent_action_id:
                                          type: integer
                                          description: The ID of the parent action, if the action occurred within a campaign and has a parent (like a randomized split, etc).
                                          example: 1
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                        content:
                                          type: string
                                          description: If your reporting webhook was set up to include content, this contains the body of the message. If the message is an email, this also contains email headers.
                                    - title: Campaign
                                      type: object
                                      required:
                                        - campaign_id
                                        - delivery_id
                                        - action_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        action_id:
                                          description: The identifier for an action.
                                          type: integer
                                          readOnly: true
                                          example: 96
                                          nullable: true
                                        campaign_id:
                                          description: The identifier for a campaign.
                                          type: integer
                                          readOnly: true
                                          example: 5
                                          nullable: true
                                        journey_id:
                                          type: integer
                                          description: The ID for the path a person went through in a Campaign or API Triggered Broadcast workflow.
                                          example: 5
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                    - title: newsletter
                                      type: object
                                      required:
                                        - newsletter_id
                                        - delivery_id
                                        - identifiers
                                      properties:
                                        customer_id:
                                          type: string
                                          deprecated: true
                                          description: |
                                            The ID of the person the webhook event occurred to. Blank if the person in question has been deleted.

                                            While webhooks may still contain this property, you should rely on the newer `identifiers` object wherever possible.
                                          example: '42'
                                        delivery_id:
                                          type: string
                                          description: The instance of a message sent to a person.
                                          example: ZAIAAVTJVG0QcCok0-0ZKj6yiQ==
                                        newsletter_id:
                                          description: The identifier for a newsletter.
                                          type: integer
                                          example: 1
                                        content_id:
                                          description: The identifier for a newsletter variant.
                                          type: integer
                                          example: 3
                                        identifiers:
                                          type: object
                                          description: |
                                            The person the event represents. This object contains all of the identifiers available to people in your workspace, even if they aren't set. If your workspace supports multiple identifiers (email and ID), this object contains `id`, `email` (either of which can be null), and `cio_id`. 

                                            Otherwise, if your workspace only supports ID, this object just contains the `id` of the person the event represents.
                                          required:
                                            - id
                                          properties:
                                            id:
                                              type: string
                                              description: The ID of a customer profile, analogous to a "person" in the UI. If your workspace supports multiple identifiers (email and ID), this value can be null.
                                              nullable: true
                                              example: '42'
                                            email:
                                              type: string
                                              description: The email address of the customer.
                                              nullable: true
                                              example: test@example.com
                                            cio_id:
                                              type: string
                                              description: The canonical identifier for a person, present only if your workspace supports multiple identifiers (email and ID). This value exists to keep a record of a person in your workspace across changes to their other identifiers.
                                              example: d9c106000001
                                - type: object
                                  required:
                                    - failure_message
                                  properties:
                                    failure_message:
                                      type: string
                                      description: Indicates the reason that an attempted message failed.
                                      example: Something went wrong!
                  discriminator:
                    propertyName: metric
                    mapping:
                      drafted: '#/components/schemas/webhook_drafted'
                      attempted: '#/components/schemas/webhook_attempted'
                      sent: '#/components/schemas/webhook_sent'
                      clicked: '#/components/schemas/webhook_clicked'
                      failed: '#/components/schemas/webhook_failed'
